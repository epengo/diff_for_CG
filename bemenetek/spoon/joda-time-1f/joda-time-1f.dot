digraph graphname {
rankdir="LR";
311 [label="org.joda.time.base.BasePeriod.<clinit>()"]
2807 [label="org.joda.time.DateTimeFieldType.<clinit>()"]
2841 [label="org.joda.time.DateTimeZone.<clinit>()"]
2913 [label="org.joda.time.Duration.<clinit>()"]
3703 [label="org.joda.time.Period.<clinit>()"]
2816 [label="org.joda.time.DateTimeUtils.<clinit>()"]
3776 [label="org.joda.time.PeriodType.<clinit>()"]
2944 [label="org.joda.time.DurationFieldType.<clinit>()"]
3044 [label="org.joda.time.LocalDate.<clinit>()"]
3984 [label="org.joda.time.YearMonthDay.<clinit>()"]
3840 [label="org.joda.time.TimeOfDay.<clinit>()"]
3301 [label="org.joda.time.LocalTime.<clinit>()"]
2791 [label="org.joda.time.DateTimeComparator.<clinit>()"]
2877 [label="org.joda.time.Days.<clinit>()"]
3893 [label="org.joda.time.Weeks.<clinit>()"]
2947 [label="org.joda.time.Hours.<clinit>()"]
3368 [label="org.joda.time.Minutes.<clinit>()"]
3802 [label="org.joda.time.Seconds.<clinit>()"]
3406 [label="org.joda.time.MonthDay.<clinit>()"]
3448 [label="org.joda.time.Months.<clinit>()"]
3928 [label="org.joda.time.YearMonth.<clinit>()"]
4033 [label="org.joda.time.Years.<clinit>()"]
1794 [label="org.joda.time.format.DateTimeFormat.<clinit>()"]
2087 [label="org.joda.time.format.FormatUtils.<clinit>()"]
1768 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.<clinit>()"]
1949 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.<clinit>()"]
1999 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.<clinit>()"]
2095 [label="org.joda.time.format.ISODateTimeFormat$Constants.<clinit>()"]
2194 [label="org.joda.time.format.PeriodFormat.<clinit>()"]
2268 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.<clinit>()"]
994 [label="org.joda.time.chrono.ISOChronology.<clinit>()"]
923 [label="org.joda.time.chrono.GJLocaleSymbols.<clinit>()"]
523 [label="org.joda.time.chrono.BasicChronology.<clinit>()"]
726 [label="org.joda.time.chrono.BuddhistChronology.<clinit>()"]
842 [label="org.joda.time.chrono.GJChronology.<clinit>()"]
748 [label="org.joda.time.chrono.CopticChronology.<clinit>()"]
759 [label="org.joda.time.chrono.EthiopicChronology.<clinit>()"]
980 [label="org.joda.time.chrono.GregorianChronology.<clinit>()"]
1045 [label="org.joda.time.chrono.JulianChronology.<clinit>()"]
1005 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.<clinit>()"]
1021 [label="org.joda.time.chrono.IslamicChronology.<clinit>()"]
1601 [label="org.joda.time.field.MillisDurationField.<clinit>()"]
1228 [label="org.joda.time.convert.CalendarConverter.<clinit>()"]
1277 [label="org.joda.time.convert.DateConverter.<clinit>()"]
1280 [label="org.joda.time.convert.LongConverter.<clinit>()"]
1285 [label="org.joda.time.convert.NullConverter.<clinit>()"]
1292 [label="org.joda.time.convert.ReadableDurationConverter.<clinit>()"]
1297 [label="org.joda.time.convert.ReadableInstantConverter.<clinit>()"]
1302 [label="org.joda.time.convert.ReadableIntervalConverter.<clinit>()"]
1310 [label="org.joda.time.convert.ReadablePartialConverter.<clinit>()"]
1315 [label="org.joda.time.convert.ReadablePeriodConverter.<clinit>()"]
1319 [label="org.joda.time.convert.StringConverter.<clinit>()"]
2325 [label="org.joda.time.tz.CachedDateTimeZone.<clinit>()"]
2382 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.<clinit>()"]
2511 [label="org.joda.time.tz.ZoneInfoCompiler.<clinit>()"]
2463 [label="org.joda.time.tz.DefaultNameProvider.<initblock>()"]
643 [label="java.lang.Math.abs(int)"]
645 [label="java.lang.Math.abs(long)"]
3014 [label="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)"]
863 [label="java.util.ArrayList.add(E)"]
1963 [label="java.util.Set.add(E)"]
2022 [label="java.util.List.add(E)"]
2276 [label="java.util.TreeSet.add(E)"]
3475 [label="org.joda.time.MutableDateTime$Property.add(int)"]
3625 [label="org.joda.time.MutablePeriod.add(int,int,int,int,int,int,int,int)"]
3505 [label="org.joda.time.MutableDateTime.add(long)"]
3638 [label="org.joda.time.MutablePeriod.add(long)"]
3478 [label="org.joda.time.MutableDateTime$Property.add(long)"]
782 [label="org.joda.time.DateTimeField.add(long,int)"]
479 [label="org.joda.time.DurationField.add(long,int)"]
710 [label="org.joda.time.chrono.BasicYearDateTimeField.add(long,int)"]
965 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,int)"]
691 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)"]
642 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)"]
781 [label="org.joda.time.chrono.GJChronology$CutoverField.add(long,int)"]
830 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)"]
838 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.add(long,int)"]
1009 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,int)"]
1086 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.add(long,int)"]
1095 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.add(long,int)"]
1156 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)"]
1175 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)"]
1739 [label="org.joda.time.field.UnsupportedDurationField.add(long,int)"]
1696 [label="org.joda.time.field.UnsupportedDateTimeField.add(long,int)"]
1637 [label="org.joda.time.field.PreciseDurationField.add(long,int)"]
1749 [label="org.joda.time.field.ZeroIsMaxDateTimeField.add(long,int)"]
1616 [label="org.joda.time.field.OffsetDateTimeField.add(long,int)"]
1568 [label="org.joda.time.field.DividedDateTimeField.add(long,int)"]
1590 [label="org.joda.time.field.ImpreciseDateTimeField.add(long,int)"]
1419 [label="org.joda.time.field.BaseDateTimeField.add(long,int)"]
1498 [label="org.joda.time.field.DelegatedDateTimeField.add(long,int)"]
1474 [label="org.joda.time.field.DecoratedDurationField.add(long,int)"]
1552 [label="org.joda.time.field.DelegatedDurationField.add(long,int)"]
1663 [label="org.joda.time.field.ScaledDurationField.add(long,int)"]
1593 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.add(long,int)"]
1606 [label="org.joda.time.field.MillisDurationField.add(long,int)"]
784 [label="org.joda.time.DateTimeField.add(long,long)"]
481 [label="org.joda.time.DurationField.add(long,long)"]
712 [label="org.joda.time.chrono.BasicYearDateTimeField.add(long,long)"]
966 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,long)"]
693 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,long)"]
644 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)"]
783 [label="org.joda.time.chrono.GJChronology$CutoverField.add(long,long)"]
831 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)"]
839 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.add(long,long)"]
1010 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,long)"]
1087 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.add(long,long)"]
1096 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.add(long,long)"]
1159 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)"]
1178 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)"]
1740 [label="org.joda.time.field.UnsupportedDurationField.add(long,long)"]
1697 [label="org.joda.time.field.UnsupportedDateTimeField.add(long,long)"]
1638 [label="org.joda.time.field.PreciseDurationField.add(long,long)"]
1750 [label="org.joda.time.field.ZeroIsMaxDateTimeField.add(long,long)"]
1617 [label="org.joda.time.field.OffsetDateTimeField.add(long,long)"]
1569 [label="org.joda.time.field.DividedDateTimeField.add(long,long)"]
1592 [label="org.joda.time.field.ImpreciseDateTimeField.add(long,long)"]
1421 [label="org.joda.time.field.BaseDateTimeField.add(long,long)"]
1499 [label="org.joda.time.field.DelegatedDateTimeField.add(long,long)"]
1475 [label="org.joda.time.field.DecoratedDurationField.add(long,long)"]
1553 [label="org.joda.time.field.DelegatedDurationField.add(long,long)"]
1664 [label="org.joda.time.field.ScaledDurationField.add(long,long)"]
1594 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.add(long,long)"]
1607 [label="org.joda.time.field.MillisDurationField.add(long,long)"]
2625 [label="org.joda.time.Chronology.add(long,long,int)"]
482 [label="org.joda.time.chrono.BaseChronology.add(long,long,int)"]
3639 [label="org.joda.time.MutablePeriod.add(long,org.joda.time.Chronology)"]
3512 [label="org.joda.time.MutableDateTime.add(org.joda.time.DurationFieldType,int)"]
3624 [label="org.joda.time.MutablePeriod.add(org.joda.time.DurationFieldType,int)"]
3506 [label="org.joda.time.MutableDateTime.add(org.joda.time.ReadableDuration)"]
3637 [label="org.joda.time.MutablePeriod.add(org.joda.time.ReadableDuration)"]
3507 [label="org.joda.time.MutableDateTime.add(org.joda.time.ReadableDuration,int)"]
3634 [label="org.joda.time.MutablePeriod.add(org.joda.time.ReadableInterval)"]
1424 [label="org.joda.time.DateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
646 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
785 [label="org.joda.time.chrono.GJChronology$CutoverField.add(org.joda.time.ReadablePartial,int,int[],int)"]
1698 [label="org.joda.time.field.UnsupportedDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
649 [label="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
1500 [label="org.joda.time.field.DelegatedDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
3508 [label="org.joda.time.MutableDateTime.add(org.joda.time.ReadablePeriod)"]
389 [label="org.joda.time.MutablePeriod.add(org.joda.time.ReadablePeriod)"]
3509 [label="org.joda.time.MutableDateTime.add(org.joda.time.ReadablePeriod,int)"]
271 [label="org.joda.time.Chronology.add(org.joda.time.ReadablePeriod,long,int)"]
480 [label="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)"]
1247 [label="org.joda.time.convert.ConverterSet.add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])"]
2021 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.addArrayToList(java.util.List,java.lang.Object[])"]
2294 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.addArrayToList(java.util.List,java.lang.Object[])"]
3286 [label="org.joda.time.LocalTime$Property.addCopy(int)"]
3288 [label="org.joda.time.LocalTime$Property.addCopy(long)"]
2447 [label="org.joda.time.tz.DateTimeZoneBuilder.addCutover(int,char,int,int,int,boolean,int)"]
2493 [label="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.addCutover(org.joda.time.tz.DateTimeZoneBuilder,int)"]
3524 [label="org.joda.time.MutableDateTime.addDays(int)"]
3649 [label="org.joda.time.MutablePeriod.addDays(int)"]
1258 [label="org.joda.time.convert.ConverterManager.addDurationConverter(org.joda.time.convert.DurationConverter)"]
358 [label="org.joda.time.base.BasePeriod.addField(org.joda.time.DurationFieldType,int)"]
359 [label="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)"]
3526 [label="org.joda.time.MutableDateTime.addHours(int)"]
3651 [label="org.joda.time.MutablePeriod.addHours(int)"]
3747 [label="org.joda.time.PeriodType.addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)"]
1245 [label="org.joda.time.convert.ConverterManager.addInstantConverter(org.joda.time.convert.InstantConverter)"]
1266 [label="org.joda.time.convert.ConverterManager.addIntervalConverter(org.joda.time.convert.IntervalConverter)"]
3535 [label="org.joda.time.MutableDateTime.addMillis(int)"]
3657 [label="org.joda.time.MutablePeriod.addMillis(int)"]
3529 [label="org.joda.time.MutableDateTime.addMinutes(int)"]
3653 [label="org.joda.time.MutablePeriod.addMinutes(int)"]
3518 [label="org.joda.time.MutableDateTime.addMonths(int)"]
3645 [label="org.joda.time.MutablePeriod.addMonths(int)"]
3289 [label="org.joda.time.LocalTime$Property.addNoWrapToCopy(int)"]
3833 [label="org.joda.time.TimeOfDay$Property.addNoWrapToCopy(int)"]
932 [label="org.joda.time.chrono.GJLocaleSymbols.addNumerals(java.util.TreeMap,int,int,java.lang.Integer[])"]
1152 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.addOffset(long)"]
1254 [label="org.joda.time.convert.ConverterManager.addPartialConverter(org.joda.time.convert.PartialConverter)"]
363 [label="org.joda.time.base.BasePeriod.addPeriod(org.joda.time.ReadablePeriod)"]
1262 [label="org.joda.time.convert.ConverterManager.addPeriodConverter(org.joda.time.convert.PeriodConverter)"]
364 [label="org.joda.time.base.BasePeriod.addPeriodInto(int[],org.joda.time.ReadablePeriod)"]
2497 [label="org.joda.time.tz.ZoneInfoCompiler$Rule.addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String)"]
2501 [label="org.joda.time.tz.ZoneInfoCompiler$RuleSet.addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String)"]
2492 [label="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String,int,int,int)"]
2454 [label="org.joda.time.tz.DateTimeZoneBuilder.addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int)"]
2385 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.addRule(org.joda.time.tz.DateTimeZoneBuilder$Rule)"]
2500 [label="org.joda.time.tz.ZoneInfoCompiler$RuleSet.addRule(org.joda.time.tz.ZoneInfoCompiler$Rule)"]
3532 [label="org.joda.time.MutableDateTime.addSeconds(int)"]
3655 [label="org.joda.time.MutablePeriod.addSeconds(int)"]
930 [label="org.joda.time.chrono.GJLocaleSymbols.addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])"]
2506 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)"]
2507 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)"]
2584 [label="org.joda.time.DateMidnight$Property.addToCopy(int)"]
2675 [label="org.joda.time.DateTime$Property.addToCopy(int)"]
3031 [label="org.joda.time.LocalDate$Property.addToCopy(int)"]
3147 [label="org.joda.time.LocalDateTime$Property.addToCopy(int)"]
3400 [label="org.joda.time.MonthDay$Property.addToCopy(int)"]
3664 [label="org.joda.time.Partial$Property.addToCopy(int)"]
3831 [label="org.joda.time.TimeOfDay$Property.addToCopy(int)"]
3922 [label="org.joda.time.YearMonth$Property.addToCopy(int)"]
3976 [label="org.joda.time.YearMonthDay$Property.addToCopy(int)"]
2586 [label="org.joda.time.DateMidnight$Property.addToCopy(long)"]
2677 [label="org.joda.time.DateTime$Property.addToCopy(long)"]
3149 [label="org.joda.time.LocalDateTime$Property.addToCopy(long)"]
2456 [label="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)"]
3520 [label="org.joda.time.MutableDateTime.addWeeks(int)"]
3647 [label="org.joda.time.MutablePeriod.addWeeks(int)"]
3516 [label="org.joda.time.MutableDateTime.addWeekyears(int)"]
3479 [label="org.joda.time.MutableDateTime$Property.addWrapField(int)"]
968 [label="org.joda.time.DateTimeField.addWrapField(long,int)"]
713 [label="org.joda.time.chrono.BasicYearDateTimeField.addWrapField(long,int)"]
967 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(long,int)"]
694 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.addWrapField(long,int)"]
650 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.addWrapField(long,int)"]
1011 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(long,int)"]
1097 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.addWrapField(long,int)"]
1179 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)"]
1700 [label="org.joda.time.field.UnsupportedDateTimeField.addWrapField(long,int)"]
1631 [label="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)"]
1751 [label="org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(long,int)"]
1618 [label="org.joda.time.field.OffsetDateTimeField.addWrapField(long,int)"]
1570 [label="org.joda.time.field.DividedDateTimeField.addWrapField(long,int)"]
1646 [label="org.joda.time.field.RemainderDateTimeField.addWrapField(long,int)"]
1428 [label="org.joda.time.field.BaseDateTimeField.addWrapField(long,int)"]
1502 [label="org.joda.time.field.DelegatedDateTimeField.addWrapField(long,int)"]
970 [label="org.joda.time.DateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
969 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1012 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1701 [label="org.joda.time.field.UnsupportedDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1752 [label="org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1432 [label="org.joda.time.field.BaseDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1503 [label="org.joda.time.field.DelegatedDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
2587 [label="org.joda.time.DateMidnight$Property.addWrapFieldToCopy(int)"]
2678 [label="org.joda.time.DateTime$Property.addWrapFieldToCopy(int)"]
3033 [label="org.joda.time.LocalDate$Property.addWrapFieldToCopy(int)"]
3150 [label="org.joda.time.LocalDateTime$Property.addWrapFieldToCopy(int)"]
3290 [label="org.joda.time.LocalTime$Property.addWrapFieldToCopy(int)"]
3402 [label="org.joda.time.MonthDay$Property.addWrapFieldToCopy(int)"]
3667 [label="org.joda.time.Partial$Property.addWrapFieldToCopy(int)"]
3834 [label="org.joda.time.TimeOfDay$Property.addWrapFieldToCopy(int)"]
3924 [label="org.joda.time.YearMonth$Property.addWrapFieldToCopy(int)"]
3978 [label="org.joda.time.YearMonthDay$Property.addWrapFieldToCopy(int)"]
1427 [label="org.joda.time.DateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)"]
1699 [label="org.joda.time.field.UnsupportedDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)"]
1426 [label="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)"]
1501 [label="org.joda.time.field.DelegatedDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)"]
3514 [label="org.joda.time.MutableDateTime.addYears(int)"]
3643 [label="org.joda.time.MutablePeriod.addYears(int)"]
2715 [label="org.joda.time.DateTimeZone.adjustOffset(long,boolean)"]
1047 [label="org.joda.time.chrono.JulianChronology.adjustYearForSet(int)"]
2186 [label="org.joda.time.format.ISOPeriodFormat.alternate()"]
2189 [label="org.joda.time.format.ISOPeriodFormat.alternateExtended()"]
2193 [label="org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks()"]
2191 [label="org.joda.time.format.ISOPeriodFormat.alternateWithWeeks()"]
79 [label="java.lang.StringBuffer.append(char)"]
545 [label="java.lang.StringBuilder.append(char)"]
876 [label="java.lang.StringBuffer.append(int)"]
547 [label="java.lang.StringBuilder.append(int)"]
1869 [label="java.lang.Appendable.append(java.lang.CharSequence)"]
1073 [label="java.lang.StringBuffer.append(java.lang.Object)"]
2977 [label="java.lang.StringBuilder.append(java.lang.Object)"]
74 [label="java.lang.StringBuffer.append(java.lang.String)"]
544 [label="java.lang.StringBuilder.append(java.lang.String)"]
2038 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatter)"]
2042 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeParser)"]
2040 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter)"]
2044 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)"]
2045 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])"]
2300 [label="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatter)"]
2303 [label="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)"]
2047 [label="org.joda.time.format.DateTimeFormatterBuilder.append0(java.lang.Object)"]
2039 [label="org.joda.time.format.DateTimeFormatterBuilder.append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)"]
2302 [label="org.joda.time.format.PeriodFormatterBuilder.append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)"]
1817 [label="org.joda.time.format.DateTimeFormatterBuilder.appendCenturyOfEra(int,int)"]
1832 [label="org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfDay(int)"]
1830 [label="org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday(int)"]
1828 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfMonth(int)"]
1837 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek(int)"]
1839 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekShortText()"]
1838 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekText()"]
1840 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfYear(int)"]
2180 [label="org.joda.time.format.PeriodFormatterBuilder.appendDays()"]
2048 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)"]
1816 [label="org.joda.time.format.DateTimeFormatterBuilder.appendEraText()"]
2306 [label="org.joda.time.format.PeriodFormatterBuilder.appendField(int)"]
2309 [label="org.joda.time.format.PeriodFormatterBuilder.appendField(int,int)"]
2049 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.DateTimeFieldType,int)"]
2051 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int)"]
2054 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)"]
2057 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfDay(int,int)"]
2056 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfHour(int,int)"]
2055 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfMinute(int,int)"]
1836 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfSecond(int,int)"]
1829 [label="org.joda.time.format.DateTimeFormatterBuilder.appendHalfdayOfDayText()"]
1831 [label="org.joda.time.format.DateTimeFormatterBuilder.appendHourOfDay(int)"]
1833 [label="org.joda.time.format.DateTimeFormatterBuilder.appendHourOfHalfday(int)"]
2182 [label="org.joda.time.format.PeriodFormatterBuilder.appendHours()"]
1846 [label="org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(char)"]
1848 [label="org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(java.lang.String)"]
2175 [label="org.joda.time.format.PeriodFormatterBuilder.appendLiteral(java.lang.String)"]
2205 [label="org.joda.time.format.PeriodFormatterBuilder.appendMillis()"]
2308 [label="org.joda.time.format.PeriodFormatterBuilder.appendMillis3Digit()"]
2059 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfDay(int)"]
2058 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfSecond(int)"]
2061 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfDay(int)"]
1834 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfHour(int)"]
2183 [label="org.joda.time.format.PeriodFormatterBuilder.appendMinutes()"]
1827 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYear(int)"]
1826 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearShortText()"]
1825 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearText()"]
2178 [label="org.joda.time.format.PeriodFormatterBuilder.appendMonths()"]
2046 [label="org.joda.time.format.DateTimeFormatterBuilder.appendOptional(org.joda.time.format.DateTimeParser)"]
1931 [label="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,int,int)"]
2090 [label="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,long,int)"]
2068 [label="org.joda.time.format.DateTimeFormatterBuilder.appendPattern(java.lang.String)"]
1812 [label="org.joda.time.format.DateTimeFormat.appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)"]
2192 [label="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String)"]
2305 [label="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String,java.lang.String)"]
2304 [label="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2060 [label="org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfDay(int)"]
1835 [label="org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfMinute(int)"]
2204 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeconds()"]
2307 [label="org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithMillis()"]
2184 [label="org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis()"]
2190 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String)"]
2315 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String)"]
2203 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[])"]
2313 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)"]
2170 [label="org.joda.time.format.ISODateTimeFormat.appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)"]
2181 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter(java.lang.String)"]
2314 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsBefore(java.lang.String)"]
2053 [label="org.joda.time.format.DateTimeFormatterBuilder.appendShortText(org.joda.time.DateTimeFieldType)"]
2050 [label="org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)"]
2177 [label="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String)"]
2202 [label="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String,java.lang.String)"]
2310 [label="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2052 [label="org.joda.time.format.DateTimeFormatterBuilder.appendText(org.joda.time.DateTimeFieldType)"]
1845 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneId()"]
1842 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName()"]
2065 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(java.util.Map)"]
2067 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneOffset(java.lang.String,boolean,int,int)"]
1844 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)"]
2066 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName()"]
1843 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(java.util.Map)"]
2063 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(int)"]
1820 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(int,boolean)"]
2062 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(int)"]
1821 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(int,boolean)"]
1932 [label="org.joda.time.format.DateTimeFormatterBuilder.appendUnknownString(java.lang.StringBuffer,int)"]
1924 [label="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,int)"]
75 [label="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,long)"]
1841 [label="org.joda.time.format.DateTimeFormatterBuilder.appendWeekOfWeekyear(int)"]
2179 [label="org.joda.time.format.PeriodFormatterBuilder.appendWeeks()"]
1822 [label="org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear(int,int)"]
1823 [label="org.joda.time.format.DateTimeFormatterBuilder.appendYear(int,int)"]
2064 [label="org.joda.time.format.DateTimeFormatterBuilder.appendYearOfCentury(int,int)"]
1824 [label="org.joda.time.format.DateTimeFormatterBuilder.appendYearOfEra(int,int)"]
2176 [label="org.joda.time.format.PeriodFormatterBuilder.appendYears()"]
303 [label="java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)"]
3698 [label="java.util.Arrays.asList(T[])"]
999 [label="org.joda.time.chrono.ISOChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
428 [label="org.joda.time.chrono.AssembledChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
549 [label="org.joda.time.chrono.BasicChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
743 [label="org.joda.time.chrono.BuddhistChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
877 [label="org.joda.time.chrono.GJChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1126 [label="org.joda.time.chrono.LimitChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
757 [label="org.joda.time.chrono.CopticChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1213 [label="org.joda.time.chrono.ZonedChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
767 [label="org.joda.time.chrono.EthiopicChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
985 [label="org.joda.time.chrono.GregorianChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1055 [label="org.joda.time.chrono.JulianChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1044 [label="org.joda.time.chrono.IslamicChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1060 [label="org.joda.time.chrono.LenientChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1139 [label="org.joda.time.chrono.StrictChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
2133 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicDate()"]
2138 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicDateTime()"]
2139 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicDateTimeNoMillis()"]
2140 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDate()"]
2141 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDateTime()"]
2142 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDateTimeNoMillis()"]
2136 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicTTime()"]
2137 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicTTimeNoMillis()"]
2134 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicTime()"]
2135 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicTimeNoMillis()"]
2143 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDate()"]
2144 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDateTime()"]
2145 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDateTimeNoMillis()"]
366 [label="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)"]
369 [label="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)"]
2424 [label="java.util.Arrays.binarySearch(long[],long)"]
2445 [label="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)"]
2397 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(java.lang.String)"]
2093 [label="org.joda.time.format.FormatUtils.calculateDigitCount(long)"]
595 [label="org.joda.time.chrono.BasicChronology.calculateFirstDayOfYearMillis(int)"]
756 [label="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)"]
766 [label="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)"]
986 [label="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)"]
1053 [label="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)"]
1042 [label="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)"]
2224 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.calculatePrintedLength(int)"]
2230 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.calculatePrintedLength(int)"]
2236 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(int)"]
2237 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.calculatePrintedLength(int)"]
2218 [label="org.joda.time.format.PeriodPrinter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2250 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2270 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2282 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2290 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2032 [label="org.joda.time.format.DateTimeFormatterBuilder.canBuildFormatter()"]
2035 [label="org.joda.time.format.DateTimeFormatterBuilder.canBuildParser()"]
2034 [label="org.joda.time.format.DateTimeFormatterBuilder.canBuildPrinter()"]
407 [label="org.joda.time.Chronology.centuries()"]
508 [label="org.joda.time.DurationFieldType.centuries()"]
439 [label="org.joda.time.chrono.BaseChronology.centuries()"]
509 [label="org.joda.time.DateTimeFieldType.centuryOfEra()"]
11 [label="org.joda.time.Chronology.centuryOfEra()"]
2774 [label="org.joda.time.DateTime.centuryOfEra()"]
3544 [label="org.joda.time.MutableDateTime.centuryOfEra()"]
3127 [label="org.joda.time.LocalDate.centuryOfEra()"]
3263 [label="org.joda.time.LocalDateTime.centuryOfEra()"]
2660 [label="org.joda.time.DateMidnight.centuryOfEra()"]
462 [label="org.joda.time.chrono.BaseChronology.centuryOfEra()"]
892 [label="org.joda.time.chrono.AssembledChronology.centuryOfEra()"]
2505 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.chain(java.util.StringTokenizer)"]
1327 [label="java.lang.String.charAt(int)"]
1259 [label="org.joda.time.convert.ConverterManager.checkAlterDurationConverters()"]
1246 [label="org.joda.time.convert.ConverterManager.checkAlterInstantConverters()"]
1267 [label="org.joda.time.convert.ConverterManager.checkAlterIntervalConverters()"]
1255 [label="org.joda.time.convert.ConverterManager.checkAlterPartialConverters()"]
1263 [label="org.joda.time.convert.ConverterManager.checkAlterPeriodConverters()"]
342 [label="org.joda.time.base.BasePeriod.checkAndUpdate(org.joda.time.DurationFieldType,int[],int)"]
225 [label="org.joda.time.base.BaseDateTime.checkChronology(org.joda.time.Chronology)"]
226 [label="org.joda.time.base.BaseDateTime.checkInstant(long,org.joda.time.Chronology)"]
2617 [label="org.joda.time.DateMidnight.checkInstant(long,org.joda.time.Chronology)"]
123 [label="org.joda.time.base.AbstractInterval.checkInterval(long,long)"]
1077 [label="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)"]
2171 [label="org.joda.time.format.ISODateTimeFormat.checkNotStrictISO(java.util.Collection,boolean)"]
2219 [label="org.joda.time.format.PeriodFormatter.checkParser()"]
2043 [label="org.joda.time.format.DateTimeFormatterBuilder.checkParser(org.joda.time.format.DateTimeParser)"]
2213 [label="org.joda.time.format.PeriodFormatter.checkPeriod(org.joda.time.ReadablePeriod)"]
313 [label="org.joda.time.base.BasePeriod.checkPeriodType(org.joda.time.PeriodType)"]
2823 [label="org.joda.time.DateTimeUtils.checkPermission()"]
1252 [label="java.lang.SecurityManager.checkPermission(java.security.Permission)"]
2212 [label="org.joda.time.format.PeriodFormatter.checkPrinter()"]
2041 [label="org.joda.time.format.DateTimeFormatterBuilder.checkPrinter(org.joda.time.format.DateTimePrinter)"]
3768 [label="org.joda.time.Period.checkYearsAndMonths(java.lang.String)"]
3610 [label="org.joda.time.MutablePeriod.clear()"]
1332 [label="org.joda.time.ReadWritablePeriod.clear()"]
3205 [label="java.util.Calendar.clear()"]
2037 [label="java.util.ArrayList.clear()"]
2299 [label="java.util.List.clear()"]
2036 [label="org.joda.time.format.DateTimeFormatterBuilder.clear()"]
2295 [label="org.joda.time.format.PeriodFormatterBuilder.clear()"]
2301 [label="org.joda.time.format.PeriodFormatterBuilder.clearPrefix()"]
492 [label="org.joda.time.DateTimeFieldType.clockhourOfDay()"]
410 [label="org.joda.time.Chronology.clockhourOfDay()"]
448 [label="org.joda.time.chrono.BaseChronology.clockhourOfDay()"]
887 [label="org.joda.time.chrono.AssembledChronology.clockhourOfDay()"]
495 [label="org.joda.time.DateTimeFieldType.clockhourOfHalfday()"]
412 [label="org.joda.time.Chronology.clockhourOfHalfday()"]
450 [label="org.joda.time.chrono.BaseChronology.clockhourOfHalfday()"]
888 [label="org.joda.time.chrono.AssembledChronology.clockhourOfHalfday()"]
300 [label="java.lang.Object.clone()"]
3562 [label="org.joda.time.MutableDateTime.clone()"]
3588 [label="org.joda.time.MutableInterval.clone()"]
3659 [label="org.joda.time.MutablePeriod.clone()"]
2542 [label="java.io.BufferedReader.close()"]
2548 [label="java.io.OutputStream.close()"]
2550 [label="java.io.InputStream.close()"]
2552 [label="java.io.FilterOutputStream.close()"]
2576 [label="java.io.FilterInputStream.close()"]
2795 [label="org.joda.time.DateTimeComparator.compare(java.lang.Object,java.lang.Object)"]
2076 [label="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)"]
1558 [label="java.lang.Comparable.compareTo(T)"]
1461 [label="org.joda.time.field.BaseDurationField.compareTo(org.joda.time.DurationField)"]
1557 [label="org.joda.time.field.DelegatedDurationField.compareTo(org.joda.time.DurationField)"]
1610 [label="org.joda.time.field.MillisDurationField.compareTo(org.joda.time.DurationField)"]
66 [label="org.joda.time.base.AbstractDuration.compareTo(org.joda.time.ReadableDuration)"]
108 [label="org.joda.time.base.AbstractInstant.compareTo(org.joda.time.ReadableInstant)"]
1364 [label="org.joda.time.field.AbstractPartialFieldProperty.compareTo(org.joda.time.ReadableInstant)"]
1399 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.compareTo(org.joda.time.ReadableInstant)"]
184 [label="org.joda.time.base.AbstractPartial.compareTo(org.joda.time.ReadablePartial)"]
3076 [label="org.joda.time.LocalDate.compareTo(org.joda.time.ReadablePartial)"]
3191 [label="org.joda.time.LocalDateTime.compareTo(org.joda.time.ReadablePartial)"]
3331 [label="org.joda.time.LocalTime.compareTo(org.joda.time.ReadablePartial)"]
1366 [label="org.joda.time.field.AbstractPartialFieldProperty.compareTo(org.joda.time.ReadablePartial)"]
1400 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.compareTo(org.joda.time.ReadablePartial)"]
393 [label="org.joda.time.base.BaseSingleFieldPeriod.compareTo(org.joda.time.base.BaseSingleFieldPeriod)"]
2075 [label="org.joda.time.format.DateTimeParserBucket$SavedField.compareTo(org.joda.time.format.DateTimeParserBucket$SavedField)"]
2519 [label="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])"]
2081 [label="org.joda.time.format.DateTimeParserBucket.computeMillis()"]
2082 [label="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean)"]
1882 [label="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.String)"]
2094 [label="java.lang.String.concat(java.lang.String)"]
2386 [label="java.util.ArrayList.contains(java.lang.Object)"]
1966 [label="java.util.Set.contains(java.lang.Object)"]
2010 [label="java.util.List.contains(java.lang.Object)"]
129 [label="org.joda.time.base.AbstractInterval.contains(long)"]
131 [label="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInstant)"]
132 [label="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)"]
1129 [label="java.util.HashMap.containsKey(java.lang.Object)"]
2526 [label="java.util.Map.containsKey(java.lang.Object)"]
130 [label="org.joda.time.base.AbstractInterval.containsNow()"]
844 [label="org.joda.time.chrono.GJChronology.convertByWeekyear(long,org.joda.time.Chronology,org.joda.time.Chronology)"]
843 [label="org.joda.time.chrono.GJChronology.convertByYear(long,org.joda.time.Chronology,org.joda.time.Chronology)"]
1061 [label="org.joda.time.chrono.LenientChronology.convertField(org.joda.time.DateTimeField)"]
1140 [label="org.joda.time.chrono.StrictChronology.convertField(org.joda.time.DateTimeField)"]
1128 [label="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)"]
1215 [label="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)"]
1127 [label="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DurationField,java.util.HashMap)"]
1214 [label="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)"]
2872 [label="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)"]
1177 [label="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)"]
900 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.convertText(java.lang.String,java.util.Locale)"]
955 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.convertText(java.lang.String,java.util.Locale)"]
1438 [label="org.joda.time.field.BaseDateTimeField.convertText(java.lang.String,java.util.Locale)"]
1164 [label="org.joda.time.DateTimeZone.convertUTCToLocal(long)"]
3561 [label="org.joda.time.MutableDateTime.copy()"]
3587 [label="org.joda.time.MutableInterval.copy()"]
3658 [label="org.joda.time.MutablePeriod.copy()"]
395 [label="org.joda.time.chrono.AssembledChronology$Fields.copyFieldsFrom(org.joda.time.Chronology)"]
1244 [label="org.joda.time.convert.ConverterSet.copyInto(org.joda.time.convert.Converter[])"]
3202 [label="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)"]
2281 [label="org.joda.time.format.PeriodPrinter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2248 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2280 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2289 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2413 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)"]
2464 [label="org.joda.time.tz.DefaultNameProvider.createCache()"]
2317 [label="org.joda.time.format.PeriodFormatterBuilder.createComposite(java.util.List)"]
1852 [label="org.joda.time.format.DateTimeFormat.createDateTimeFormatter(int,int)"]
1889 [label="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)"]
1795 [label="org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)"]
1797 [label="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)"]
1800 [label="org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)"]
2341 [label="org.joda.time.tz.CachedDateTimeZone.createInfo(long)"]
2976 [label="org.joda.time.IllegalFieldValueException.createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String)"]
2978 [label="org.joda.time.IllegalFieldValueException.createMessage(java.lang.String,java.lang.String)"]
2984 [label="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)"]
2812 [label="java.lang.System.currentTimeMillis()"]
111 [label="org.joda.time.DateTimeUtils.currentTimeMillis()"]
875 [label="org.joda.time.format.ISODateTimeFormat.date()"]
2163 [label="org.joda.time.format.ISODateTimeFormat.dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)"]
2164 [label="org.joda.time.format.ISODateTimeFormat.dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)"]
2165 [label="org.joda.time.format.ISODateTimeFormat.dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)"]
2146 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateElementParser()"]
2117 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHour()"]
2118 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinute()"]
2119 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecond()"]
2121 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecondFraction()"]
2120 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecondMillis()"]
3993 [label="org.joda.time.format.ISODateTimeFormat.dateOptionalTimeParser()"]
2153 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateOptionalTimeParser()"]
2148 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateParser()"]
120 [label="org.joda.time.format.ISODateTimeFormat.dateTime()"]
2126 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateTime()"]
2127 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateTimeNoMillis()"]
1322 [label="org.joda.time.format.ISODateTimeFormat.dateTimeParser()"]
2152 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateTimeParser()"]
498 [label="org.joda.time.DateTimeFieldType.dayOfMonth()"]
27 [label="org.joda.time.Chronology.dayOfMonth()"]
2782 [label="org.joda.time.DateTime.dayOfMonth()"]
3552 [label="org.joda.time.MutableDateTime.dayOfMonth()"]
3135 [label="org.joda.time.LocalDate.dayOfMonth()"]
3271 [label="org.joda.time.LocalDateTime.dayOfMonth()"]
2668 [label="org.joda.time.DateMidnight.dayOfMonth()"]
4031 [label="org.joda.time.YearMonthDay.dayOfMonth()"]
3444 [label="org.joda.time.MonthDay.dayOfMonth()"]
453 [label="org.joda.time.chrono.BaseChronology.dayOfMonth()"]
610 [label="org.joda.time.chrono.AssembledChronology.dayOfMonth()"]
2098 [label="org.joda.time.format.ISODateTimeFormat$Constants.dayOfMonthElement()"]
497 [label="org.joda.time.DateTimeFieldType.dayOfWeek()"]
29 [label="org.joda.time.Chronology.dayOfWeek()"]
2783 [label="org.joda.time.DateTime.dayOfWeek()"]
3553 [label="org.joda.time.MutableDateTime.dayOfWeek()"]
3136 [label="org.joda.time.LocalDate.dayOfWeek()"]
3272 [label="org.joda.time.LocalDateTime.dayOfWeek()"]
2669 [label="org.joda.time.DateMidnight.dayOfWeek()"]
452 [label="org.joda.time.chrono.BaseChronology.dayOfWeek()"]
698 [label="org.joda.time.chrono.AssembledChronology.dayOfWeek()"]
2101 [label="org.joda.time.format.ISODateTimeFormat$Constants.dayOfWeekElement()"]
901 [label="org.joda.time.chrono.GJLocaleSymbols.dayOfWeekTextToValue(java.lang.String)"]
899 [label="org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToShortText(int)"]
897 [label="org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToText(int)"]
499 [label="org.joda.time.DateTimeFieldType.dayOfYear()"]
25 [label="org.joda.time.Chronology.dayOfYear()"]
2781 [label="org.joda.time.DateTime.dayOfYear()"]
3551 [label="org.joda.time.MutableDateTime.dayOfYear()"]
3134 [label="org.joda.time.LocalDate.dayOfYear()"]
3270 [label="org.joda.time.LocalDateTime.dayOfYear()"]
2667 [label="org.joda.time.DateMidnight.dayOfYear()"]
454 [label="org.joda.time.chrono.BaseChronology.dayOfYear()"]
621 [label="org.joda.time.chrono.AssembledChronology.dayOfYear()"]
2102 [label="org.joda.time.format.ISODateTimeFormat$Constants.dayOfYearElement()"]
3783 [label="org.joda.time.PeriodType.dayTime()"]
402 [label="org.joda.time.Chronology.days()"]
2879 [label="org.joda.time.PeriodType.days()"]
351 [label="org.joda.time.DurationFieldType.days()"]
434 [label="org.joda.time.chrono.BaseChronology.days()"]
660 [label="org.joda.time.chrono.AssembledChronology.days()"]
3711 [label="org.joda.time.Period.days(int)"]
2880 [label="org.joda.time.Days.days(int)"]
2881 [label="org.joda.time.Days.daysBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
2882 [label="org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
2884 [label="org.joda.time.Days.daysIn(org.joda.time.ReadableInterval)"]
2009 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)"]
2287 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)"]
465 [label="java.io.ObjectInputStream.defaultReadObject()"]
1986 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.String,int,int)"]
2908 [label="org.joda.time.Days.dividedBy(int)"]
3914 [label="org.joda.time.Weeks.dividedBy(int)"]
2971 [label="org.joda.time.Hours.dividedBy(int)"]
3391 [label="org.joda.time.Minutes.dividedBy(int)"]
3823 [label="org.joda.time.Seconds.dividedBy(int)"]
3465 [label="org.joda.time.Months.dividedBy(int)"]
4049 [label="org.joda.time.Years.dividedBy(int)"]
2938 [label="org.joda.time.Duration.dividedBy(long)"]
1234 [label="java.lang.String.endsWith(java.lang.String)"]
2524 [label="java.util.Map.entrySet()"]
2433 [label="java.util.Arrays.equals(int[],int[])"]
104 [label="org.joda.time.base.AbstractInstant.equals(java.lang.Object)"]
70 [label="org.joda.time.base.AbstractDuration.equals(java.lang.Object)"]
154 [label="org.joda.time.base.AbstractInterval.equals(java.lang.Object)"]
181 [label="org.joda.time.base.AbstractPartial.equals(java.lang.Object)"]
210 [label="org.joda.time.base.AbstractPeriod.equals(java.lang.Object)"]
390 [label="org.joda.time.base.BaseSingleFieldPeriod.equals(java.lang.Object)"]
647 [label="java.lang.Object.equals(java.lang.Object)"]
669 [label="java.lang.String.equals(java.lang.Object)"]
1861 [label="java.lang.Integer.equals(java.lang.Object)"]
535 [label="org.joda.time.DateTimeZone.equals(java.lang.Object)"]
3734 [label="org.joda.time.PeriodType.equals(java.lang.Object)"]
3074 [label="org.joda.time.LocalDate.equals(java.lang.Object)"]
3190 [label="org.joda.time.LocalDateTime.equals(java.lang.Object)"]
3330 [label="org.joda.time.LocalTime.equals(java.lang.Object)"]
2797 [label="org.joda.time.DateTimeComparator.equals(java.lang.Object)"]
1856 [label="java.util.Locale.equals(java.lang.Object)"]
1002 [label="org.joda.time.chrono.ISOChronology.equals(java.lang.Object)"]
533 [label="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)"]
740 [label="org.joda.time.chrono.BuddhistChronology.equals(java.lang.Object)"]
871 [label="org.joda.time.chrono.GJChronology.equals(java.lang.Object)"]
1132 [label="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)"]
1216 [label="org.joda.time.chrono.ZonedChronology.equals(java.lang.Object)"]
1029 [label="org.joda.time.chrono.IslamicChronology.equals(java.lang.Object)"]
1063 [label="org.joda.time.chrono.LenientChronology.equals(java.lang.Object)"]
1142 [label="org.joda.time.chrono.StrictChronology.equals(java.lang.Object)"]
1165 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(java.lang.Object)"]
1203 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)"]
1743 [label="org.joda.time.field.UnsupportedDurationField.equals(java.lang.Object)"]
1640 [label="org.joda.time.field.PreciseDurationField.equals(java.lang.Object)"]
1367 [label="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)"]
1401 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)"]
1559 [label="org.joda.time.field.DelegatedDurationField.equals(java.lang.Object)"]
1668 [label="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)"]
1612 [label="org.joda.time.field.MillisDurationField.equals(java.lang.Object)"]
2340 [label="org.joda.time.tz.CachedDateTimeZone.equals(java.lang.Object)"]
2365 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)"]
2364 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)"]
2406 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)"]
2430 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)"]
2472 [label="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)"]
105 [label="org.joda.time.field.FieldUtils.equals(java.lang.Object,java.lang.Object)"]
2432 [label="java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])"]
2431 [label="java.util.Arrays.equals(long[],long[])"]
950 [label="java.lang.String.equalsIgnoreCase(java.lang.String)"]
511 [label="org.joda.time.DateTimeFieldType.era()"]
9 [label="org.joda.time.Chronology.era()"]
2773 [label="org.joda.time.DateTime.era()"]
3543 [label="org.joda.time.MutableDateTime.era()"]
3126 [label="org.joda.time.LocalDate.era()"]
3262 [label="org.joda.time.LocalDateTime.era()"]
2659 [label="org.joda.time.DateMidnight.era()"]
463 [label="org.joda.time.chrono.BaseChronology.era()"]
890 [label="org.joda.time.chrono.AssembledChronology.era()"]
913 [label="org.joda.time.chrono.GJLocaleSymbols.eraTextToValue(java.lang.String)"]
910 [label="org.joda.time.chrono.GJLocaleSymbols.eraValueToText(int)"]
408 [label="org.joda.time.Chronology.eras()"]
510 [label="org.joda.time.DurationFieldType.eras()"]
440 [label="org.joda.time.chrono.BaseChronology.eras()"]
962 [label="org.joda.time.chrono.AssembledChronology.eras()"]
2014 [label="org.joda.time.format.DateTimeParser.estimateParsedLength()"]
1915 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimateParsedLength()"]
1957 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.estimateParsedLength()"]
1983 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimateParsedLength()"]
1877 [label="org.joda.time.format.DateTimePrinter.estimatePrintedLength()"]
1909 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimatePrintedLength()"]
1958 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.estimatePrintedLength()"]
1980 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()"]
2543 [label="java.io.File.exists()"]
3716 [label="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
2402 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(long)"]
2318 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)"]
2387 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(long)"]
2850 [label="org.joda.time.DateTimeZone.fixedOffsetZone(java.lang.String,int)"]
2834 [label="java.lang.Math.floor(double)"]
2159 [label="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)"]
3717 [label="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])"]
2006 [label="org.joda.time.DateTimeZone.forID(java.lang.String)"]
515 [label="org.joda.time.chrono.GJLocaleSymbols.forLocale(java.util.Locale)"]
2858 [label="java.lang.Class.forName(java.lang.String)"]
2851 [label="org.joda.time.DateTimeZone.forOffsetHours(int)"]
2852 [label="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)"]
1885 [label="org.joda.time.DateTimeZone.forOffsetMillis(int)"]
55 [label="org.joda.time.format.DateTimeFormat.forPattern(java.lang.String)"]
1796 [label="org.joda.time.format.DateTimeFormat.forStyle(java.lang.String)"]
1232 [label="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)"]
2327 [label="org.joda.time.tz.CachedDateTimeZone.forZone(org.joda.time.DateTimeZone)"]
2498 [label="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)"]
2106 [label="org.joda.time.format.ISODateTimeFormat$Constants.fractionElement()"]
3054 [label="org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)"]
3170 [label="org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)"]
3985 [label="org.joda.time.YearMonthDay.fromCalendarFields(java.util.Calendar)"]
3842 [label="org.joda.time.TimeOfDay.fromCalendarFields(java.util.Calendar)"]
3314 [label="org.joda.time.LocalTime.fromCalendarFields(java.util.Calendar)"]
3416 [label="org.joda.time.MonthDay.fromCalendarFields(java.util.Calendar)"]
3938 [label="org.joda.time.YearMonth.fromCalendarFields(java.util.Calendar)"]
3056 [label="org.joda.time.LocalDate.fromDateFields(java.util.Date)"]
3172 [label="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)"]
3987 [label="org.joda.time.YearMonthDay.fromDateFields(java.util.Date)"]
3843 [label="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)"]
3315 [label="org.joda.time.LocalTime.fromDateFields(java.util.Date)"]
3417 [label="org.joda.time.MonthDay.fromDateFields(java.util.Date)"]
3939 [label="org.joda.time.YearMonth.fromDateFields(java.util.Date)"]
3844 [label="org.joda.time.TimeOfDay.fromMillisOfDay(long)"]
3312 [label="org.joda.time.LocalTime.fromMillisOfDay(long)"]
3845 [label="org.joda.time.TimeOfDay.fromMillisOfDay(long,org.joda.time.Chronology)"]
3313 [label="org.joda.time.LocalTime.fromMillisOfDay(long,org.joda.time.Chronology)"]
1809 [label="org.joda.time.format.DateTimeFormat.fullDate()"]
1811 [label="org.joda.time.format.DateTimeFormat.fullDateTime()"]
1810 [label="org.joda.time.format.DateTimeFormat.fullTime()"]
3013 [label="org.joda.time.Interval.gap(org.joda.time.ReadableInterval)"]
2512 [label="java.lang.ThreadLocal.get()"]
3398 [label="org.joda.time.MonthDay$Property.get()"]
3662 [label="org.joda.time.Partial$Property.get()"]
3830 [label="org.joda.time.TimeOfDay$Property.get()"]
3921 [label="org.joda.time.YearMonth$Property.get()"]
3975 [label="org.joda.time.YearMonthDay$Property.get()"]
1347 [label="org.joda.time.field.AbstractPartialFieldProperty.get()"]
1376 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.get()"]
926 [label="java.lang.ref.Reference.get()"]
2566 [label="java.lang.ref.SoftReference.get()"]
3055 [label="java.util.Calendar.get(int)"]
856 [label="java.util.ArrayList.get(int)"]
2013 [label="java.util.List.get(int)"]
1130 [label="java.util.HashMap.get(java.lang.Object)"]
731 [label="java.util.Map.get(java.lang.Object)"]
927 [label="java.util.WeakHashMap.get(java.lang.Object)"]
947 [label="java.util.TreeMap.get(java.lang.Object)"]
7 [label="org.joda.time.DateTimeField.get(long)"]
709 [label="org.joda.time.chrono.BasicYearDateTimeField.get(long)"]
963 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.get(long)"]
908 [label="org.joda.time.chrono.GJEraDateTimeField.get(long)"]
895 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.get(long)"]
597 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(long)"]
611 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.get(long)"]
690 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.get(long)"]
674 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.get(long)"]
641 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(long)"]
772 [label="org.joda.time.chrono.GJChronology$CutoverField.get(long)"]
1008 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.get(long)"]
1092 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.get(long)"]
1170 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.get(long)"]
1684 [label="org.joda.time.field.UnsupportedDateTimeField.get(long)"]
1630 [label="org.joda.time.field.PreciseDateTimeField.get(long)"]
1747 [label="org.joda.time.field.ZeroIsMaxDateTimeField.get(long)"]
1615 [label="org.joda.time.field.OffsetDateTimeField.get(long)"]
1567 [label="org.joda.time.field.DividedDateTimeField.get(long)"]
1645 [label="org.joda.time.field.RemainderDateTimeField.get(long)"]
1408 [label="org.joda.time.field.BaseDateTimeField.get(long)"]
1675 [label="org.joda.time.field.SkipUndoDateTimeField.get(long)"]
1483 [label="org.joda.time.field.DelegatedDateTimeField.get(long)"]
1671 [label="org.joda.time.field.SkipDateTimeField.get(long)"]
1464 [label="org.joda.time.field.DecoratedDateTimeField.get(long)"]
85 [label="org.joda.time.base.AbstractInstant.get(org.joda.time.DateTimeField)"]
2 [label="org.joda.time.base.AbstractDateTime.get(org.joda.time.DateTimeFieldType)"]
82 [label="org.joda.time.base.AbstractInstant.get(org.joda.time.DateTimeFieldType)"]
171 [label="org.joda.time.base.AbstractPartial.get(org.joda.time.DateTimeFieldType)"]
1365 [label="org.joda.time.ReadableInstant.get(org.joda.time.DateTimeFieldType)"]
605 [label="org.joda.time.ReadablePartial.get(org.joda.time.DateTimeFieldType)"]
3071 [label="org.joda.time.LocalDate.get(org.joda.time.DateTimeFieldType)"]
3187 [label="org.joda.time.LocalDateTime.get(org.joda.time.DateTimeFieldType)"]
3327 [label="org.joda.time.LocalTime.get(org.joda.time.DateTimeFieldType)"]
201 [label="org.joda.time.base.AbstractPeriod.get(org.joda.time.DurationFieldType)"]
383 [label="org.joda.time.base.BaseSingleFieldPeriod.get(org.joda.time.DurationFieldType)"]
2258 [label="org.joda.time.ReadablePeriod.get(org.joda.time.DurationFieldType)"]
288 [label="org.joda.time.Chronology.get(org.joda.time.ReadablePartial,long)"]
476 [label="org.joda.time.chrono.BaseChronology.get(org.joda.time.ReadablePartial,long)"]
331 [label="org.joda.time.Chronology.get(org.joda.time.ReadablePeriod,long)"]
329 [label="org.joda.time.chrono.BaseChronology.get(org.joda.time.ReadablePeriod,long)"]
316 [label="org.joda.time.Chronology.get(org.joda.time.ReadablePeriod,long,long)"]
478 [label="org.joda.time.chrono.BaseChronology.get(org.joda.time.ReadablePeriod,long,long)"]
944 [label="java.text.DateFormatSymbols.getAmPmStrings()"]
577 [label="org.joda.time.chrono.BasicChronology.getApproxMillisAtEpochDividedByTwo()"]
1353 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsShortText()"]
1381 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText()"]
780 [label="org.joda.time.DateTimeField.getAsShortText(int,java.util.Locale)"]
898 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(int,java.util.Locale)"]
953 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(int,java.util.Locale)"]
779 [label="org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(int,java.util.Locale)"]
1174 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(int,java.util.Locale)"]
1695 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(int,java.util.Locale)"]
1415 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(int,java.util.Locale)"]
1497 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(int,java.util.Locale)"]
1354 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(java.util.Locale)"]
1382 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(java.util.Locale)"]
1493 [label="org.joda.time.DateTimeField.getAsShortText(long)"]
1692 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(long)"]
1416 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(long)"]
1492 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(long)"]
778 [label="org.joda.time.DateTimeField.getAsShortText(long,java.util.Locale)"]
777 [label="org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(long,java.util.Locale)"]
1094 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsShortText(long,java.util.Locale)"]
1172 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(long,java.util.Locale)"]
1691 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(long,java.util.Locale)"]
1414 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(long,java.util.Locale)"]
1491 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(long,java.util.Locale)"]
1355 [label="org.joda.time.DateTimeField.getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1693 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1417 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1494 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1496 [label="org.joda.time.DateTimeField.getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)"]
1694 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)"]
1418 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)"]
1495 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)"]
1346 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsString()"]
1378 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsString()"]
1349 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsText()"]
1379 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText()"]
776 [label="org.joda.time.DateTimeField.getAsText(int,java.util.Locale)"]
514 [label="org.joda.time.chrono.BasicChronology$HalfdayField.getAsText(int,java.util.Locale)"]
909 [label="org.joda.time.chrono.GJEraDateTimeField.getAsText(int,java.util.Locale)"]
896 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(int,java.util.Locale)"]
951 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(int,java.util.Locale)"]
775 [label="org.joda.time.chrono.GJChronology$CutoverField.getAsText(int,java.util.Locale)"]
1173 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(int,java.util.Locale)"]
1690 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(int,java.util.Locale)"]
1409 [label="org.joda.time.field.BaseDateTimeField.getAsText(int,java.util.Locale)"]
1490 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(int,java.util.Locale)"]
1350 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsText(java.util.Locale)"]
1380 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(java.util.Locale)"]
1486 [label="org.joda.time.DateTimeField.getAsText(long)"]
1687 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(long)"]
1410 [label="org.joda.time.field.BaseDateTimeField.getAsText(long)"]
1485 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(long)"]
774 [label="org.joda.time.DateTimeField.getAsText(long,java.util.Locale)"]
773 [label="org.joda.time.chrono.GJChronology$CutoverField.getAsText(long,java.util.Locale)"]
1093 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsText(long,java.util.Locale)"]
1171 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(long,java.util.Locale)"]
1686 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(long,java.util.Locale)"]
1407 [label="org.joda.time.field.BaseDateTimeField.getAsText(long,java.util.Locale)"]
1484 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(long,java.util.Locale)"]
1352 [label="org.joda.time.DateTimeField.getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1688 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1411 [label="org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1487 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1489 [label="org.joda.time.DateTimeField.getAsText(org.joda.time.ReadablePartial,java.util.Locale)"]
1689 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.ReadablePartial,java.util.Locale)"]
1412 [label="org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.ReadablePartial,java.util.Locale)"]
1488 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.ReadablePartial,java.util.Locale)"]
2000 [label="org.joda.time.DateTimeZone.getAvailableIDs()"]
2476 [label="org.joda.time.tz.UTCProvider.getAvailableIDs()"]
2567 [label="org.joda.time.tz.ZoneInfoProvider.getAvailableIDs()"]
2857 [label="org.joda.time.tz.Provider.getAvailableIDs()"]
639 [label="org.joda.time.chrono.BasicChronology.getAverageMillisPerMonth()"]
689 [label="org.joda.time.chrono.BasicChronology.getAverageMillisPerYear()"]
576 [label="org.joda.time.chrono.BasicChronology.getAverageMillisPerYearDividedByTwo()"]
528 [label="org.joda.time.chrono.AssembledChronology.getBase()"]
2200 [label="java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)"]
2985 [label="java.lang.Throwable.getCause()"]
10 [label="org.joda.time.base.AbstractDateTime.getCenturyOfEra()"]
3108 [label="org.joda.time.LocalDate.getCenturyOfEra()"]
3238 [label="org.joda.time.LocalDateTime.getCenturyOfEra()"]
1340 [label="org.joda.time.base.BaseDateTime.getChronology()"]
278 [label="org.joda.time.base.BaseInterval.getChronology()"]
305 [label="org.joda.time.base.BasePartial.getChronology()"]
4 [label="org.joda.time.ReadableInstant.getChronology()"]
2993 [label="org.joda.time.Instant.getChronology()"]
126 [label="org.joda.time.ReadableInterval.getChronology()"]
162 [label="org.joda.time.ReadablePartial.getChronology()"]
3028 [label="org.joda.time.LocalDate.getChronology()"]
3143 [label="org.joda.time.LocalDateTime.getChronology()"]
3474 [label="org.joda.time.MutableDateTime$Property.getChronology()"]
2583 [label="org.joda.time.DateMidnight$Property.getChronology()"]
2674 [label="org.joda.time.DateTime$Property.getChronology()"]
3085 [label="org.joda.time.LocalTime.getChronology()"]
3030 [label="org.joda.time.LocalDate$Property.getChronology()"]
3146 [label="org.joda.time.LocalDateTime$Property.getChronology()"]
3285 [label="org.joda.time.LocalTime$Property.getChronology()"]
3684 [label="org.joda.time.Partial.getChronology()"]
1977 [label="org.joda.time.format.DateTimeParserBucket.getChronology()"]
1374 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getChronology()"]
233 [label="org.joda.time.convert.InstantConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
291 [label="org.joda.time.convert.PartialConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
1222 [label="org.joda.time.convert.AbstractConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
1230 [label="org.joda.time.convert.CalendarConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
1300 [label="org.joda.time.convert.ReadableInstantConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
1313 [label="org.joda.time.convert.ReadablePartialConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
230 [label="org.joda.time.convert.InstantConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
3066 [label="org.joda.time.convert.PartialConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
1221 [label="org.joda.time.convert.AbstractConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
1233 [label="org.joda.time.convert.CalendarConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
1299 [label="org.joda.time.convert.ReadableInstantConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
1312 [label="org.joda.time.convert.ReadablePartialConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
94 [label="org.joda.time.DateTimeUtils.getChronology(org.joda.time.Chronology)"]
320 [label="java.lang.Object.getClass()"]
2563 [label="java.lang.Class.getClassLoader()"]
2854 [label="org.joda.time.DateTimeZone.getConvertedId(java.lang.String)"]
3093 [label="java.util.TimeZone.getDSTSavings()"]
3060 [label="java.util.Date.getDate()"]
936 [label="org.joda.time.DateTimeUtils.getDateFormatSymbols(java.util.Locale)"]
1786 [label="java.text.DateFormat.getDateInstance(int,java.util.Locale)"]
531 [label="org.joda.time.chrono.BasicChronology.getDateMidnightMillis(int,int,int)"]
1052 [label="org.joda.time.chrono.JulianChronology.getDateMidnightMillis(int,int,int)"]
1788 [label="java.text.DateFormat.getDateTimeInstance(int,int,java.util.Locale)"]
421 [label="org.joda.time.Chronology.getDateTimeMillis(int,int,int,int)"]
422 [label="org.joda.time.chrono.BaseChronology.getDateTimeMillis(int,int,int,int)"]
420 [label="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)"]
529 [label="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)"]
869 [label="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int)"]
1123 [label="org.joda.time.chrono.LimitChronology.getDateTimeMillis(int,int,int,int)"]
1209 [label="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(int,int,int,int)"]
237 [label="org.joda.time.Chronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
424 [label="org.joda.time.chrono.BaseChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
423 [label="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
532 [label="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
870 [label="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
1124 [label="org.joda.time.chrono.LimitChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
1211 [label="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
426 [label="org.joda.time.Chronology.getDateTimeMillis(long,int,int,int,int)"]
427 [label="org.joda.time.chrono.BaseChronology.getDateTimeMillis(long,int,int,int,int)"]
425 [label="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)"]
1125 [label="org.joda.time.chrono.LimitChronology.getDateTimeMillis(long,int,int,int,int)"]
1212 [label="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(long,int,int,int,int)"]
26 [label="org.joda.time.base.AbstractDateTime.getDayOfMonth()"]
2490 [label="org.joda.time.LocalDate.getDayOfMonth()"]
3195 [label="org.joda.time.LocalDateTime.getDayOfMonth()"]
4015 [label="org.joda.time.YearMonthDay.getDayOfMonth()"]
3439 [label="org.joda.time.MonthDay.getDayOfMonth()"]
580 [label="org.joda.time.chrono.BasicChronology.getDayOfMonth(long)"]
627 [label="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)"]
1037 [label="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)"]
582 [label="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int)"]
581 [label="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)"]
28 [label="org.joda.time.base.AbstractDateTime.getDayOfWeek()"]
3114 [label="org.joda.time.LocalDate.getDayOfWeek()"]
3244 [label="org.joda.time.LocalDateTime.getDayOfWeek()"]
570 [label="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)"]
906 [label="org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxShortTextLength()"]
904 [label="org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxTextLength()"]
24 [label="org.joda.time.base.AbstractDateTime.getDayOfYear()"]
3113 [label="org.joda.time.LocalDate.getDayOfYear()"]
3243 [label="org.joda.time.LocalDateTime.getDayOfYear()"]
583 [label="org.joda.time.chrono.BasicChronology.getDayOfYear(long)"]
584 [label="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)"]
2889 [label="org.joda.time.Period.getDays()"]
3629 [label="org.joda.time.MutablePeriod.getDays()"]
2902 [label="org.joda.time.Days.getDays()"]
601 [label="org.joda.time.chrono.BasicChronology.getDaysInMonthMax()"]
606 [label="org.joda.time.chrono.BasicChronology.getDaysInMonthMax(int)"]
588 [label="org.joda.time.chrono.BasicChronology.getDaysInMonthMax(long)"]
590 [label="org.joda.time.chrono.BasicChronology.getDaysInMonthMaxForSet(long,int)"]
634 [label="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)"]
565 [label="org.joda.time.chrono.BasicChronology.getDaysInYear(int)"]
1039 [label="org.joda.time.chrono.IslamicChronology.getDaysInYear(int)"]
615 [label="org.joda.time.chrono.BasicChronology.getDaysInYearMax()"]
589 [label="org.joda.time.chrono.BasicChronology.getDaysInYearMonth(int,int)"]
628 [label="org.joda.time.chrono.BasicFixedMonthChronology.getDaysInYearMonth(int,int)"]
633 [label="org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)"]
1040 [label="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)"]
730 [label="org.joda.time.DateTimeZone.getDefault()"]
45 [label="java.util.Locale.getDefault()"]
2845 [label="java.util.TimeZone.getDefault()"]
2197 [label="org.joda.time.format.PeriodFormat.getDefault()"]
2862 [label="org.joda.time.DateTimeZone.getDefaultNameProvider()"]
2856 [label="org.joda.time.DateTimeZone.getDefaultProvider()"]
1995 [label="org.joda.time.DateTimeUtils.getDefaultTimeZoneNames()"]
787 [label="org.joda.time.DateTimeField.getDifference(long,long)"]
368 [label="org.joda.time.DurationField.getDifference(long,long)"]
971 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.getDifference(long,long)"]
786 [label="org.joda.time.chrono.GJChronology$CutoverField.getDifference(long,long)"]
832 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifference(long,long)"]
840 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.getDifference(long,long)"]
1013 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifference(long,long)"]
1088 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getDifference(long,long)"]
1098 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifference(long,long)"]
1160 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)"]
1185 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)"]
1741 [label="org.joda.time.field.UnsupportedDurationField.getDifference(long,long)"]
1702 [label="org.joda.time.field.UnsupportedDateTimeField.getDifference(long,long)"]
1753 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getDifference(long,long)"]
1572 [label="org.joda.time.field.DividedDateTimeField.getDifference(long,long)"]
654 [label="org.joda.time.field.ImpreciseDateTimeField.getDifference(long,long)"]
1435 [label="org.joda.time.field.BaseDateTimeField.getDifference(long,long)"]
1504 [label="org.joda.time.field.DelegatedDateTimeField.getDifference(long,long)"]
1460 [label="org.joda.time.field.BaseDurationField.getDifference(long,long)"]
1554 [label="org.joda.time.field.DelegatedDurationField.getDifference(long,long)"]
1665 [label="org.joda.time.field.ScaledDurationField.getDifference(long,long)"]
1595 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifference(long,long)"]
1608 [label="org.joda.time.field.MillisDurationField.getDifference(long,long)"]
1383 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.ReadableInstant)"]
789 [label="org.joda.time.DateTimeField.getDifferenceAsLong(long,long)"]
1090 [label="org.joda.time.DurationField.getDifferenceAsLong(long,long)"]
714 [label="org.joda.time.chrono.BasicYearDateTimeField.getDifferenceAsLong(long,long)"]
972 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.getDifferenceAsLong(long,long)"]
695 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)"]
653 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)"]
788 [label="org.joda.time.chrono.GJChronology$CutoverField.getDifferenceAsLong(long,long)"]
833 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifferenceAsLong(long,long)"]
841 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.getDifferenceAsLong(long,long)"]
1014 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifferenceAsLong(long,long)"]
1089 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getDifferenceAsLong(long,long)"]
1099 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifferenceAsLong(long,long)"]
1161 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)"]
1186 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)"]
1742 [label="org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(long,long)"]
1703 [label="org.joda.time.field.UnsupportedDateTimeField.getDifferenceAsLong(long,long)"]
1639 [label="org.joda.time.field.PreciseDurationField.getDifferenceAsLong(long,long)"]
1754 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getDifferenceAsLong(long,long)"]
1573 [label="org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(long,long)"]
1588 [label="org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)"]
1436 [label="org.joda.time.field.BaseDateTimeField.getDifferenceAsLong(long,long)"]
1505 [label="org.joda.time.field.DelegatedDateTimeField.getDifferenceAsLong(long,long)"]
1476 [label="org.joda.time.field.DecoratedDurationField.getDifferenceAsLong(long,long)"]
1555 [label="org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(long,long)"]
1666 [label="org.joda.time.field.ScaledDurationField.getDifferenceAsLong(long,long)"]
1596 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifferenceAsLong(long,long)"]
1609 [label="org.joda.time.field.MillisDurationField.getDifferenceAsLong(long,long)"]
1384 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.ReadableInstant)"]
1648 [label="org.joda.time.field.RemainderDateTimeField.getDivided(int)"]
244 [label="org.joda.time.convert.ConverterManager.getDurationConverter(java.lang.Object)"]
1257 [label="org.joda.time.convert.ConverterManager.getDurationConverters()"]
554 [label="org.joda.time.DateTimeField.getDurationField()"]
919 [label="org.joda.time.chrono.GJEraDateTimeField.getDurationField()"]
671 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.getDurationField()"]
1681 [label="org.joda.time.field.UnsupportedDateTimeField.getDurationField()"]
1420 [label="org.joda.time.field.BaseDateTimeField.getDurationField()"]
1513 [label="org.joda.time.field.DelegatedDateTimeField.getDurationField()"]
1465 [label="org.joda.time.field.DecoratedDateTimeField.getDurationField()"]
1356 [label="org.joda.time.field.AbstractPartialFieldProperty.getDurationField()"]
1385 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getDurationField()"]
245 [label="org.joda.time.convert.DurationConverter.getDurationMillis(java.lang.Object)"]
1284 [label="org.joda.time.convert.LongConverter.getDurationMillis(java.lang.Object)"]
1294 [label="org.joda.time.convert.ReadableDurationConverter.getDurationMillis(java.lang.Object)"]
1304 [label="org.joda.time.convert.ReadableIntervalConverter.getDurationMillis(java.lang.Object)"]
1326 [label="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)"]
268 [label="org.joda.time.DateTimeUtils.getDurationMillis(org.joda.time.ReadableDuration)"]
176 [label="org.joda.time.DateTimeFieldType.getDurationType()"]
127 [label="org.joda.time.base.AbstractInterval.getEnd()"]
2886 [label="org.joda.time.ReadableInterval.getEnd()"]
280 [label="org.joda.time.base.BaseInterval.getEndMillis()"]
128 [label="org.joda.time.ReadableInterval.getEndMillis()"]
8 [label="org.joda.time.base.AbstractDateTime.getEra()"]
3107 [label="org.joda.time.LocalDate.getEra()"]
3237 [label="org.joda.time.LocalDateTime.getEra()"]
921 [label="org.joda.time.chrono.GJLocaleSymbols.getEraMaxTextLength()"]
937 [label="java.text.DateFormatSymbols.getEras()"]
3476 [label="org.joda.time.MutableDateTime$Property.getField()"]
3397 [label="org.joda.time.MonthDay$Property.getField()"]
3661 [label="org.joda.time.Partial$Property.getField()"]
3829 [label="org.joda.time.TimeOfDay$Property.getField()"]
3920 [label="org.joda.time.YearMonth$Property.getField()"]
3974 [label="org.joda.time.YearMonthDay$Property.getField()"]
1343 [label="org.joda.time.field.AbstractPartialFieldProperty.getField()"]
1372 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getField()"]
167 [label="org.joda.time.base.AbstractPartial.getField(int)"]
469 [label="org.joda.time.ReadablePartial.getField(int)"]
163 [label="org.joda.time.base.AbstractPartial.getField(int,org.joda.time.Chronology)"]
3069 [label="org.joda.time.LocalDate.getField(int,org.joda.time.Chronology)"]
3185 [label="org.joda.time.LocalDateTime.getField(int,org.joda.time.Chronology)"]
3997 [label="org.joda.time.YearMonthDay.getField(int,org.joda.time.Chronology)"]
3859 [label="org.joda.time.TimeOfDay.getField(int,org.joda.time.Chronology)"]
3325 [label="org.joda.time.LocalTime.getField(int,org.joda.time.Chronology)"]
3425 [label="org.joda.time.MonthDay.getField(int,org.joda.time.Chronology)"]
3681 [label="org.joda.time.Partial.getField(int,org.joda.time.Chronology)"]
3947 [label="org.joda.time.YearMonth.getField(int,org.joda.time.Chronology)"]
5 [label="org.joda.time.DateTimeFieldType.getField(org.joda.time.Chronology)"]
367 [label="org.joda.time.DurationFieldType.getField(org.joda.time.Chronology)"]
2805 [label="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField(org.joda.time.Chronology)"]
2943 [label="org.joda.time.DurationFieldType$StandardDurationFieldType.getField(org.joda.time.Chronology)"]
380 [label="org.joda.time.base.BaseSingleFieldPeriod.getFieldType()"]
2891 [label="org.joda.time.Days.getFieldType()"]
3901 [label="org.joda.time.Weeks.getFieldType()"]
2958 [label="org.joda.time.Hours.getFieldType()"]
3378 [label="org.joda.time.Minutes.getFieldType()"]
3810 [label="org.joda.time.Seconds.getFieldType()"]
3457 [label="org.joda.time.Months.getFieldType()"]
4041 [label="org.joda.time.Years.getFieldType()"]
2312 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldType()"]
1342 [label="org.joda.time.field.AbstractPartialFieldProperty.getFieldType()"]
1371 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getFieldType()"]
161 [label="org.joda.time.base.AbstractPartial.getFieldType(int)"]
196 [label="org.joda.time.base.AbstractPeriod.getFieldType(int)"]
377 [label="org.joda.time.base.BaseSingleFieldPeriod.getFieldType(int)"]
182 [label="org.joda.time.ReadablePartial.getFieldType(int)"]
212 [label="org.joda.time.ReadablePeriod.getFieldType(int)"]
197 [label="org.joda.time.PeriodType.getFieldType(int)"]
165 [label="org.joda.time.base.AbstractPartial.getFieldTypes()"]
198 [label="org.joda.time.base.AbstractPeriod.getFieldTypes()"]
3998 [label="org.joda.time.YearMonthDay.getFieldTypes()"]
3860 [label="org.joda.time.TimeOfDay.getFieldTypes()"]
3426 [label="org.joda.time.MonthDay.getFieldTypes()"]
3682 [label="org.joda.time.Partial.getFieldTypes()"]
3948 [label="org.joda.time.YearMonth.getFieldTypes()"]
2249 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)"]
168 [label="org.joda.time.base.AbstractPartial.getFields()"]
568 [label="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)"]
3697 [label="org.joda.time.Partial.getFormatter()"]
2027 [label="org.joda.time.format.DateTimeFormatterBuilder.getFormatter()"]
1771 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.getFormatter(java.util.Locale)"]
1974 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)"]
1235 [label="java.util.GregorianCalendar.getGregorianChange()"]
858 [label="org.joda.time.chrono.GJChronology.getGregorianCutover()"]
521 [label="org.joda.time.chrono.GJLocaleSymbols.getHalfdayMaxTextLength()"]
30 [label="org.joda.time.base.AbstractDateTime.getHourOfDay()"]
3196 [label="org.joda.time.LocalDateTime.getHourOfDay()"]
3877 [label="org.joda.time.TimeOfDay.getHourOfDay()"]
3347 [label="org.joda.time.LocalTime.getHourOfDay()"]
2956 [label="org.joda.time.Period.getHours()"]
3630 [label="org.joda.time.MutablePeriod.getHours()"]
2965 [label="org.joda.time.Hours.getHours()"]
3173 [label="java.util.Date.getHours()"]
546 [label="org.joda.time.DateTimeZone.getID()"]
2853 [label="java.util.TimeZone.getID()"]
2982 [label="org.joda.time.IllegalFieldValueException.getIllegalValueAsString()"]
3641 [label="org.joda.time.PeriodType.getIndexedField(org.joda.time.ReadablePeriod,int)"]
2331 [label="org.joda.time.tz.CachedDateTimeZone.getInfo(long)"]
219 [label="org.joda.time.chrono.ISOChronology.getInstance()"]
729 [label="org.joda.time.chrono.BuddhistChronology.getInstance()"]
846 [label="org.joda.time.chrono.GJChronology.getInstance()"]
750 [label="org.joda.time.chrono.CopticChronology.getInstance()"]
761 [label="org.joda.time.chrono.EthiopicChronology.getInstance()"]
981 [label="org.joda.time.chrono.GregorianChronology.getInstance()"]
1048 [label="org.joda.time.chrono.JulianChronology.getInstance()"]
1023 [label="org.joda.time.chrono.IslamicChronology.getInstance()"]
228 [label="org.joda.time.convert.ConverterManager.getInstance()"]
3204 [label="java.util.Calendar.getInstance(java.util.TimeZone)"]
48 [label="java.util.Calendar.getInstance(java.util.TimeZone,java.util.Locale)"]
1056 [label="org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.Chronology)"]
1135 [label="org.joda.time.chrono.StrictChronology.getInstance(org.joda.time.Chronology)"]
753 [label="org.joda.time.chrono.ZonedChronology.getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone)"]
735 [label="org.joda.time.chrono.LimitChronology.getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)"]
1141 [label="org.joda.time.field.StrictDateTimeField.getInstance(org.joda.time.DateTimeField)"]
1062 [label="org.joda.time.field.LenientDateTimeField.getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology)"]
2793 [label="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType)"]
2794 [label="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)"]
485 [label="org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)"]
91 [label="org.joda.time.chrono.ISOChronology.getInstance(org.joda.time.DateTimeZone)"]
728 [label="org.joda.time.chrono.BuddhistChronology.getInstance(org.joda.time.DateTimeZone)"]
847 [label="org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone)"]
749 [label="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone)"]
760 [label="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone)"]
851 [label="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone)"]
1046 [label="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone)"]
1022 [label="org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone)"]
751 [label="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)"]
762 [label="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)"]
860 [label="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)"]
859 [label="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)"]
864 [label="org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone,long,int)"]
732 [label="org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant)"]
845 [label="org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int)"]
1024 [label="org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)"]
483 [label="org.joda.time.field.UnsupportedDurationField.getInstance(org.joda.time.DurationFieldType)"]
328 [label="org.joda.time.chrono.ISOChronology.getInstanceUTC()"]
738 [label="org.joda.time.chrono.BuddhistChronology.getInstanceUTC()"]
811 [label="org.joda.time.chrono.GJChronology.getInstanceUTC()"]
995 [label="org.joda.time.chrono.GregorianChronology.getInstanceUTC()"]
1027 [label="org.joda.time.chrono.IslamicChronology.getInstanceUTC()"]
179 [label="org.joda.time.DateTimeUtils.getInstantChronology(org.joda.time.ReadableInstant)"]
229 [label="org.joda.time.convert.ConverterManager.getInstantConverter(java.lang.Object)"]
1242 [label="org.joda.time.convert.ConverterManager.getInstantConverters()"]
231 [label="org.joda.time.convert.InstantConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1220 [label="org.joda.time.convert.AbstractConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1237 [label="org.joda.time.convert.CalendarConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1279 [label="org.joda.time.convert.DateConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1282 [label="org.joda.time.convert.LongConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1301 [label="org.joda.time.convert.ReadableInstantConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1321 [label="org.joda.time.convert.StringConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
113 [label="org.joda.time.DateTimeUtils.getInstantMillis(org.joda.time.ReadableInstant)"]
2326 [label="java.lang.Integer.getInteger(java.lang.String)"]
318 [label="org.joda.time.DateTimeUtils.getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
1307 [label="org.joda.time.DateTimeUtils.getIntervalChronology(org.joda.time.ReadableInterval)"]
274 [label="org.joda.time.convert.ConverterManager.getIntervalConverter(java.lang.Object)"]
1265 [label="org.joda.time.convert.ConverterManager.getIntervalConverters()"]
2525 [label="java.util.Map$Entry.getKey()"]
946 [label="java.util.Locale.getLanguage()"]
2450 [label="org.joda.time.tz.DateTimeZoneBuilder.getLastRuleSet()"]
1388 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapAmount()"]
798 [label="org.joda.time.DateTimeField.getLeapAmount(long)"]
717 [label="org.joda.time.chrono.BasicYearDateTimeField.getLeapAmount(long)"]
700 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(long)"]
658 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapAmount(long)"]
797 [label="org.joda.time.chrono.GJChronology$CutoverField.getLeapAmount(long)"]
1103 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapAmount(long)"]
1188 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount(long)"]
1710 [label="org.joda.time.field.UnsupportedDateTimeField.getLeapAmount(long)"]
1757 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getLeapAmount(long)"]
1621 [label="org.joda.time.field.OffsetDateTimeField.getLeapAmount(long)"]
1516 [label="org.joda.time.field.DelegatedDateTimeField.getLeapAmount(long)"]
800 [label="org.joda.time.DateTimeField.getLeapDurationField()"]
718 [label="org.joda.time.chrono.BasicYearDateTimeField.getLeapDurationField()"]
701 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapDurationField()"]
659 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapDurationField()"]
799 [label="org.joda.time.chrono.GJChronology$CutoverField.getLeapDurationField()"]
1758 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getLeapDurationField()"]
1622 [label="org.joda.time.field.OffsetDateTimeField.getLeapDurationField()"]
1517 [label="org.joda.time.field.DelegatedDateTimeField.getLeapDurationField()"]
1389 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapDurationField()"]
1030 [label="org.joda.time.chrono.IslamicChronology.getLeapYearPatternType()"]
2520 [label="org.joda.time.tz.ZoneInfoCompiler.getLenientISOChronology()"]
321 [label="org.joda.time.base.BaseLocal.getLocalMillis()"]
2883 [label="org.joda.time.LocalDate.getLocalMillis()"]
3145 [label="org.joda.time.LocalDateTime.getLocalMillis()"]
2952 [label="org.joda.time.LocalTime.getLocalMillis()"]
1855 [label="org.joda.time.format.DateTimeFormatter.getLocale()"]
2210 [label="org.joda.time.format.PeriodFormatter.getLocale()"]
1781 [label="org.joda.time.format.DateTimeParserBucket.getLocale()"]
2798 [label="org.joda.time.DateTimeComparator.getLowerLimit()"]
1070 [label="org.joda.time.chrono.LimitChronology.getLowerLimit()"]
594 [label="org.joda.time.chrono.BasicChronology.getMaxMonth()"]
593 [label="org.joda.time.chrono.BasicChronology.getMaxMonth(int)"]
592 [label="org.joda.time.chrono.BasicChronology.getMaxYear()"]
820 [label="org.joda.time.DateTimeField.getMaximumShortTextLength(java.util.Locale)"]
905 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
958 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
819 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumShortTextLength(java.util.Locale)"]
1116 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1202 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1720 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1444 [label="org.joda.time.field.BaseDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1527 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1363 [label="org.joda.time.field.AbstractPartialFieldProperty.getMaximumShortTextLength(java.util.Locale)"]
1395 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumShortTextLength(java.util.Locale)"]
817 [label="org.joda.time.DateTimeField.getMaximumTextLength(java.util.Locale)"]
520 [label="org.joda.time.chrono.BasicChronology$HalfdayField.getMaximumTextLength(java.util.Locale)"]
920 [label="org.joda.time.chrono.GJEraDateTimeField.getMaximumTextLength(java.util.Locale)"]
903 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumTextLength(java.util.Locale)"]
956 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumTextLength(java.util.Locale)"]
672 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumTextLength(java.util.Locale)"]
816 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumTextLength(java.util.Locale)"]
1115 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumTextLength(java.util.Locale)"]
1201 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumTextLength(java.util.Locale)"]
1719 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumTextLength(java.util.Locale)"]
1443 [label="org.joda.time.field.BaseDateTimeField.getMaximumTextLength(java.util.Locale)"]
1526 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumTextLength(java.util.Locale)"]
1362 [label="org.joda.time.field.AbstractPartialFieldProperty.getMaximumTextLength(java.util.Locale)"]
1394 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(java.util.Locale)"]
473 [label="org.joda.time.DateTimeField.getMaximumValue()"]
720 [label="org.joda.time.chrono.BasicYearDateTimeField.getMaximumValue()"]
974 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.getMaximumValue()"]
600 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue()"]
614 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue()"]
704 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getMaximumValue()"]
807 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue()"]
1016 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.getMaximumValue()"]
1196 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue()"]
1715 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumValue()"]
1633 [label="org.joda.time.field.PreciseDateTimeField.getMaximumValue()"]
1748 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue()"]
1442 [label="org.joda.time.field.BaseDateTimeField.getMaximumValue()"]
1522 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumValue()"]
1468 [label="org.joda.time.field.DecoratedDateTimeField.getMaximumValue()"]
1361 [label="org.joda.time.field.AbstractPartialFieldProperty.getMaximumValue()"]
1393 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()"]
809 [label="org.joda.time.DateTimeField.getMaximumValue(long)"]
602 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(long)"]
616 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(long)"]
683 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(long)"]
808 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(long)"]
835 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMaximumValue(long)"]
1114 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue(long)"]
1197 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(long)"]
1716 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(long)"]
1759 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(long)"]
1430 [label="org.joda.time.field.BaseDateTimeField.getMaximumValue(long)"]
1523 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumValue(long)"]
1199 [label="org.joda.time.DateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
603 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
617 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
684 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
810 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.ReadablePartial)"]
1198 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
1717 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
1760 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
1434 [label="org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
1524 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
475 [label="org.joda.time.DateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
607 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
618 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
685 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
812 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1200 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1718 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1761 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1422 [label="org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1525 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
608 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(long,int)"]
619 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)"]
686 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValueForSet(long,int)"]
1635 [label="org.joda.time.field.PreciseDurationDateTimeField.getMaximumValueForSet(long,int)"]
1360 [label="org.joda.time.field.AbstractPartialFieldProperty.getMaximumValueOverall()"]
1392 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()"]
1069 [label="java.lang.Throwable.getMessage()"]
1068 [label="org.joda.time.chrono.LimitChronology$LimitException.getMessage()"]
2828 [label="java.lang.Class.getMethod(java.lang.String,java.lang.Class[])"]
1071 [label="org.joda.time.base.BaseDateTime.getMillis()"]
247 [label="org.joda.time.base.BaseDuration.getMillis()"]
6 [label="org.joda.time.ReadableInstant.getMillis()"]
62 [label="org.joda.time.ReadableDuration.getMillis()"]
3732 [label="org.joda.time.Period.getMillis()"]
850 [label="org.joda.time.Instant.getMillis()"]
3633 [label="org.joda.time.MutablePeriod.getMillis()"]
3473 [label="org.joda.time.MutableDateTime$Property.getMillis()"]
2582 [label="org.joda.time.DateMidnight$Property.getMillis()"]
2673 [label="org.joda.time.DateTime$Property.getMillis()"]
2811 [label="org.joda.time.DateTimeUtils$SystemMillisProvider.getMillis()"]
2815 [label="org.joda.time.DateTimeUtils$OffsetMillisProvider.getMillis()"]
2821 [label="org.joda.time.DateTimeUtils$MillisProvider.getMillis()"]
3029 [label="org.joda.time.LocalDate$Property.getMillis()"]
3144 [label="org.joda.time.LocalDateTime$Property.getMillis()"]
3284 [label="org.joda.time.LocalTime$Property.getMillis()"]
1377 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMillis()"]
2389 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getMillis()"]
1547 [label="org.joda.time.DurationField.getMillis(int)"]
1735 [label="org.joda.time.field.UnsupportedDurationField.getMillis(int)"]
1457 [label="org.joda.time.field.BaseDurationField.getMillis(int)"]
1546 [label="org.joda.time.field.DelegatedDurationField.getMillis(int)"]
1659 [label="org.joda.time.field.ScaledDurationField.getMillis(int)"]
1083 [label="org.joda.time.DurationField.getMillis(int,long)"]
1082 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(int,long)"]
1154 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(int,long)"]
1737 [label="org.joda.time.field.UnsupportedDurationField.getMillis(int,long)"]
1472 [label="org.joda.time.field.DecoratedDurationField.getMillis(int,long)"]
1550 [label="org.joda.time.field.DelegatedDurationField.getMillis(int,long)"]
1661 [label="org.joda.time.field.ScaledDurationField.getMillis(int,long)"]
1589 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(int,long)"]
1549 [label="org.joda.time.DurationField.getMillis(long)"]
1736 [label="org.joda.time.field.UnsupportedDurationField.getMillis(long)"]
1458 [label="org.joda.time.field.BaseDurationField.getMillis(long)"]
1548 [label="org.joda.time.field.DelegatedDurationField.getMillis(long)"]
1660 [label="org.joda.time.field.ScaledDurationField.getMillis(long)"]
1085 [label="org.joda.time.DurationField.getMillis(long,long)"]
1084 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(long,long)"]
1155 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(long,long)"]
1738 [label="org.joda.time.field.UnsupportedDurationField.getMillis(long,long)"]
1636 [label="org.joda.time.field.PreciseDurationField.getMillis(long,long)"]
1473 [label="org.joda.time.field.DecoratedDurationField.getMillis(long,long)"]
1551 [label="org.joda.time.field.DelegatedDurationField.getMillis(long,long)"]
1662 [label="org.joda.time.field.ScaledDurationField.getMillis(long,long)"]
1591 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(long,long)"]
2620 [label="org.joda.time.DateTimeZone.getMillisKeepLocal(org.joda.time.DateTimeZone,long)"]
40 [label="org.joda.time.base.AbstractDateTime.getMillisOfDay()"]
3245 [label="org.joda.time.LocalDateTime.getMillisOfDay()"]
3351 [label="org.joda.time.LocalTime.getMillisOfDay()"]
624 [label="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)"]
42 [label="org.joda.time.base.AbstractDateTime.getMillisOfSecond()"]
3199 [label="org.joda.time.LocalDateTime.getMillisOfSecond()"]
3880 [label="org.joda.time.TimeOfDay.getMillisOfSecond()"]
3350 [label="org.joda.time.LocalTime.getMillisOfSecond()"]
591 [label="org.joda.time.chrono.BasicChronology.getMinYear()"]
534 [label="org.joda.time.chrono.BasicChronology.getMinimumDaysInFirstWeek()"]
857 [label="org.joda.time.chrono.GJChronology.getMinimumDaysInFirstWeek()"]
470 [label="org.joda.time.DateTimeField.getMinimumValue()"]
719 [label="org.joda.time.chrono.BasicYearDateTimeField.getMinimumValue()"]
703 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getMinimumValue()"]
801 [label="org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue()"]
1192 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue()"]
1711 [label="org.joda.time.field.UnsupportedDateTimeField.getMinimumValue()"]
1632 [label="org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()"]
1441 [label="org.joda.time.field.BaseDateTimeField.getMinimumValue()"]
1518 [label="org.joda.time.field.DelegatedDateTimeField.getMinimumValue()"]
1467 [label="org.joda.time.field.DecoratedDateTimeField.getMinimumValue()"]
1359 [label="org.joda.time.field.AbstractPartialFieldProperty.getMinimumValue()"]
1391 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()"]
806 [label="org.joda.time.DateTimeField.getMinimumValue(long)"]
805 [label="org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(long)"]
834 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMinimumValue(long)"]
1113 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMinimumValue(long)"]
1193 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(long)"]
1712 [label="org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(long)"]
1429 [label="org.joda.time.field.BaseDateTimeField.getMinimumValue(long)"]
1519 [label="org.joda.time.field.DelegatedDateTimeField.getMinimumValue(long)"]
803 [label="org.joda.time.DateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
802 [label="org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.ReadablePartial)"]
1194 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
1713 [label="org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
1433 [label="org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
1520 [label="org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
474 [label="org.joda.time.DateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
804 [label="org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1195 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1714 [label="org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1425 [label="org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1521 [label="org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1358 [label="org.joda.time.field.AbstractPartialFieldProperty.getMinimumValueOverall()"]
1390 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()"]
32 [label="org.joda.time.base.AbstractDateTime.getMinuteOfDay()"]
34 [label="org.joda.time.base.AbstractDateTime.getMinuteOfHour()"]
3197 [label="org.joda.time.LocalDateTime.getMinuteOfHour()"]
3878 [label="org.joda.time.TimeOfDay.getMinuteOfHour()"]
3348 [label="org.joda.time.LocalTime.getMinuteOfHour()"]
3376 [label="org.joda.time.Period.getMinutes()"]
3631 [label="org.joda.time.MutablePeriod.getMinutes()"]
3385 [label="org.joda.time.Minutes.getMinutes()"]
3174 [label="java.util.Date.getMinutes()"]
3059 [label="java.util.Date.getMonth()"]
959 [label="org.joda.time.chrono.GJLocaleSymbols.getMonthMaxShortTextLength()"]
957 [label="org.joda.time.chrono.GJLocaleSymbols.getMonthMaxTextLength()"]
20 [label="org.joda.time.base.AbstractDateTime.getMonthOfYear()"]
2489 [label="org.joda.time.LocalDate.getMonthOfYear()"]
3194 [label="org.joda.time.LocalDateTime.getMonthOfYear()"]
4014 [label="org.joda.time.YearMonthDay.getMonthOfYear()"]
3438 [label="org.joda.time.MonthDay.getMonthOfYear()"]
3961 [label="org.joda.time.YearMonth.getMonthOfYear()"]
578 [label="org.joda.time.chrono.BasicChronology.getMonthOfYear(long)"]
629 [label="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)"]
579 [label="org.joda.time.chrono.BasicChronology.getMonthOfYear(long,int)"]
630 [label="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)"]
632 [label="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)"]
1041 [label="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)"]
2420 [label="org.joda.time.Period.getMonths()"]
3627 [label="org.joda.time.MutablePeriod.getMonths()"]
3459 [label="org.joda.time.Months.getMonths()"]
941 [label="java.text.DateFormatSymbols.getMonths()"]
537 [label="java.lang.Class.getName()"]
1406 [label="org.joda.time.DateTimeFieldType.getName()"]
1345 [label="org.joda.time.DateTimeField.getName()"]
3799 [label="org.joda.time.PeriodType.getName()"]
343 [label="org.joda.time.DurationFieldType.getName()"]
372 [label="org.joda.time.DurationField.getName()"]
1729 [label="org.joda.time.field.UnsupportedDurationField.getName()"]
1683 [label="org.joda.time.field.UnsupportedDateTimeField.getName()"]
1405 [label="org.joda.time.field.BaseDateTimeField.getName()"]
1480 [label="org.joda.time.field.DelegatedDateTimeField.getName()"]
1453 [label="org.joda.time.field.BaseDurationField.getName()"]
1344 [label="org.joda.time.field.AbstractPartialFieldProperty.getName()"]
1373 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getName()"]
1537 [label="org.joda.time.field.DelegatedDurationField.getName()"]
2468 [label="org.joda.time.tz.DefaultNameProvider.getName(java.util.Locale,java.lang.String,java.lang.String)"]
2869 [label="org.joda.time.tz.NameProvider.getName(java.util.Locale,java.lang.String,java.lang.String)"]
2868 [label="org.joda.time.DateTimeZone.getName(long)"]
1992 [label="org.joda.time.DateTimeZone.getName(long,java.util.Locale)"]
2374 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()"]
2373 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.getNameKey()"]
2390 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getNameKey()"]
2321 [label="org.joda.time.DateTimeZone.getNameKey(long)"]
2320 [label="org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long)"]
2330 [label="org.joda.time.tz.CachedDateTimeZone.getNameKey(long)"]
2401 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(long)"]
2423 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long)"]
2467 [label="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)"]
2372 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getOfYear()"]
2371 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.getOfYear()"]
1162 [label="org.joda.time.DateTimeZone.getOffset(long)"]
2322 [label="org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long)"]
2332 [label="org.joda.time.tz.CachedDateTimeZone.getOffset(long)"]
2403 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(long)"]
2425 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long)"]
2870 [label="org.joda.time.DateTimeZone.getOffset(org.joda.time.ReadableInstant)"]
1163 [label="org.joda.time.DateTimeZone.getOffsetFromLocal(long)"]
1158 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)"]
1884 [label="org.joda.time.format.DateTimeParserBucket.getOffsetInteger()"]
1157 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)"]
1176 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)"]
744 [label="org.joda.time.chrono.AssembledChronology.getParam()"]
2546 [label="java.io.File.getParentFile()"]
1782 [label="org.joda.time.format.DateTimeFormatter.getParser()"]
2220 [label="org.joda.time.format.PeriodFormatter.getParser()"]
290 [label="org.joda.time.convert.ConverterManager.getPartialConverter(java.lang.Object)"]
1253 [label="org.joda.time.convert.ConverterManager.getPartialConverters()"]
292 [label="org.joda.time.convert.PartialConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)"]
1223 [label="org.joda.time.convert.AbstractConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)"]
1314 [label="org.joda.time.convert.ReadablePartialConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)"]
294 [label="org.joda.time.convert.PartialConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)"]
1224 [label="org.joda.time.convert.AbstractConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)"]
1324 [label="org.joda.time.convert.StringConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)"]
1785 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern(java.util.Locale)"]
333 [label="org.joda.time.convert.ConverterManager.getPeriodConverter(java.lang.Object)"]
1261 [label="org.joda.time.convert.ConverterManager.getPeriodConverters()"]
309 [label="org.joda.time.base.BasePeriod$1.getPeriodType()"]
3635 [label="org.joda.time.base.BasePeriod.getPeriodType()"]
391 [label="org.joda.time.base.BaseSingleFieldPeriod.getPeriodType()"]
194 [label="org.joda.time.ReadablePeriod.getPeriodType()"]
2892 [label="org.joda.time.Days.getPeriodType()"]
3902 [label="org.joda.time.Weeks.getPeriodType()"]
2959 [label="org.joda.time.Hours.getPeriodType()"]
3379 [label="org.joda.time.Minutes.getPeriodType()"]
3811 [label="org.joda.time.Seconds.getPeriodType()"]
3458 [label="org.joda.time.Months.getPeriodType()"]
4042 [label="org.joda.time.Years.getPeriodType()"]
334 [label="org.joda.time.convert.PeriodConverter.getPeriodType(java.lang.Object)"]
1225 [label="org.joda.time.convert.AbstractConverter.getPeriodType(java.lang.Object)"]
1318 [label="org.joda.time.convert.ReadablePeriodConverter.getPeriodType(java.lang.Object)"]
338 [label="org.joda.time.DateTimeUtils.getPeriodType(org.joda.time.PeriodType)"]
1942 [label="org.joda.time.format.DateTimeParserBucket.getPivotYear()"]
1772 [label="org.joda.time.format.DateTimeFormatter.getPrinter()"]
2214 [label="org.joda.time.format.PeriodFormatter.getPrinter()"]
2844 [label="java.lang.System.getProperty(java.lang.String)"]
771 [label="org.joda.time.DateTimeField.getRangeDurationField()"]
961 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.getRangeDurationField()"]
902 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getRangeDurationField()"]
598 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getRangeDurationField()"]
612 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getRangeDurationField()"]
675 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getRangeDurationField()"]
656 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getRangeDurationField()"]
1007 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.getRangeDurationField()"]
1566 [label="org.joda.time.field.DividedDateTimeField.getRangeDurationField()"]
1423 [label="org.joda.time.field.BaseDateTimeField.getRangeDurationField()"]
1514 [label="org.joda.time.field.DelegatedDateTimeField.getRangeDurationField()"]
1466 [label="org.joda.time.field.DecoratedDateTimeField.getRangeDurationField()"]
1357 [label="org.joda.time.field.AbstractPartialFieldProperty.getRangeDurationField()"]
1386 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()"]
1644 [label="org.joda.time.DateTimeFieldType.getRangeDurationType()"]
2827 [label="org.joda.time.DateTimeUtils.getReadableInterval(org.joda.time.ReadableInterval)"]
1351 [label="org.joda.time.field.AbstractPartialFieldProperty.getReadablePartial()"]
1574 [label="org.joda.time.field.DividedDateTimeField.getRemainder(int)"]
2571 [label="java.lang.ClassLoader.getResourceAsStream(java.lang.String)"]
2376 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()"]
2375 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.getSaveMillis()"]
2391 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getSaveMillis()"]
36 [label="org.joda.time.base.AbstractDateTime.getSecondOfDay()"]
38 [label="org.joda.time.base.AbstractDateTime.getSecondOfMinute()"]
3198 [label="org.joda.time.LocalDateTime.getSecondOfMinute()"]
3879 [label="org.joda.time.TimeOfDay.getSecondOfMinute()"]
3349 [label="org.joda.time.LocalTime.getSecondOfMinute()"]
3731 [label="org.joda.time.Period.getSeconds()"]
3632 [label="org.joda.time.MutablePeriod.getSeconds()"]
3817 [label="org.joda.time.Seconds.getSeconds()"]
3175 [label="java.util.Date.getSeconds()"]
1250 [label="java.lang.System.getSecurityManager()"]
943 [label="java.text.DateFormatSymbols.getShortMonths()"]
2466 [label="org.joda.time.tz.DefaultNameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String)"]
2867 [label="org.joda.time.tz.NameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String)"]
2866 [label="org.joda.time.DateTimeZone.getShortName(long)"]
1993 [label="org.joda.time.DateTimeZone.getShortName(long,java.util.Locale)"]
940 [label="java.text.DateFormatSymbols.getShortWeekdays()"]
2922 [label="org.joda.time.Duration.getStandardDays()"]
2923 [label="org.joda.time.Duration.getStandardHours()"]
2924 [label="org.joda.time.Duration.getStandardMinutes()"]
2415 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getStandardOffset()"]
2324 [label="org.joda.time.DateTimeZone.getStandardOffset(long)"]
2323 [label="org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long)"]
2333 [label="org.joda.time.tz.CachedDateTimeZone.getStandardOffset(long)"]
2427 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getStandardOffset(long)"]
2426 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long)"]
2925 [label="org.joda.time.Duration.getStandardSeconds()"]
124 [label="org.joda.time.base.AbstractInterval.getStart()"]
2885 [label="org.joda.time.ReadableInterval.getStart()"]
279 [label="org.joda.time.base.BaseInterval.getStartMillis()"]
125 [label="org.joda.time.ReadableInterval.getStartMillis()"]
2504 [label="org.joda.time.tz.ZoneInfoCompiler.getStartOfYear()"]
2201 [label="java.util.ResourceBundle.getString(java.lang.String)"]
1227 [label="org.joda.time.convert.Converter.getSupportedType()"]
2572 [label="java.lang.ClassLoader.getSystemResourceAsStream(java.lang.String)"]
1238 [label="java.util.Calendar.getTime()"]
1236 [label="java.util.Date.getTime()"]
3207 [label="java.util.Calendar.getTimeInMillis()"]
1787 [label="java.text.DateFormat.getTimeInstance(int,java.util.Locale)"]
1231 [label="java.util.Calendar.getTimeZone()"]
2470 [label="java.util.TimeZone.getTimeZone(java.lang.String)"]
2398 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.getToYear()"]
573 [label="org.joda.time.chrono.BasicChronology.getTotalMillisByYearMonth(int,int)"]
635 [label="org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)"]
1944 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(long,org.joda.time.Chronology)"]
1947 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(org.joda.time.ReadablePartial)"]
164 [label="org.joda.time.DateTimeField.getType()"]
836 [label="org.joda.time.DurationField.getType()"]
1413 [label="org.joda.time.field.BaseDateTimeField.getType()"]
1600 [label="org.joda.time.field.DelegatedDateTimeField.getType()"]
1641 [label="org.joda.time.field.BaseDurationField.getType()"]
1603 [label="org.joda.time.field.MillisDurationField.getType()"]
2462 [label="org.joda.time.tz.CachedDateTimeZone.getUncachedZone()"]
373 [label="org.joda.time.DurationField.getUnitMillis()"]
1150 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getUnitMillis()"]
1629 [label="org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()"]
1477 [label="org.joda.time.field.DecoratedDurationField.getUnitMillis()"]
1556 [label="org.joda.time.field.DelegatedDurationField.getUnitMillis()"]
1667 [label="org.joda.time.field.ScaledDurationField.getUnitMillis()"]
1611 [label="org.joda.time.field.MillisDurationField.getUnitMillis()"]
2799 [label="org.joda.time.DateTimeComparator.getUpperLimit()"]
1072 [label="org.joda.time.chrono.LimitChronology.getUpperLimit()"]
2396 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getUpperLimit(int)"]
382 [label="org.joda.time.base.BaseSingleFieldPeriod.getValue()"]
2529 [label="java.util.Map$Entry.getValue()"]
3399 [label="org.joda.time.base.BasePartial.getValue(int)"]
365 [label="org.joda.time.base.BasePeriod.getValue(int)"]
381 [label="org.joda.time.base.BaseSingleFieldPeriod.getValue(int)"]
170 [label="org.joda.time.ReadablePartial.getValue(int)"]
200 [label="org.joda.time.ReadablePeriod.getValue(int)"]
3070 [label="org.joda.time.LocalDate.getValue(int)"]
3186 [label="org.joda.time.LocalDateTime.getValue(int)"]
3326 [label="org.joda.time.LocalTime.getValue(int)"]
3663 [label="org.joda.time.Partial.getValue(int)"]
1541 [label="org.joda.time.DurationField.getValue(long)"]
1730 [label="org.joda.time.field.UnsupportedDurationField.getValue(long)"]
1454 [label="org.joda.time.field.BaseDurationField.getValue(long)"]
1540 [label="org.joda.time.field.DelegatedDurationField.getValue(long)"]
1655 [label="org.joda.time.field.ScaledDurationField.getValue(long)"]
1604 [label="org.joda.time.field.MillisDurationField.getValue(long)"]
1079 [label="org.joda.time.DurationField.getValue(long,long)"]
1076 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getValue(long,long)"]
1151 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValue(long,long)"]
1733 [label="org.joda.time.field.UnsupportedDurationField.getValue(long,long)"]
1456 [label="org.joda.time.field.BaseDurationField.getValue(long,long)"]
1544 [label="org.joda.time.field.DelegatedDurationField.getValue(long,long)"]
1657 [label="org.joda.time.field.ScaledDurationField.getValue(long,long)"]
1586 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(long,long)"]
1605 [label="org.joda.time.field.MillisDurationField.getValue(long,long)"]
1543 [label="org.joda.time.DurationField.getValueAsLong(long)"]
1732 [label="org.joda.time.field.UnsupportedDurationField.getValueAsLong(long)"]
1455 [label="org.joda.time.field.BaseDurationField.getValueAsLong(long)"]
1542 [label="org.joda.time.field.DelegatedDurationField.getValueAsLong(long)"]
1656 [label="org.joda.time.field.ScaledDurationField.getValueAsLong(long)"]
1081 [label="org.joda.time.DurationField.getValueAsLong(long,long)"]
1080 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong(long,long)"]
1153 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValueAsLong(long,long)"]
1734 [label="org.joda.time.field.UnsupportedDurationField.getValueAsLong(long,long)"]
1471 [label="org.joda.time.field.DecoratedDurationField.getValueAsLong(long,long)"]
1545 [label="org.joda.time.field.DelegatedDurationField.getValueAsLong(long,long)"]
1658 [label="org.joda.time.field.ScaledDurationField.getValueAsLong(long,long)"]
1587 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(long,long)"]
169 [label="org.joda.time.base.AbstractPartial.getValues()"]
199 [label="org.joda.time.base.AbstractPeriod.getValues()"]
299 [label="org.joda.time.base.BasePartial.getValues()"]
3665 [label="org.joda.time.Partial.getValues()"]
2414 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getWallOffset()"]
22 [label="org.joda.time.base.AbstractDateTime.getWeekOfWeekyear()"]
3112 [label="org.joda.time.LocalDate.getWeekOfWeekyear()"]
3242 [label="org.joda.time.LocalDateTime.getWeekOfWeekyear()"]
587 [label="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long)"]
586 [label="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)"]
938 [label="java.text.DateFormatSymbols.getWeekdays()"]
3730 [label="org.joda.time.Period.getWeeks()"]
3628 [label="org.joda.time.MutablePeriod.getWeeks()"]
3908 [label="org.joda.time.Weeks.getWeeks()"]
567 [label="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)"]
18 [label="org.joda.time.base.AbstractDateTime.getWeekyear()"]
3111 [label="org.joda.time.LocalDate.getWeekyear()"]
3241 [label="org.joda.time.LocalDateTime.getWeekyear()"]
585 [label="org.joda.time.chrono.BasicChronology.getWeekyear(long)"]
1597 [label="org.joda.time.field.DelegatedDateTimeField.getWrappedField()"]
1078 [label="org.joda.time.field.DecoratedDurationField.getWrappedField()"]
964 [label="org.joda.time.field.DecoratedDateTimeField.getWrappedField()"]
1584 [label="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)"]
651 [label="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int,int)"]
16 [label="org.joda.time.base.AbstractDateTime.getYear()"]
853 [label="org.joda.time.LocalDate.getYear()"]
3193 [label="org.joda.time.LocalDateTime.getYear()"]
4013 [label="org.joda.time.YearMonthDay.getYear()"]
3960 [label="org.joda.time.YearMonth.getYear()"]
3058 [label="java.util.Date.getYear()"]
575 [label="org.joda.time.chrono.BasicChronology.getYear(long)"]
1033 [label="org.joda.time.chrono.IslamicChronology.getYear(long)"]
715 [label="org.joda.time.chrono.BasicChronology.getYearDifference(long,long)"]
626 [label="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)"]
636 [label="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)"]
1036 [label="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)"]
571 [label="org.joda.time.chrono.BasicChronology.getYearInfo(int)"]
569 [label="org.joda.time.chrono.BasicChronology.getYearMillis(int)"]
574 [label="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)"]
572 [label="org.joda.time.chrono.BasicChronology.getYearMonthMillis(int,int)"]
14 [label="org.joda.time.base.AbstractDateTime.getYearOfCentury()"]
3110 [label="org.joda.time.LocalDate.getYearOfCentury()"]
3240 [label="org.joda.time.LocalDateTime.getYearOfCentury()"]
12 [label="org.joda.time.base.AbstractDateTime.getYearOfEra()"]
3109 [label="org.joda.time.LocalDate.getYearOfEra()"]
3239 [label="org.joda.time.LocalDateTime.getYearOfEra()"]
2419 [label="org.joda.time.Period.getYears()"]
3626 [label="org.joda.time.MutablePeriod.getYears()"]
4043 [label="org.joda.time.Years.getYears()"]
46 [label="org.joda.time.base.AbstractInstant.getZone()"]
81 [label="org.joda.time.Chronology.getZone()"]
1325 [label="org.joda.time.format.DateTimeFormatter.getZone()"]
1886 [label="org.joda.time.format.DateTimeParserBucket.getZone()"]
419 [label="org.joda.time.chrono.AssembledChronology.getZone()"]
527 [label="org.joda.time.chrono.BasicChronology.getZone()"]
866 [label="org.joda.time.chrono.GJChronology.getZone()"]
1206 [label="org.joda.time.chrono.ZonedChronology.getZone()"]
2475 [label="org.joda.time.tz.UTCProvider.getZone(java.lang.String)"]
2564 [label="org.joda.time.tz.ZoneInfoProvider.getZone(java.lang.String)"]
2847 [label="org.joda.time.tz.Provider.getZone(java.lang.String)"]
848 [label="org.joda.time.DateTimeUtils.getZone(org.joda.time.DateTimeZone)"]
2417 [label="java.text.DateFormatSymbols.getZoneStrings()"]
791 [label="org.joda.time.chrono.GJChronology$CutoverField.gregorianToJulian(long)"]
823 [label="org.joda.time.chrono.GJChronology.gregorianToJulianByWeekyear(long)"]
824 [label="org.joda.time.chrono.GJChronology.gregorianToJulianByYear(long)"]
496 [label="org.joda.time.DateTimeFieldType.halfdayOfDay()"]
413 [label="org.joda.time.Chronology.halfdayOfDay()"]
451 [label="org.joda.time.chrono.BaseChronology.halfdayOfDay()"]
889 [label="org.joda.time.chrono.AssembledChronology.halfdayOfDay()"]
518 [label="org.joda.time.chrono.GJLocaleSymbols.halfdayTextToValue(java.lang.String)"]
516 [label="org.joda.time.chrono.GJLocaleSymbols.halfdayValueToText(int)"]
401 [label="org.joda.time.Chronology.halfdays()"]
493 [label="org.joda.time.DurationFieldType.halfdays()"]
433 [label="org.joda.time.chrono.BaseChronology.halfdays()"]
2480 [label="java.util.StringTokenizer.hasMoreTokens()"]
2393 [label="java.util.Iterator.hasNext()"]
106 [label="org.joda.time.base.AbstractInstant.hashCode()"]
71 [label="org.joda.time.base.AbstractDuration.hashCode()"]
155 [label="org.joda.time.base.AbstractInterval.hashCode()"]
183 [label="org.joda.time.base.AbstractPartial.hashCode()"]
213 [label="org.joda.time.base.AbstractPeriod.hashCode()"]
392 [label="org.joda.time.base.BaseSingleFieldPeriod.hashCode()"]
107 [label="java.lang.Object.hashCode()"]
538 [label="java.lang.String.hashCode()"]
539 [label="org.joda.time.DateTimeZone.hashCode()"]
3801 [label="org.joda.time.PeriodType.hashCode()"]
3075 [label="org.joda.time.LocalDate.hashCode()"]
2800 [label="org.joda.time.DateTimeComparator.hashCode()"]
1003 [label="org.joda.time.chrono.ISOChronology.hashCode()"]
536 [label="org.joda.time.chrono.BasicChronology.hashCode()"]
741 [label="org.joda.time.chrono.BuddhistChronology.hashCode()"]
872 [label="org.joda.time.chrono.GJChronology.hashCode()"]
1133 [label="org.joda.time.chrono.LimitChronology.hashCode()"]
1217 [label="org.joda.time.chrono.ZonedChronology.hashCode()"]
1032 [label="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.hashCode()"]
1031 [label="org.joda.time.chrono.IslamicChronology.hashCode()"]
1064 [label="org.joda.time.chrono.LenientChronology.hashCode()"]
1143 [label="org.joda.time.chrono.StrictChronology.hashCode()"]
1166 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.hashCode()"]
1204 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.hashCode()"]
1744 [label="org.joda.time.field.UnsupportedDurationField.hashCode()"]
1642 [label="org.joda.time.field.PreciseDurationField.hashCode()"]
1368 [label="org.joda.time.field.AbstractPartialFieldProperty.hashCode()"]
1402 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()"]
1560 [label="org.joda.time.field.DelegatedDurationField.hashCode()"]
1669 [label="org.joda.time.field.ScaledDurationField.hashCode()"]
1613 [label="org.joda.time.field.MillisDurationField.hashCode()"]
2339 [label="org.joda.time.tz.CachedDateTimeZone.hashCode()"]
2473 [label="org.joda.time.tz.FixedDateTimeZone.hashCode()"]
2157 [label="org.joda.time.format.ISODateTimeFormat.hour()"]
2103 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourElement()"]
2113 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourMinute()"]
2114 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecond()"]
2536 [label="org.joda.time.format.ISODateTimeFormat.hourMinuteSecondFraction()"]
2116 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecondFraction()"]
2115 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecondMillis()"]
491 [label="org.joda.time.DateTimeFieldType.hourOfDay()"]
31 [label="org.joda.time.Chronology.hourOfDay()"]
2784 [label="org.joda.time.DateTime.hourOfDay()"]
3554 [label="org.joda.time.MutableDateTime.hourOfDay()"]
3273 [label="org.joda.time.LocalDateTime.hourOfDay()"]
3887 [label="org.joda.time.TimeOfDay.hourOfDay()"]
3357 [label="org.joda.time.LocalTime.hourOfDay()"]
447 [label="org.joda.time.chrono.BaseChronology.hourOfDay()"]
885 [label="org.joda.time.chrono.AssembledChronology.hourOfDay()"]
494 [label="org.joda.time.DateTimeFieldType.hourOfHalfday()"]
411 [label="org.joda.time.Chronology.hourOfHalfday()"]
449 [label="org.joda.time.chrono.BaseChronology.hourOfHalfday()"]
886 [label="org.joda.time.chrono.AssembledChronology.hourOfHalfday()"]
400 [label="org.joda.time.Chronology.hours()"]
2949 [label="org.joda.time.PeriodType.hours()"]
352 [label="org.joda.time.DurationFieldType.hours()"]
432 [label="org.joda.time.chrono.BaseChronology.hours()"]
3712 [label="org.joda.time.Period.hours(int)"]
2896 [label="org.joda.time.Hours.hours(int)"]
2950 [label="org.joda.time.Hours.hoursBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
2951 [label="org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
2953 [label="org.joda.time.Hours.hoursIn(org.joda.time.ReadableInterval)"]
925 [label="java.lang.System.identityHashCode(java.lang.Object)"]
1337 [label="java.lang.String.indexOf(int)"]
2484 [label="java.lang.String.indexOf(java.lang.String)"]
174 [label="org.joda.time.base.AbstractPartial.indexOf(org.joda.time.DateTimeFieldType)"]
175 [label="org.joda.time.base.AbstractPartial.indexOf(org.joda.time.DurationFieldType)"]
202 [label="org.joda.time.base.AbstractPeriod.indexOf(org.joda.time.DurationFieldType)"]
205 [label="org.joda.time.PeriodType.indexOf(org.joda.time.DurationFieldType)"]
172 [label="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DateTimeFieldType)"]
177 [label="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DurationFieldType)"]
1183 [label="java.lang.Throwable.initCause(java.lang.Throwable)"]
2252 [label="java.lang.StringBuffer.insert(int,char)"]
77 [label="java.lang.StringBuffer.insert(int,java.lang.String)"]
948 [label="java.lang.Integer.intValue()"]
933 [label="java.lang.String.intern()"]
2829 [label="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])"]
109 [label="org.joda.time.base.AbstractInstant.isAfter(long)"]
139 [label="org.joda.time.base.AbstractInterval.isAfter(long)"]
112 [label="org.joda.time.base.AbstractInstant.isAfter(org.joda.time.ReadableInstant)"]
141 [label="org.joda.time.base.AbstractInterval.isAfter(org.joda.time.ReadableInstant)"]
142 [label="org.joda.time.base.AbstractInterval.isAfter(org.joda.time.ReadableInterval)"]
186 [label="org.joda.time.base.AbstractPartial.isAfter(org.joda.time.ReadablePartial)"]
110 [label="org.joda.time.base.AbstractInstant.isAfterNow()"]
140 [label="org.joda.time.base.AbstractInterval.isAfterNow()"]
1274 [label="java.lang.Class.isAssignableFrom(java.lang.Class)"]
114 [label="org.joda.time.base.AbstractInstant.isBefore(long)"]
135 [label="org.joda.time.base.AbstractInterval.isBefore(long)"]
116 [label="org.joda.time.base.AbstractInstant.isBefore(org.joda.time.ReadableInstant)"]
137 [label="org.joda.time.base.AbstractInterval.isBefore(org.joda.time.ReadableInstant)"]
1118 [label="org.joda.time.ReadableInstant.isBefore(org.joda.time.ReadableInstant)"]
138 [label="org.joda.time.base.AbstractInterval.isBefore(org.joda.time.ReadableInterval)"]
187 [label="org.joda.time.base.AbstractPartial.isBefore(org.joda.time.ReadablePartial)"]
115 [label="org.joda.time.base.AbstractInstant.isBeforeNow()"]
136 [label="org.joda.time.base.AbstractInterval.isBeforeNow()"]
2457 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()"]
322 [label="org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial)"]
2545 [label="java.io.File.isDirectory()"]
3788 [label="java.util.Map.isEmpty()"]
2011 [label="java.util.List.isEmpty()"]
117 [label="org.joda.time.base.AbstractInstant.isEqual(long)"]
67 [label="org.joda.time.base.AbstractDuration.isEqual(org.joda.time.ReadableDuration)"]
119 [label="org.joda.time.base.AbstractInstant.isEqual(org.joda.time.ReadableInstant)"]
134 [label="org.joda.time.base.AbstractInterval.isEqual(org.joda.time.ReadableInterval)"]
188 [label="org.joda.time.base.AbstractPartial.isEqual(org.joda.time.ReadablePartial)"]
118 [label="org.joda.time.base.AbstractInstant.isEqualNow()"]
1149 [label="org.joda.time.DateTimeZone.isFixed()"]
2334 [label="org.joda.time.tz.CachedDateTimeZone.isFixed()"]
2033 [label="org.joda.time.format.DateTimeFormatterBuilder.isFormatter(java.lang.Object)"]
2910 [label="org.joda.time.Days.isGreaterThan(org.joda.time.Days)"]
2973 [label="org.joda.time.Hours.isGreaterThan(org.joda.time.Hours)"]
3393 [label="org.joda.time.Minutes.isGreaterThan(org.joda.time.Minutes)"]
3467 [label="org.joda.time.Months.isGreaterThan(org.joda.time.Months)"]
3825 [label="org.joda.time.Seconds.isGreaterThan(org.joda.time.Seconds)"]
3916 [label="org.joda.time.Weeks.isGreaterThan(org.joda.time.Weeks)"]
4051 [label="org.joda.time.Years.isGreaterThan(org.joda.time.Years)"]
2683 [label="org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable)"]
1387 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()"]
796 [label="org.joda.time.DateTimeField.isLeap(long)"]
716 [label="org.joda.time.chrono.BasicYearDateTimeField.isLeap(long)"]
699 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.isLeap(long)"]
657 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLeap(long)"]
795 [label="org.joda.time.chrono.GJChronology$CutoverField.isLeap(long)"]
1102 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.isLeap(long)"]
1187 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLeap(long)"]
1709 [label="org.joda.time.field.UnsupportedDateTimeField.isLeap(long)"]
1756 [label="org.joda.time.field.ZeroIsMaxDateTimeField.isLeap(long)"]
1620 [label="org.joda.time.field.OffsetDateTimeField.isLeap(long)"]
1515 [label="org.joda.time.field.DelegatedDateTimeField.isLeap(long)"]
566 [label="org.joda.time.chrono.BasicChronology.isLeapYear(int)"]
625 [label="org.joda.time.chrono.BasicFixedMonthChronology.isLeapYear(int)"]
987 [label="org.joda.time.chrono.GregorianChronology.isLeapYear(int)"]
1054 [label="org.joda.time.chrono.JulianChronology.isLeapYear(int)"]
1038 [label="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.isLeapYear(int)"]
1034 [label="org.joda.time.chrono.IslamicChronology.isLeapYear(int)"]
1169 [label="org.joda.time.DateTimeField.isLenient()"]
1168 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLenient()"]
1482 [label="org.joda.time.field.DelegatedDateTimeField.isLenient()"]
1463 [label="org.joda.time.field.DecoratedDateTimeField.isLenient()"]
2911 [label="org.joda.time.Days.isLessThan(org.joda.time.Days)"]
2974 [label="org.joda.time.Hours.isLessThan(org.joda.time.Hours)"]
3394 [label="org.joda.time.Minutes.isLessThan(org.joda.time.Minutes)"]
3468 [label="org.joda.time.Months.isLessThan(org.joda.time.Months)"]
3826 [label="org.joda.time.Seconds.isLessThan(org.joda.time.Seconds)"]
3917 [label="org.joda.time.Weeks.isLessThan(org.joda.time.Weeks)"]
4052 [label="org.joda.time.Years.isLessThan(org.joda.time.Years)"]
2873 [label="org.joda.time.DateTimeZone.isLocalDateTimeGap(org.joda.time.LocalDateTime)"]
68 [label="org.joda.time.base.AbstractDuration.isLongerThan(org.joda.time.ReadableDuration)"]
3695 [label="org.joda.time.Partial.isMatch(org.joda.time.ReadableInstant)"]
3696 [label="org.joda.time.Partial.isMatch(org.joda.time.ReadablePartial)"]
1818 [label="org.joda.time.format.DateTimeFormat.isNumericToken(java.lang.String)"]
2070 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.isParser()"]
2029 [label="org.joda.time.format.DateTimeFormatterBuilder.isParser(java.lang.Object)"]
371 [label="org.joda.time.DurationField.isPrecise()"]
1148 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise()"]
1470 [label="org.joda.time.field.DecoratedDurationField.isPrecise()"]
1539 [label="org.joda.time.field.DelegatedDurationField.isPrecise()"]
2069 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.isPrinter()"]
2028 [label="org.joda.time.format.DateTimeFormatterBuilder.isPrinter(java.lang.Object)"]
275 [label="org.joda.time.convert.IntervalConverter.isReadableInterval(java.lang.Object,org.joda.time.Chronology)"]
69 [label="org.joda.time.base.AbstractDuration.isShorterThan(org.joda.time.ReadableDuration)"]
2871 [label="org.joda.time.DateTimeZone.isStandardOffset(long)"]
84 [label="org.joda.time.DateTimeField.isSupported()"]
415 [label="org.joda.time.DurationField.isSupported()"]
1481 [label="org.joda.time.field.DelegatedDateTimeField.isSupported()"]
1538 [label="org.joda.time.field.DelegatedDurationField.isSupported()"]
2808 [label="org.joda.time.DateTimeFieldType.isSupported(org.joda.time.Chronology)"]
2945 [label="org.joda.time.DurationFieldType.isSupported(org.joda.time.Chronology)"]
409 [label="org.joda.time.chrono.AssembledChronology$Fields.isSupported(org.joda.time.DateTimeField)"]
83 [label="org.joda.time.base.AbstractInstant.isSupported(org.joda.time.DateTimeFieldType)"]
173 [label="org.joda.time.base.AbstractPartial.isSupported(org.joda.time.DateTimeFieldType)"]
604 [label="org.joda.time.ReadablePartial.isSupported(org.joda.time.DateTimeFieldType)"]
3072 [label="org.joda.time.LocalDate.isSupported(org.joda.time.DateTimeFieldType)"]
3188 [label="org.joda.time.LocalDateTime.isSupported(org.joda.time.DateTimeFieldType)"]
3328 [label="org.joda.time.LocalTime.isSupported(org.joda.time.DateTimeFieldType)"]
397 [label="org.joda.time.chrono.AssembledChronology$Fields.isSupported(org.joda.time.DurationField)"]
203 [label="org.joda.time.base.AbstractPeriod.isSupported(org.joda.time.DurationFieldType)"]
384 [label="org.joda.time.base.BaseSingleFieldPeriod.isSupported(org.joda.time.DurationFieldType)"]
204 [label="org.joda.time.PeriodType.isSupported(org.joda.time.DurationFieldType)"]
3073 [label="org.joda.time.LocalDate.isSupported(org.joda.time.DurationFieldType)"]
3189 [label="org.joda.time.LocalDateTime.isSupported(org.joda.time.DurationFieldType)"]
3329 [label="org.joda.time.LocalTime.isSupported(org.joda.time.DurationFieldType)"]
2255 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(org.joda.time.PeriodType,int)"]
2381 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)"]
2556 [label="java.lang.Character.isWhitespace(char)"]
2259 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isZero(org.joda.time.ReadablePeriod)"]
2392 [label="java.util.ArrayList.iterator()"]
2436 [label="java.util.Set.iterator()"]
2540 [label="java.io.BufferedReader.BufferedReader(java.io.Reader)"]
2441 [label="java.io.DataInputStream.DataInputStream(java.io.InputStream)"]
2461 [label="java.io.DataOutputStream.DataOutputStream(java.io.OutputStream)"]
2516 [label="java.io.File.File(java.io.File,java.lang.String)"]
2515 [label="java.io.File.File(java.lang.String)"]
2549 [label="java.io.FileInputStream.FileInputStream(java.io.File)"]
2547 [label="java.io.FileOutputStream.FileOutputStream(java.io.File)"]
2539 [label="java.io.FileReader.FileReader(java.io.File)"]
2411 [label="java.io.IOException.IOException(java.lang.String)"]
1043 [label="java.lang.ArithmeticException.ArithmeticException(java.lang.String)"]
185 [label="java.lang.ClassCastException.ClassCastException(java.lang.String)"]
2002 [label="java.lang.Enum.Enum(java.lang.String,int)"]
878 [label="java.lang.IllegalArgumentException.IllegalArgumentException()"]
3 [label="java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)"]
1276 [label="java.lang.IllegalStateException.IllegalStateException(java.lang.String)"]
1273 [label="java.lang.IndexOutOfBoundsException.IndexOutOfBoundsException()"]
379 [label="java.lang.IndexOutOfBoundsException.IndexOutOfBoundsException(java.lang.String)"]
2806 [label="java.lang.InternalError.InternalError()"]
2528 [label="java.lang.InternalError.InternalError(java.lang.String)"]
2601 [label="java.lang.NullPointerException.NullPointerException(java.lang.String)"]
60 [label="java.lang.Object.Object()"]
2860 [label="java.lang.RuntimeException.RuntimeException(java.lang.Throwable)"]
1847 [label="java.lang.String.String(java.lang.String)"]
73 [label="java.lang.StringBuffer.StringBuffer()"]
158 [label="java.lang.StringBuffer.StringBuffer(int)"]
1275 [label="java.lang.StringBuilder.StringBuilder()"]
541 [label="java.lang.StringBuilder.StringBuilder(int)"]
2510 [label="java.lang.ThreadLocal.ThreadLocal()"]
2016 [label="java.lang.UnsupportedOperationException.UnsupportedOperationException()"]
1375 [label="java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)"]
2573 [label="java.lang.ref.SoftReference.SoftReference(T)"]
935 [label="java.lang.ref.WeakReference.WeakReference(T)"]
3024 [label="java.security.BasicPermission.BasicPermission(java.lang.String)"]
2416 [label="java.text.DateFormatSymbols.DateFormatSymbols(java.util.Locale)"]
2008 [label="java.util.ArrayList.ArrayList()"]
854 [label="java.util.ArrayList.ArrayList(int)"]
2277 [label="java.util.ArrayList.ArrayList(java.util.Collection)"]
3091 [label="java.util.Date.Date(int,int,int)"]
3201 [label="java.util.Date.Date(int,int,int,int,int,int)"]
103 [label="java.util.Date.Date(long)"]
3057 [label="java.util.GregorianCalendar.GregorianCalendar()"]
52 [label="java.util.GregorianCalendar.GregorianCalendar(java.util.TimeZone)"]
727 [label="java.util.HashMap.HashMap()"]
1680 [label="java.util.HashMap.HashMap(int)"]
2831 [label="java.util.HashMap.HashMap(java.util.Map)"]
2435 [label="java.util.HashSet.HashSet()"]
1960 [label="java.util.HashSet.HashSet(int)"]
2161 [label="java.util.HashSet.HashSet(java.util.Collection)"]
2817 [label="java.util.LinkedHashMap.LinkedHashMap()"]
1791 [label="java.util.LinkedHashMap.LinkedHashMap(int)"]
2471 [label="java.util.SimpleTimeZone.SimpleTimeZone(int,java.lang.String)"]
2555 [label="java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)"]
2523 [label="java.util.TreeMap.TreeMap()"]
945 [label="java.util.TreeMap.TreeMap(java.util.Comparator)"]
2568 [label="java.util.TreeSet.TreeSet(java.util.Collection)"]
2275 [label="java.util.TreeSet.TreeSet(java.util.Comparator)"]
924 [label="java.util.WeakHashMap.WeakHashMap()"]
2195 [label="java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()"]
792 [label="org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian(long)"]
821 [label="org.joda.time.chrono.GJChronology.julianToGregorianByWeekyear(long)"]
822 [label="org.joda.time.chrono.GJChronology.julianToGregorianByYear(long)"]
1996 [label="java.util.Map.keySet()"]
542 [label="java.lang.String.lastIndexOf(int)"]
76 [label="java.lang.StringBuffer.length()"]
673 [label="java.lang.String.length()"]
2108 [label="org.joda.time.format.ISODateTimeFormat$Constants.literalTElement()"]
2565 [label="org.joda.time.tz.ZoneInfoProvider.loadZoneData(java.lang.String)"]
2559 [label="org.joda.time.tz.ZoneInfoProvider.loadZoneInfoMap(java.io.InputStream)"]
3168 [label="org.joda.time.format.ISODateTimeFormat.localDateOptionalTimeParser()"]
2154 [label="org.joda.time.format.ISODateTimeFormat$Constants.localDateOptionalTimeParser()"]
3052 [label="org.joda.time.format.ISODateTimeFormat.localDateParser()"]
2149 [label="org.joda.time.format.ISODateTimeFormat$Constants.localDateParser()"]
3310 [label="org.joda.time.format.ISODateTimeFormat.localTimeParser()"]
2151 [label="org.joda.time.format.ISODateTimeFormat$Constants.localTimeParser()"]
1210 [label="org.joda.time.chrono.ZonedChronology.localToUTC(long)"]
2088 [label="java.lang.Math.log(double)"]
1806 [label="org.joda.time.format.DateTimeFormat.longDate()"]
1808 [label="org.joda.time.format.DateTimeFormat.longDateTime()"]
1807 [label="org.joda.time.format.DateTimeFormat.longTime()"]
1283 [label="java.lang.Long.longValue()"]
2513 [label="org.joda.time.tz.ZoneInfoCompiler.main(java.lang.String[])"]
818 [label="java.lang.Math.max(int,int)"]
3011 [label="java.lang.Math.max(long,long)"]
934 [label="org.joda.time.chrono.GJLocaleSymbols.maxLength(java.lang.String[])"]
1803 [label="org.joda.time.format.DateTimeFormat.mediumDate()"]
1805 [label="org.joda.time.format.DateTimeFormat.mediumDateTime()"]
1804 [label="org.joda.time.format.DateTimeFormat.mediumTime()"]
361 [label="org.joda.time.base.BasePeriod.mergePeriod(org.joda.time.ReadablePeriod)"]
3640 [label="org.joda.time.MutablePeriod.mergePeriod(org.joda.time.ReadablePeriod)"]
362 [label="org.joda.time.base.BasePeriod.mergePeriodInto(int[],org.joda.time.ReadablePeriod)"]
396 [label="org.joda.time.Chronology.millis()"]
3787 [label="org.joda.time.PeriodType.millis()"]
355 [label="org.joda.time.DurationFieldType.millis()"]
429 [label="org.joda.time.chrono.BaseChronology.millis()"]
3715 [label="org.joda.time.Period.millis(int)"]
2920 [label="org.joda.time.Duration.millis(long)"]
486 [label="org.joda.time.DateTimeFieldType.millisOfDay()"]
41 [label="org.joda.time.Chronology.millisOfDay()"]
2789 [label="org.joda.time.DateTime.millisOfDay()"]
3559 [label="org.joda.time.MutableDateTime.millisOfDay()"]
3277 [label="org.joda.time.LocalDateTime.millisOfDay()"]
3361 [label="org.joda.time.LocalTime.millisOfDay()"]
442 [label="org.joda.time.chrono.BaseChronology.millisOfDay()"]
879 [label="org.joda.time.chrono.AssembledChronology.millisOfDay()"]
484 [label="org.joda.time.DateTimeFieldType.millisOfSecond()"]
43 [label="org.joda.time.Chronology.millisOfSecond()"]
2790 [label="org.joda.time.DateTime.millisOfSecond()"]
3560 [label="org.joda.time.MutableDateTime.millisOfSecond()"]
3276 [label="org.joda.time.LocalDateTime.millisOfSecond()"]
3890 [label="org.joda.time.TimeOfDay.millisOfSecond()"]
3360 [label="org.joda.time.LocalTime.millisOfSecond()"]
441 [label="org.joda.time.chrono.BaseChronology.millisOfSecond()"]
880 [label="org.joda.time.chrono.AssembledChronology.millisOfSecond()"]
1920 [label="java.lang.Math.min(int,int)"]
3012 [label="java.lang.Math.min(long,long)"]
2188 [label="org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits(int)"]
2905 [label="org.joda.time.Days.minus(int)"]
3911 [label="org.joda.time.Weeks.minus(int)"]
2968 [label="org.joda.time.Hours.minus(int)"]
3388 [label="org.joda.time.Minutes.minus(int)"]
3820 [label="org.joda.time.Seconds.minus(int)"]
3462 [label="org.joda.time.Months.minus(int)"]
4046 [label="org.joda.time.Years.minus(int)"]
2935 [label="org.joda.time.Duration.minus(long)"]
2997 [label="org.joda.time.Instant.minus(long)"]
2739 [label="org.joda.time.DateTime.minus(long)"]
2635 [label="org.joda.time.DateMidnight.minus(long)"]
2906 [label="org.joda.time.Days.minus(org.joda.time.Days)"]
2969 [label="org.joda.time.Hours.minus(org.joda.time.Hours)"]
3389 [label="org.joda.time.Minutes.minus(org.joda.time.Minutes)"]
3463 [label="org.joda.time.Months.minus(org.joda.time.Months)"]
2936 [label="org.joda.time.Duration.minus(org.joda.time.ReadableDuration)"]
2998 [label="org.joda.time.Instant.minus(org.joda.time.ReadableDuration)"]
2740 [label="org.joda.time.DateTime.minus(org.joda.time.ReadableDuration)"]
3226 [label="org.joda.time.LocalDateTime.minus(org.joda.time.ReadableDuration)"]
2636 [label="org.joda.time.DateMidnight.minus(org.joda.time.ReadableDuration)"]
3756 [label="org.joda.time.Period.minus(org.joda.time.ReadablePeriod)"]
2741 [label="org.joda.time.DateTime.minus(org.joda.time.ReadablePeriod)"]
3101 [label="org.joda.time.LocalDate.minus(org.joda.time.ReadablePeriod)"]
3227 [label="org.joda.time.LocalDateTime.minus(org.joda.time.ReadablePeriod)"]
2637 [label="org.joda.time.DateMidnight.minus(org.joda.time.ReadablePeriod)"]
4007 [label="org.joda.time.YearMonthDay.minus(org.joda.time.ReadablePeriod)"]
3870 [label="org.joda.time.TimeOfDay.minus(org.joda.time.ReadablePeriod)"]
3341 [label="org.joda.time.LocalTime.minus(org.joda.time.ReadablePeriod)"]
3434 [label="org.joda.time.MonthDay.minus(org.joda.time.ReadablePeriod)"]
3693 [label="org.joda.time.Partial.minus(org.joda.time.ReadablePeriod)"]
3956 [label="org.joda.time.YearMonth.minus(org.joda.time.ReadablePeriod)"]
3821 [label="org.joda.time.Seconds.minus(org.joda.time.Seconds)"]
3912 [label="org.joda.time.Weeks.minus(org.joda.time.Weeks)"]
4047 [label="org.joda.time.Years.minus(org.joda.time.Years)"]
3760 [label="org.joda.time.Period.minusDays(int)"]
2745 [label="org.joda.time.DateTime.minusDays(int)"]
3105 [label="org.joda.time.LocalDate.minusDays(int)"]
3231 [label="org.joda.time.LocalDateTime.minusDays(int)"]
2642 [label="org.joda.time.DateMidnight.minusDays(int)"]
4010 [label="org.joda.time.YearMonthDay.minusDays(int)"]
3436 [label="org.joda.time.MonthDay.minusDays(int)"]
3761 [label="org.joda.time.Period.minusHours(int)"]
2746 [label="org.joda.time.DateTime.minusHours(int)"]
3232 [label="org.joda.time.LocalDateTime.minusHours(int)"]
3871 [label="org.joda.time.TimeOfDay.minusHours(int)"]
3342 [label="org.joda.time.LocalTime.minusHours(int)"]
3764 [label="org.joda.time.Period.minusMillis(int)"]
2749 [label="org.joda.time.DateTime.minusMillis(int)"]
3235 [label="org.joda.time.LocalDateTime.minusMillis(int)"]
3874 [label="org.joda.time.TimeOfDay.minusMillis(int)"]
3345 [label="org.joda.time.LocalTime.minusMillis(int)"]
3762 [label="org.joda.time.Period.minusMinutes(int)"]
2747 [label="org.joda.time.DateTime.minusMinutes(int)"]
3233 [label="org.joda.time.LocalDateTime.minusMinutes(int)"]
3872 [label="org.joda.time.TimeOfDay.minusMinutes(int)"]
3343 [label="org.joda.time.LocalTime.minusMinutes(int)"]
3758 [label="org.joda.time.Period.minusMonths(int)"]
2743 [label="org.joda.time.DateTime.minusMonths(int)"]
3103 [label="org.joda.time.LocalDate.minusMonths(int)"]
3229 [label="org.joda.time.LocalDateTime.minusMonths(int)"]
2640 [label="org.joda.time.DateMidnight.minusMonths(int)"]
4009 [label="org.joda.time.YearMonthDay.minusMonths(int)"]
3435 [label="org.joda.time.MonthDay.minusMonths(int)"]
3958 [label="org.joda.time.YearMonth.minusMonths(int)"]
3763 [label="org.joda.time.Period.minusSeconds(int)"]
2748 [label="org.joda.time.DateTime.minusSeconds(int)"]
3234 [label="org.joda.time.LocalDateTime.minusSeconds(int)"]
3873 [label="org.joda.time.TimeOfDay.minusSeconds(int)"]
3344 [label="org.joda.time.LocalTime.minusSeconds(int)"]
3759 [label="org.joda.time.Period.minusWeeks(int)"]
2744 [label="org.joda.time.DateTime.minusWeeks(int)"]
3104 [label="org.joda.time.LocalDate.minusWeeks(int)"]
3230 [label="org.joda.time.LocalDateTime.minusWeeks(int)"]
2641 [label="org.joda.time.DateMidnight.minusWeeks(int)"]
3757 [label="org.joda.time.Period.minusYears(int)"]
2742 [label="org.joda.time.DateTime.minusYears(int)"]
3102 [label="org.joda.time.LocalDate.minusYears(int)"]
3228 [label="org.joda.time.LocalDateTime.minusYears(int)"]
2638 [label="org.joda.time.DateMidnight.minusYears(int)"]
4008 [label="org.joda.time.YearMonthDay.minusYears(int)"]
3957 [label="org.joda.time.YearMonth.minusYears(int)"]
2104 [label="org.joda.time.format.ISODateTimeFormat$Constants.minuteElement()"]
490 [label="org.joda.time.DateTimeFieldType.minuteOfDay()"]
33 [label="org.joda.time.Chronology.minuteOfDay()"]
2785 [label="org.joda.time.DateTime.minuteOfDay()"]
3555 [label="org.joda.time.MutableDateTime.minuteOfDay()"]
446 [label="org.joda.time.chrono.BaseChronology.minuteOfDay()"]
884 [label="org.joda.time.chrono.AssembledChronology.minuteOfDay()"]
489 [label="org.joda.time.DateTimeFieldType.minuteOfHour()"]
35 [label="org.joda.time.Chronology.minuteOfHour()"]
2786 [label="org.joda.time.DateTime.minuteOfHour()"]
3556 [label="org.joda.time.MutableDateTime.minuteOfHour()"]
3274 [label="org.joda.time.LocalDateTime.minuteOfHour()"]
3888 [label="org.joda.time.TimeOfDay.minuteOfHour()"]
3358 [label="org.joda.time.LocalTime.minuteOfHour()"]
445 [label="org.joda.time.chrono.BaseChronology.minuteOfHour()"]
883 [label="org.joda.time.chrono.AssembledChronology.minuteOfHour()"]
399 [label="org.joda.time.Chronology.minutes()"]
3370 [label="org.joda.time.PeriodType.minutes()"]
353 [label="org.joda.time.DurationFieldType.minutes()"]
431 [label="org.joda.time.chrono.BaseChronology.minutes()"]
3713 [label="org.joda.time.Period.minutes(int)"]
2898 [label="org.joda.time.Minutes.minutes(int)"]
3371 [label="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3372 [label="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3373 [label="org.joda.time.Minutes.minutesIn(org.joda.time.ReadableInterval)"]
2544 [label="java.io.File.mkdirs()"]
2097 [label="org.joda.time.format.ISODateTimeFormat$Constants.monthElement()"]
504 [label="org.joda.time.DateTimeFieldType.monthOfYear()"]
21 [label="org.joda.time.Chronology.monthOfYear()"]
2779 [label="org.joda.time.DateTime.monthOfYear()"]
3549 [label="org.joda.time.MutableDateTime.monthOfYear()"]
3132 [label="org.joda.time.LocalDate.monthOfYear()"]
3268 [label="org.joda.time.LocalDateTime.monthOfYear()"]
2665 [label="org.joda.time.DateMidnight.monthOfYear()"]
4030 [label="org.joda.time.YearMonthDay.monthOfYear()"]
3443 [label="org.joda.time.MonthDay.monthOfYear()"]
3968 [label="org.joda.time.YearMonth.monthOfYear()"]
458 [label="org.joda.time.chrono.BaseChronology.monthOfYear()"]
664 [label="org.joda.time.chrono.AssembledChronology.monthOfYear()"]
949 [label="org.joda.time.chrono.GJLocaleSymbols.monthOfYearTextToValue(java.lang.String)"]
954 [label="org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToShortText(int)"]
952 [label="org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToText(int)"]
405 [label="org.joda.time.Chronology.months()"]
3450 [label="org.joda.time.PeriodType.months()"]
349 [label="org.joda.time.DurationFieldType.months()"]
437 [label="org.joda.time.chrono.BaseChronology.months()"]
599 [label="org.joda.time.chrono.AssembledChronology.months()"]
3709 [label="org.joda.time.Period.months(int)"]
3451 [label="org.joda.time.Months.months(int)"]
3452 [label="org.joda.time.Months.monthsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3453 [label="org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3454 [label="org.joda.time.Months.monthsIn(org.joda.time.ReadableInterval)"]
3765 [label="org.joda.time.Period.multipliedBy(int)"]
2907 [label="org.joda.time.Days.multipliedBy(int)"]
3913 [label="org.joda.time.Weeks.multipliedBy(int)"]
2970 [label="org.joda.time.Hours.multipliedBy(int)"]
3390 [label="org.joda.time.Minutes.multipliedBy(int)"]
3822 [label="org.joda.time.Seconds.multipliedBy(int)"]
3464 [label="org.joda.time.Months.multipliedBy(int)"]
4048 [label="org.joda.time.Years.multipliedBy(int)"]
2937 [label="org.joda.time.Duration.multipliedBy(long)"]
2939 [label="org.joda.time.Duration.negated()"]
3766 [label="org.joda.time.Period.negated()"]
2909 [label="org.joda.time.Days.negated()"]
3915 [label="org.joda.time.Weeks.negated()"]
2972 [label="org.joda.time.Hours.negated()"]
3392 [label="org.joda.time.Minutes.negated()"]
3824 [label="org.joda.time.Seconds.negated()"]
3466 [label="org.joda.time.Months.negated()"]
4050 [label="org.joda.time.Years.negated()"]
2859 [label="java.lang.Class.newInstance()"]
2394 [label="java.util.Iterator.next()"]
2351 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)"]
2362 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(long,int,int)"]
2377 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)"]
2481 [label="java.util.StringTokenizer.nextToken()"]
2336 [label="org.joda.time.DateTimeZone.nextTransition(long)"]
2335 [label="org.joda.time.tz.CachedDateTimeZone.nextTransition(long)"]
2404 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)"]
2428 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long)"]
2388 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.nextTransition(long,int)"]
3774 [label="org.joda.time.Period.normalizedStandard()"]
3775 [label="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)"]
2986 [label="org.joda.time.Instant.now()"]
2690 [label="org.joda.time.DateTime.now()"]
3487 [label="org.joda.time.MutableDateTime.now()"]
3045 [label="org.joda.time.LocalDate.now()"]
3161 [label="org.joda.time.LocalDateTime.now()"]
2598 [label="org.joda.time.DateMidnight.now()"]
3303 [label="org.joda.time.LocalTime.now()"]
3407 [label="org.joda.time.MonthDay.now()"]
3929 [label="org.joda.time.YearMonth.now()"]
2693 [label="org.joda.time.DateTime.now(org.joda.time.Chronology)"]
3491 [label="org.joda.time.MutableDateTime.now(org.joda.time.Chronology)"]
3049 [label="org.joda.time.LocalDate.now(org.joda.time.Chronology)"]
3165 [label="org.joda.time.LocalDateTime.now(org.joda.time.Chronology)"]
2603 [label="org.joda.time.DateMidnight.now(org.joda.time.Chronology)"]
3307 [label="org.joda.time.LocalTime.now(org.joda.time.Chronology)"]
3411 [label="org.joda.time.MonthDay.now(org.joda.time.Chronology)"]
3933 [label="org.joda.time.YearMonth.now(org.joda.time.Chronology)"]
2691 [label="org.joda.time.DateTime.now(org.joda.time.DateTimeZone)"]
3489 [label="org.joda.time.MutableDateTime.now(org.joda.time.DateTimeZone)"]
3047 [label="org.joda.time.LocalDate.now(org.joda.time.DateTimeZone)"]
3163 [label="org.joda.time.LocalDateTime.now(org.joda.time.DateTimeZone)"]
2600 [label="org.joda.time.DateMidnight.now(org.joda.time.DateTimeZone)"]
3305 [label="org.joda.time.LocalTime.now(org.joda.time.DateTimeZone)"]
3409 [label="org.joda.time.MonthDay.now(org.joda.time.DateTimeZone)"]
3931 [label="org.joda.time.YearMonth.now(org.joda.time.DateTimeZone)"]
2107 [label="org.joda.time.format.ISODateTimeFormat$Constants.offsetElement()"]
2865 [label="org.joda.time.DateTimeZone.offsetFormatter()"]
2558 [label="org.joda.time.tz.ZoneInfoProvider.openResource(java.lang.String)"]
2130 [label="org.joda.time.format.ISODateTimeFormat$Constants.ordinalDate()"]
2131 [label="org.joda.time.format.ISODateTimeFormat$Constants.ordinalDateTime()"]
2132 [label="org.joda.time.format.ISODateTimeFormat$Constants.ordinalDateTimeNoMillis()"]
466 [label="org.joda.time.Chronology.Chronology()"]
2579 [label="org.joda.time.DateMidnight$Property.DateMidnight$Property(org.joda.time.DateMidnight,org.joda.time.DateTimeField)"]
2599 [label="org.joda.time.DateMidnight.DateMidnight()"]
2614 [label="org.joda.time.DateMidnight.DateMidnight(int,int,int)"]
2616 [label="org.joda.time.DateMidnight.DateMidnight(int,int,int,org.joda.time.Chronology)"]
2615 [label="org.joda.time.DateMidnight.DateMidnight(int,int,int,org.joda.time.DateTimeZone)"]
2611 [label="org.joda.time.DateMidnight.DateMidnight(java.lang.Object)"]
2613 [label="org.joda.time.DateMidnight.DateMidnight(java.lang.Object,org.joda.time.Chronology)"]
2612 [label="org.joda.time.DateMidnight.DateMidnight(java.lang.Object,org.joda.time.DateTimeZone)"]
2608 [label="org.joda.time.DateMidnight.DateMidnight(long)"]
2610 [label="org.joda.time.DateMidnight.DateMidnight(long,org.joda.time.Chronology)"]
2609 [label="org.joda.time.DateMidnight.DateMidnight(long,org.joda.time.DateTimeZone)"]
2604 [label="org.joda.time.DateMidnight.DateMidnight(org.joda.time.Chronology)"]
2602 [label="org.joda.time.DateMidnight.DateMidnight(org.joda.time.DateTimeZone)"]
2670 [label="org.joda.time.DateTime$Property.DateTime$Property(org.joda.time.DateTime,org.joda.time.DateTimeField)"]
1819 [label="org.joda.time.DateTime.DateTime()"]
2701 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int)"]
2704 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int)"]
2707 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,int)"]
734 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,int,org.joda.time.Chronology)"]
2708 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)"]
2706 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,org.joda.time.Chronology)"]
2705 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,org.joda.time.DateTimeZone)"]
2703 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,org.joda.time.Chronology)"]
2702 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,org.joda.time.DateTimeZone)"]
2698 [label="org.joda.time.DateTime.DateTime(java.lang.Object)"]
2700 [label="org.joda.time.DateTime.DateTime(java.lang.Object,org.joda.time.Chronology)"]
2699 [label="org.joda.time.DateTime.DateTime(java.lang.Object,org.joda.time.DateTimeZone)"]
2697 [label="org.joda.time.DateTime.DateTime(long)"]
92 [label="org.joda.time.DateTime.DateTime(long,org.joda.time.Chronology)"]
89 [label="org.joda.time.DateTime.DateTime(long,org.joda.time.DateTimeZone)"]
2694 [label="org.joda.time.DateTime.DateTime(org.joda.time.Chronology)"]
2692 [label="org.joda.time.DateTime.DateTime(org.joda.time.DateTimeZone)"]
2792 [label="org.joda.time.DateTimeComparator.DateTimeComparator(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)"]
2802 [label="org.joda.time.DateTimeConstants.DateTimeConstants()"]
1404 [label="org.joda.time.DateTimeField.DateTimeField()"]
2803 [label="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.DateTimeFieldType$StandardDateTimeFieldType(java.lang.String,byte,org.joda.time.DurationFieldType,org.joda.time.DurationFieldType)"]
2804 [label="org.joda.time.DateTimeFieldType.DateTimeFieldType(java.lang.String)"]
2813 [label="org.joda.time.DateTimeUtils$FixedMillisProvider.DateTimeUtils$FixedMillisProvider(long)"]
2814 [label="org.joda.time.DateTimeUtils$OffsetMillisProvider.DateTimeUtils$OffsetMillisProvider(long)"]
2810 [label="org.joda.time.DateTimeUtils$SystemMillisProvider.DateTimeUtils$SystemMillisProvider()"]
2820 [label="org.joda.time.DateTimeUtils.DateTimeUtils()"]
2863 [label="org.joda.time.DateTimeZone$1.DateTimeZone$1()"]
2835 [label="org.joda.time.DateTimeZone$Stub.DateTimeZone$Stub(java.lang.String)"]
2329 [label="org.joda.time.DateTimeZone.DateTimeZone(java.lang.String)"]
2878 [label="org.joda.time.Days.Days(int)"]
2915 [label="org.joda.time.Duration.Duration(java.lang.Object)"]
63 [label="org.joda.time.Duration.Duration(long)"]
340 [label="org.joda.time.Duration.Duration(long,long)"]
2921 [label="org.joda.time.Duration.Duration(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
1452 [label="org.joda.time.DurationField.DurationField()"]
2941 [label="org.joda.time.DurationFieldType$StandardDurationFieldType.DurationFieldType$StandardDurationFieldType(java.lang.String,byte)"]
2942 [label="org.joda.time.DurationFieldType.DurationFieldType(java.lang.String)"]
2948 [label="org.joda.time.Hours.Hours(int)"]
1583 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number)"]
2981 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(java.lang.String,java.lang.String)"]
472 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DateTimeFieldType,java.lang.Number,java.lang.Number,java.lang.Number)"]
1182 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DateTimeFieldType,java.lang.Number,java.lang.String)"]
670 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DateTimeFieldType,java.lang.String)"]
2979 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DurationFieldType,java.lang.Number,java.lang.Number,java.lang.Number)"]
2980 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DurationFieldType,java.lang.String)"]
2085 [label="org.joda.time.IllegalInstantException.IllegalInstantException(java.lang.String)"]
1181 [label="org.joda.time.IllegalInstantException.IllegalInstantException(long,java.lang.String)"]
2987 [label="org.joda.time.Instant.Instant()"]
2990 [label="org.joda.time.Instant.Instant(java.lang.Object)"]
87 [label="org.joda.time.Instant.Instant(long)"]
3004 [label="org.joda.time.Interval.Interval(java.lang.Object)"]
3009 [label="org.joda.time.Interval.Interval(java.lang.Object,org.joda.time.Chronology)"]
1398 [label="org.joda.time.Interval.Interval(long,long)"]
144 [label="org.joda.time.Interval.Interval(long,long,org.joda.time.Chronology)"]
3005 [label="org.joda.time.Interval.Interval(long,long,org.joda.time.DateTimeZone)"]
264 [label="org.joda.time.Interval.Interval(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
262 [label="org.joda.time.Interval.Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
3006 [label="org.joda.time.Interval.Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3007 [label="org.joda.time.Interval.Interval(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)"]
3008 [label="org.joda.time.Interval.Interval(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)"]
1251 [label="org.joda.time.JodaTimePermission.JodaTimePermission(java.lang.String)"]
3025 [label="org.joda.time.LocalDate$Property.LocalDate$Property(org.joda.time.LocalDate,org.joda.time.DateTimeField)"]
3046 [label="org.joda.time.LocalDate.LocalDate()"]
2486 [label="org.joda.time.LocalDate.LocalDate(int,int,int)"]
3067 [label="org.joda.time.LocalDate.LocalDate(int,int,int,org.joda.time.Chronology)"]
3063 [label="org.joda.time.LocalDate.LocalDate(java.lang.Object)"]
3064 [label="org.joda.time.LocalDate.LocalDate(java.lang.Object,org.joda.time.Chronology)"]
3065 [label="org.joda.time.LocalDate.LocalDate(java.lang.Object,org.joda.time.DateTimeZone)"]
3061 [label="org.joda.time.LocalDate.LocalDate(long)"]
852 [label="org.joda.time.LocalDate.LocalDate(long,org.joda.time.Chronology)"]
3062 [label="org.joda.time.LocalDate.LocalDate(long,org.joda.time.DateTimeZone)"]
3050 [label="org.joda.time.LocalDate.LocalDate(org.joda.time.Chronology)"]
3048 [label="org.joda.time.LocalDate.LocalDate(org.joda.time.DateTimeZone)"]
3140 [label="org.joda.time.LocalDateTime$Property.LocalDateTime$Property(org.joda.time.LocalDateTime,org.joda.time.DateTimeField)"]
3162 [label="org.joda.time.LocalDateTime.LocalDateTime()"]
3181 [label="org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int)"]
3183 [label="org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int)"]
3171 [label="org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int)"]
3182 [label="org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,org.joda.time.Chronology)"]
3178 [label="org.joda.time.LocalDateTime.LocalDateTime(java.lang.Object)"]
3179 [label="org.joda.time.LocalDateTime.LocalDateTime(java.lang.Object,org.joda.time.Chronology)"]
3180 [label="org.joda.time.LocalDateTime.LocalDateTime(java.lang.Object,org.joda.time.DateTimeZone)"]
3176 [label="org.joda.time.LocalDateTime.LocalDateTime(long)"]
1895 [label="org.joda.time.LocalDateTime.LocalDateTime(long,org.joda.time.Chronology)"]
3177 [label="org.joda.time.LocalDateTime.LocalDateTime(long,org.joda.time.DateTimeZone)"]
3166 [label="org.joda.time.LocalDateTime.LocalDateTime(org.joda.time.Chronology)"]
3164 [label="org.joda.time.LocalDateTime.LocalDateTime(org.joda.time.DateTimeZone)"]
3281 [label="org.joda.time.LocalTime$Property.LocalTime$Property(org.joda.time.LocalTime,org.joda.time.DateTimeField)"]
3304 [label="org.joda.time.LocalTime.LocalTime()"]
3321 [label="org.joda.time.LocalTime.LocalTime(int,int)"]
3323 [label="org.joda.time.LocalTime.LocalTime(int,int,int)"]
3302 [label="org.joda.time.LocalTime.LocalTime(int,int,int,int)"]
3322 [label="org.joda.time.LocalTime.LocalTime(int,int,int,int,org.joda.time.Chronology)"]
3318 [label="org.joda.time.LocalTime.LocalTime(java.lang.Object)"]
3319 [label="org.joda.time.LocalTime.LocalTime(java.lang.Object,org.joda.time.Chronology)"]
3320 [label="org.joda.time.LocalTime.LocalTime(java.lang.Object,org.joda.time.DateTimeZone)"]
3316 [label="org.joda.time.LocalTime.LocalTime(long)"]
2756 [label="org.joda.time.LocalTime.LocalTime(long,org.joda.time.Chronology)"]
3317 [label="org.joda.time.LocalTime.LocalTime(long,org.joda.time.DateTimeZone)"]
3308 [label="org.joda.time.LocalTime.LocalTime(org.joda.time.Chronology)"]
3306 [label="org.joda.time.LocalTime.LocalTime(org.joda.time.DateTimeZone)"]
3369 [label="org.joda.time.Minutes.Minutes(int)"]
3396 [label="org.joda.time.MonthDay$Property.MonthDay$Property(org.joda.time.MonthDay,int)"]
3408 [label="org.joda.time.MonthDay.MonthDay()"]
3415 [label="org.joda.time.MonthDay.MonthDay(int,int)"]
3422 [label="org.joda.time.MonthDay.MonthDay(int,int,org.joda.time.Chronology)"]
3420 [label="org.joda.time.MonthDay.MonthDay(java.lang.Object)"]
3421 [label="org.joda.time.MonthDay.MonthDay(java.lang.Object,org.joda.time.Chronology)"]
3418 [label="org.joda.time.MonthDay.MonthDay(long)"]
3419 [label="org.joda.time.MonthDay.MonthDay(long,org.joda.time.Chronology)"]
3412 [label="org.joda.time.MonthDay.MonthDay(org.joda.time.Chronology)"]
3410 [label="org.joda.time.MonthDay.MonthDay(org.joda.time.DateTimeZone)"]
3401 [label="org.joda.time.MonthDay.MonthDay(org.joda.time.MonthDay,int[])"]
3423 [label="org.joda.time.MonthDay.MonthDay(org.joda.time.MonthDay,org.joda.time.Chronology)"]
3449 [label="org.joda.time.Months.Months(int)"]
3470 [label="org.joda.time.MutableDateTime$Property.MutableDateTime$Property(org.joda.time.MutableDateTime,org.joda.time.DateTimeField)"]
3488 [label="org.joda.time.MutableDateTime.MutableDateTime()"]
3499 [label="org.joda.time.MutableDateTime.MutableDateTime(int,int,int,int,int,int,int)"]
3501 [label="org.joda.time.MutableDateTime.MutableDateTime(int,int,int,int,int,int,int,org.joda.time.Chronology)"]
3500 [label="org.joda.time.MutableDateTime.MutableDateTime(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)"]
3496 [label="org.joda.time.MutableDateTime.MutableDateTime(java.lang.Object)"]
3498 [label="org.joda.time.MutableDateTime.MutableDateTime(java.lang.Object,org.joda.time.Chronology)"]
3497 [label="org.joda.time.MutableDateTime.MutableDateTime(java.lang.Object,org.joda.time.DateTimeZone)"]
3495 [label="org.joda.time.MutableDateTime.MutableDateTime(long)"]
100 [label="org.joda.time.MutableDateTime.MutableDateTime(long,org.joda.time.Chronology)"]
98 [label="org.joda.time.MutableDateTime.MutableDateTime(long,org.joda.time.DateTimeZone)"]
3492 [label="org.joda.time.MutableDateTime.MutableDateTime(org.joda.time.Chronology)"]
3490 [label="org.joda.time.MutableDateTime.MutableDateTime(org.joda.time.DateTimeZone)"]
277 [label="org.joda.time.MutableInterval.MutableInterval()"]
3565 [label="org.joda.time.MutableInterval.MutableInterval(java.lang.Object)"]
3572 [label="org.joda.time.MutableInterval.MutableInterval(java.lang.Object,org.joda.time.Chronology)"]
3566 [label="org.joda.time.MutableInterval.MutableInterval(long,long)"]
146 [label="org.joda.time.MutableInterval.MutableInterval(long,long,org.joda.time.Chronology)"]
3569 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
3568 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
3567 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3570 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)"]
3571 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)"]
388 [label="org.joda.time.MutablePeriod.MutablePeriod()"]
3592 [label="org.joda.time.MutablePeriod.MutablePeriod(int,int,int,int)"]
3593 [label="org.joda.time.MutablePeriod.MutablePeriod(int,int,int,int,int,int,int,int)"]
3594 [label="org.joda.time.MutablePeriod.MutablePeriod(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)"]
209 [label="org.joda.time.MutablePeriod.MutablePeriod(java.lang.Object)"]
3609 [label="org.joda.time.MutablePeriod.MutablePeriod(java.lang.Object,org.joda.time.Chronology)"]
3608 [label="org.joda.time.MutablePeriod.MutablePeriod(java.lang.Object,org.joda.time.PeriodType)"]
336 [label="org.joda.time.MutablePeriod.MutablePeriod(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)"]
3595 [label="org.joda.time.MutablePeriod.MutablePeriod(long)"]
3598 [label="org.joda.time.MutablePeriod.MutablePeriod(long,long)"]
3600 [label="org.joda.time.MutablePeriod.MutablePeriod(long,long,org.joda.time.Chronology)"]
3599 [label="org.joda.time.MutablePeriod.MutablePeriod(long,long,org.joda.time.PeriodType)"]
3601 [label="org.joda.time.MutablePeriod.MutablePeriod(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
3596 [label="org.joda.time.MutablePeriod.MutablePeriod(long,org.joda.time.Chronology)"]
2222 [label="org.joda.time.MutablePeriod.MutablePeriod(long,org.joda.time.PeriodType)"]
3597 [label="org.joda.time.MutablePeriod.MutablePeriod(long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
3591 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.PeriodType)"]
3606 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
3607 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
3604 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
3605 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)"]
3602 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3603 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
3660 [label="org.joda.time.Partial$Property.Partial$Property(org.joda.time.Partial,int)"]
3673 [label="org.joda.time.Partial.Partial()"]
3674 [label="org.joda.time.Partial.Partial(org.joda.time.Chronology)"]
3680 [label="org.joda.time.Partial.Partial(org.joda.time.Chronology,org.joda.time.DateTimeFieldType[],int[])"]
3675 [label="org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType,int)"]
3676 [label="org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology)"]
3677 [label="org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType[],int[])"]
3678 [label="org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)"]
3666 [label="org.joda.time.Partial.Partial(org.joda.time.Partial,int[])"]
3679 [label="org.joda.time.Partial.Partial(org.joda.time.ReadablePartial)"]
3704 [label="org.joda.time.Period.Period()"]
3718 [label="org.joda.time.Period.Period(int,int,int,int)"]
3719 [label="org.joda.time.Period.Period(int,int,int,int,int,int,int,int)"]
3720 [label="org.joda.time.Period.Period(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)"]
3708 [label="org.joda.time.Period.Period(int[],org.joda.time.PeriodType)"]
207 [label="org.joda.time.Period.Period(java.lang.Object)"]
3728 [label="org.joda.time.Period.Period(java.lang.Object,org.joda.time.Chronology)"]
3727 [label="org.joda.time.Period.Period(java.lang.Object,org.joda.time.PeriodType)"]
3729 [label="org.joda.time.Period.Period(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)"]
65 [label="org.joda.time.Period.Period(long)"]
3721 [label="org.joda.time.Period.Period(long,long)"]
151 [label="org.joda.time.Period.Period(long,long,org.joda.time.Chronology)"]
3722 [label="org.joda.time.Period.Period(long,long,org.joda.time.PeriodType)"]
153 [label="org.joda.time.Period.Period(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
250 [label="org.joda.time.Period.Period(long,org.joda.time.Chronology)"]
248 [label="org.joda.time.Period.Period(long,org.joda.time.PeriodType)"]
252 [label="org.joda.time.Period.Period(long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
258 [label="org.joda.time.Period.Period(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
260 [label="org.joda.time.Period.Period(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
254 [label="org.joda.time.Period.Period(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
256 [label="org.joda.time.Period.Period(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)"]
3723 [label="org.joda.time.Period.Period(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3724 [label="org.joda.time.Period.Period(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
3725 [label="org.joda.time.Period.Period(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3726 [label="org.joda.time.Period.Period(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)"]
3777 [label="org.joda.time.PeriodType.PeriodType(java.lang.String,org.joda.time.DurationFieldType[],int[])"]
3803 [label="org.joda.time.Seconds.Seconds(int)"]
3828 [label="org.joda.time.TimeOfDay$Property.TimeOfDay$Property(org.joda.time.TimeOfDay,int)"]
3846 [label="org.joda.time.TimeOfDay.TimeOfDay()"]
3853 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int)"]
3856 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,int)"]
3841 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,int,int)"]
3854 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,int,int,org.joda.time.Chronology)"]
3857 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,int,org.joda.time.Chronology)"]
3855 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,org.joda.time.Chronology)"]
3850 [label="org.joda.time.TimeOfDay.TimeOfDay(java.lang.Object)"]
3852 [label="org.joda.time.TimeOfDay.TimeOfDay(java.lang.Object,org.joda.time.Chronology)"]
3849 [label="org.joda.time.TimeOfDay.TimeOfDay(long)"]
2753 [label="org.joda.time.TimeOfDay.TimeOfDay(long,org.joda.time.Chronology)"]
3848 [label="org.joda.time.TimeOfDay.TimeOfDay(org.joda.time.Chronology)"]
3847 [label="org.joda.time.TimeOfDay.TimeOfDay(org.joda.time.DateTimeZone)"]
3832 [label="org.joda.time.TimeOfDay.TimeOfDay(org.joda.time.TimeOfDay,int[])"]
3858 [label="org.joda.time.TimeOfDay.TimeOfDay(org.joda.time.TimeOfDay,org.joda.time.Chronology)"]
3894 [label="org.joda.time.Weeks.Weeks(int)"]
3919 [label="org.joda.time.YearMonth$Property.YearMonth$Property(org.joda.time.YearMonth,int)"]
3930 [label="org.joda.time.YearMonth.YearMonth()"]
3937 [label="org.joda.time.YearMonth.YearMonth(int,int)"]
3944 [label="org.joda.time.YearMonth.YearMonth(int,int,org.joda.time.Chronology)"]
3942 [label="org.joda.time.YearMonth.YearMonth(java.lang.Object)"]
3943 [label="org.joda.time.YearMonth.YearMonth(java.lang.Object,org.joda.time.Chronology)"]
3940 [label="org.joda.time.YearMonth.YearMonth(long)"]
3941 [label="org.joda.time.YearMonth.YearMonth(long,org.joda.time.Chronology)"]
3934 [label="org.joda.time.YearMonth.YearMonth(org.joda.time.Chronology)"]
3932 [label="org.joda.time.YearMonth.YearMonth(org.joda.time.DateTimeZone)"]
3923 [label="org.joda.time.YearMonth.YearMonth(org.joda.time.YearMonth,int[])"]
3945 [label="org.joda.time.YearMonth.YearMonth(org.joda.time.YearMonth,org.joda.time.Chronology)"]
3973 [label="org.joda.time.YearMonthDay$Property.YearMonthDay$Property(org.joda.time.YearMonthDay,int)"]
3988 [label="org.joda.time.YearMonthDay.YearMonthDay()"]
3986 [label="org.joda.time.YearMonthDay.YearMonthDay(int,int,int)"]
3995 [label="org.joda.time.YearMonthDay.YearMonthDay(int,int,int,org.joda.time.Chronology)"]
3992 [label="org.joda.time.YearMonthDay.YearMonthDay(java.lang.Object)"]
3994 [label="org.joda.time.YearMonthDay.YearMonthDay(java.lang.Object,org.joda.time.Chronology)"]
3991 [label="org.joda.time.YearMonthDay.YearMonthDay(long)"]
2645 [label="org.joda.time.YearMonthDay.YearMonthDay(long,org.joda.time.Chronology)"]
3990 [label="org.joda.time.YearMonthDay.YearMonthDay(org.joda.time.Chronology)"]
3989 [label="org.joda.time.YearMonthDay.YearMonthDay(org.joda.time.DateTimeZone)"]
3977 [label="org.joda.time.YearMonthDay.YearMonthDay(org.joda.time.YearMonthDay,int[])"]
3996 [label="org.joda.time.YearMonthDay.YearMonthDay(org.joda.time.YearMonthDay,org.joda.time.Chronology)"]
4034 [label="org.joda.time.Years.Years(int)"]
0 [label="org.joda.time.base.AbstractDateTime.AbstractDateTime()"]
59 [label="org.joda.time.base.AbstractDuration.AbstractDuration()"]
1 [label="org.joda.time.base.AbstractInstant.AbstractInstant()"]
122 [label="org.joda.time.base.AbstractInterval.AbstractInterval()"]
160 [label="org.joda.time.base.AbstractPartial.AbstractPartial()"]
192 [label="org.joda.time.base.AbstractPeriod.AbstractPeriod()"]
218 [label="org.joda.time.base.BaseDateTime.BaseDateTime()"]
234 [label="org.joda.time.base.BaseDateTime.BaseDateTime(int,int,int,int,int,int,int)"]
235 [label="org.joda.time.base.BaseDateTime.BaseDateTime(int,int,int,int,int,int,int,org.joda.time.Chronology)"]
236 [label="org.joda.time.base.BaseDateTime.BaseDateTime(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)"]
232 [label="org.joda.time.base.BaseDateTime.BaseDateTime(java.lang.Object,org.joda.time.Chronology)"]
227 [label="org.joda.time.base.BaseDateTime.BaseDateTime(java.lang.Object,org.joda.time.DateTimeZone)"]
223 [label="org.joda.time.base.BaseDateTime.BaseDateTime(long)"]
220 [label="org.joda.time.base.BaseDateTime.BaseDateTime(long,org.joda.time.Chronology)"]
224 [label="org.joda.time.base.BaseDateTime.BaseDateTime(long,org.joda.time.DateTimeZone)"]
222 [label="org.joda.time.base.BaseDateTime.BaseDateTime(org.joda.time.Chronology)"]
221 [label="org.joda.time.base.BaseDateTime.BaseDateTime(org.joda.time.DateTimeZone)"]
243 [label="org.joda.time.base.BaseDuration.BaseDuration(java.lang.Object)"]
240 [label="org.joda.time.base.BaseDuration.BaseDuration(long)"]
241 [label="org.joda.time.base.BaseDuration.BaseDuration(long,long)"]
242 [label="org.joda.time.base.BaseDuration.BaseDuration(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
273 [label="org.joda.time.base.BaseInterval.BaseInterval(java.lang.Object,org.joda.time.Chronology)"]
265 [label="org.joda.time.base.BaseInterval.BaseInterval(long,long,org.joda.time.Chronology)"]
269 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
267 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
266 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
270 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)"]
272 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)"]
282 [label="org.joda.time.base.BaseLocal.BaseLocal()"]
283 [label="org.joda.time.base.BasePartial.BasePartial()"]
295 [label="org.joda.time.base.BasePartial.BasePartial(int[],org.joda.time.Chronology)"]
289 [label="org.joda.time.base.BasePartial.BasePartial(java.lang.Object,org.joda.time.Chronology)"]
293 [label="org.joda.time.base.BasePartial.BasePartial(java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)"]
286 [label="org.joda.time.base.BasePartial.BasePartial(long)"]
284 [label="org.joda.time.base.BasePartial.BasePartial(long,org.joda.time.Chronology)"]
285 [label="org.joda.time.base.BasePartial.BasePartial(org.joda.time.Chronology)"]
297 [label="org.joda.time.base.BasePartial.BasePartial(org.joda.time.base.BasePartial,int[])"]
298 [label="org.joda.time.base.BasePartial.BasePartial(org.joda.time.base.BasePartial,org.joda.time.Chronology)"]
308 [label="org.joda.time.base.BasePeriod$1.BasePeriod$1()"]
312 [label="org.joda.time.base.BasePeriod.BasePeriod(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)"]
337 [label="org.joda.time.base.BasePeriod.BasePeriod(int[],org.joda.time.PeriodType)"]
332 [label="org.joda.time.base.BasePeriod.BasePeriod(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)"]
326 [label="org.joda.time.base.BasePeriod.BasePeriod(long)"]
315 [label="org.joda.time.base.BasePeriod.BasePeriod(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
330 [label="org.joda.time.base.BasePeriod.BasePeriod(long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
324 [label="org.joda.time.base.BasePeriod.BasePeriod(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
323 [label="org.joda.time.base.BasePeriod.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)"]
317 [label="org.joda.time.base.BasePeriod.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
319 [label="org.joda.time.base.BasePeriod.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)"]
376 [label="org.joda.time.base.BaseSingleFieldPeriod.BaseSingleFieldPeriod(int)"]
394 [label="org.joda.time.chrono.AssembledChronology$Fields.AssembledChronology$Fields()"]
416 [label="org.joda.time.chrono.AssembledChronology.AssembledChronology(org.joda.time.Chronology,java.lang.Object)"]
417 [label="org.joda.time.chrono.BaseChronology.BaseChronology()"]
512 [label="org.joda.time.chrono.BasicChronology$HalfdayField.BasicChronology$HalfdayField()"]
522 [label="org.joda.time.chrono.BasicChronology$YearInfo.BasicChronology$YearInfo(int,long)"]
526 [label="org.joda.time.chrono.BasicChronology.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)"]
559 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.BasicDayOfMonthDateTimeField(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)"]
560 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.BasicDayOfYearDateTimeField(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)"]
622 [label="org.joda.time.chrono.BasicFixedMonthChronology.BasicFixedMonthChronology(org.joda.time.Chronology,java.lang.Object,int)"]
631 [label="org.joda.time.chrono.BasicGJChronology.BasicGJChronology(org.joda.time.Chronology,java.lang.Object,int)"]
638 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.BasicMonthOfYearDateTimeField(org.joda.time.chrono.BasicChronology,int)"]
665 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.BasicSingleEraDateTimeField(java.lang.String)"]
563 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.BasicWeekOfWeekyearDateTimeField(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)"]
562 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.BasicWeekyearDateTimeField(org.joda.time.chrono.BasicChronology)"]
550 [label="org.joda.time.chrono.BasicYearDateTimeField.BasicYearDateTimeField(org.joda.time.chrono.BasicChronology)"]
733 [label="org.joda.time.chrono.BuddhistChronology.BuddhistChronology(org.joda.time.Chronology,java.lang.Object)"]
752 [label="org.joda.time.chrono.CopticChronology.CopticChronology(org.joda.time.Chronology,java.lang.Object,int)"]
763 [label="org.joda.time.chrono.EthiopicChronology.EthiopicChronology(org.joda.time.Chronology,java.lang.Object,int)"]
768 [label="org.joda.time.chrono.GJChronology$CutoverField.GJChronology$CutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,long)"]
769 [label="org.joda.time.chrono.GJChronology$CutoverField.GJChronology$CutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,long,boolean)"]
770 [label="org.joda.time.chrono.GJChronology$CutoverField.GJChronology$CutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)"]
825 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.GJChronology$ImpreciseCutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,long)"]
827 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.GJChronology$ImpreciseCutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long)"]
826 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.GJChronology$ImpreciseCutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)"]
828 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.GJChronology$ImpreciseCutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DurationField,long)"]
829 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.GJChronology$LinkedDurationField(org.joda.time.DurationField,org.joda.time.chrono.GJChronology$ImpreciseCutoverField)"]
862 [label="org.joda.time.chrono.GJChronology.GJChronology(org.joda.time.Chronology,org.joda.time.chrono.JulianChronology,org.joda.time.chrono.GregorianChronology,org.joda.time.Instant)"]
861 [label="org.joda.time.chrono.GJChronology.GJChronology(org.joda.time.chrono.JulianChronology,org.joda.time.chrono.GregorianChronology,org.joda.time.Instant)"]
558 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.GJDayOfWeekDateTimeField(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)"]
557 [label="org.joda.time.chrono.GJEraDateTimeField.GJEraDateTimeField(org.joda.time.chrono.BasicChronology)"]
928 [label="org.joda.time.chrono.GJLocaleSymbols.GJLocaleSymbols(java.util.Locale)"]
561 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.GJMonthOfYearDateTimeField(org.joda.time.chrono.BasicChronology)"]
551 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.GJYearOfEraDateTimeField(org.joda.time.DateTimeField,org.joda.time.chrono.BasicChronology)"]
982 [label="org.joda.time.chrono.GregorianChronology.GregorianChronology(org.joda.time.Chronology,java.lang.Object,int)"]
988 [label="org.joda.time.chrono.ISOChronology$Stub.ISOChronology$Stub(org.joda.time.DateTimeZone)"]
996 [label="org.joda.time.chrono.ISOChronology.ISOChronology(org.joda.time.Chronology)"]
1006 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.ISOYearOfEraDateTimeField()"]
1020 [label="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.IslamicChronology$LeapYearPatternType(int,int)"]
1025 [label="org.joda.time.chrono.IslamicChronology.IslamicChronology(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)"]
1049 [label="org.joda.time.chrono.JulianChronology.JulianChronology(org.joda.time.Chronology,java.lang.Object,int)"]
1057 [label="org.joda.time.chrono.LenientChronology.LenientChronology(org.joda.time.Chronology)"]
1091 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.LimitChronology$LimitDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DurationField,org.joda.time.DurationField)"]
1075 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.LimitChronology$LimitDurationField(org.joda.time.DurationField)"]
1067 [label="org.joda.time.chrono.LimitChronology$LimitException.LimitChronology$LimitException(java.lang.String,boolean)"]
1119 [label="org.joda.time.chrono.LimitChronology.LimitChronology(org.joda.time.Chronology,org.joda.time.DateTime,org.joda.time.DateTime)"]
1136 [label="org.joda.time.chrono.StrictChronology.StrictChronology(org.joda.time.Chronology)"]
1167 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.ZonedChronology$ZonedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeZone,org.joda.time.DurationField,org.joda.time.DurationField,org.joda.time.DurationField)"]
1145 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.ZonedChronology$ZonedDurationField(org.joda.time.DurationField,org.joda.time.DateTimeZone)"]
1205 [label="org.joda.time.chrono.ZonedChronology.ZonedChronology(org.joda.time.Chronology,org.joda.time.DateTimeZone)"]
1219 [label="org.joda.time.convert.AbstractConverter.AbstractConverter()"]
1229 [label="org.joda.time.convert.CalendarConverter.CalendarConverter()"]
1239 [label="org.joda.time.convert.ConverterManager.ConverterManager()"]
1270 [label="org.joda.time.convert.ConverterSet$Entry.ConverterSet$Entry(java.lang.Class,org.joda.time.convert.Converter)"]
1240 [label="org.joda.time.convert.ConverterSet.ConverterSet(org.joda.time.convert.Converter[])"]
1278 [label="org.joda.time.convert.DateConverter.DateConverter()"]
1281 [label="org.joda.time.convert.LongConverter.LongConverter()"]
1286 [label="org.joda.time.convert.NullConverter.NullConverter()"]
1293 [label="org.joda.time.convert.ReadableDurationConverter.ReadableDurationConverter()"]
1298 [label="org.joda.time.convert.ReadableInstantConverter.ReadableInstantConverter()"]
1303 [label="org.joda.time.convert.ReadableIntervalConverter.ReadableIntervalConverter()"]
1311 [label="org.joda.time.convert.ReadablePartialConverter.ReadablePartialConverter()"]
1316 [label="org.joda.time.convert.ReadablePeriodConverter.ReadablePeriodConverter()"]
1320 [label="org.joda.time.convert.StringConverter.StringConverter()"]
1341 [label="org.joda.time.field.AbstractPartialFieldProperty.AbstractPartialFieldProperty()"]
1370 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.AbstractReadableInstantFieldProperty()"]
666 [label="org.joda.time.field.BaseDateTimeField.BaseDateTimeField(org.joda.time.DateTimeFieldType)"]
1146 [label="org.joda.time.field.BaseDurationField.BaseDurationField(org.joda.time.DurationFieldType)"]
960 [label="org.joda.time.field.DecoratedDateTimeField.DecoratedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)"]
837 [label="org.joda.time.field.DecoratedDurationField.DecoratedDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType)"]
1478 [label="org.joda.time.field.DelegatedDateTimeField.DelegatedDateTimeField(org.joda.time.DateTimeField)"]
1479 [label="org.joda.time.field.DelegatedDateTimeField.DelegatedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)"]
746 [label="org.joda.time.field.DelegatedDateTimeField.DelegatedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)"]
1535 [label="org.joda.time.field.DelegatedDurationField.DelegatedDurationField(org.joda.time.DurationField)"]
1536 [label="org.joda.time.field.DelegatedDurationField.DelegatedDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType)"]
553 [label="org.joda.time.field.DividedDateTimeField.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)"]
747 [label="org.joda.time.field.DividedDateTimeField.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)"]
1564 [label="org.joda.time.field.DividedDateTimeField.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DateTimeFieldType)"]
1565 [label="org.joda.time.field.DividedDateTimeField.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)"]
1577 [label="org.joda.time.field.FieldUtils.FieldUtils()"]
1585 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.ImpreciseDateTimeField$LinkedDurationField(org.joda.time.DurationFieldType)"]
640 [label="org.joda.time.field.ImpreciseDateTimeField.ImpreciseDateTimeField(org.joda.time.DateTimeFieldType,long)"]
1598 [label="org.joda.time.field.LenientDateTimeField.LenientDateTimeField(org.joda.time.DateTimeField,org.joda.time.Chronology)"]
1602 [label="org.joda.time.field.MillisDurationField.MillisDurationField()"]
552 [label="org.joda.time.field.OffsetDateTimeField.OffsetDateTimeField(org.joda.time.DateTimeField,int)"]
556 [label="org.joda.time.field.OffsetDateTimeField.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)"]
1614 [label="org.joda.time.field.OffsetDateTimeField.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)"]
513 [label="org.joda.time.field.PreciseDateTimeField.PreciseDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField)"]
596 [label="org.joda.time.field.PreciseDurationDateTimeField.PreciseDurationDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)"]
524 [label="org.joda.time.field.PreciseDurationField.PreciseDurationField(org.joda.time.DurationFieldType,long)"]
1643 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)"]
564 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)"]
555 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField)"]
1000 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField,org.joda.time.DateTimeFieldType)"]
1001 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)"]
1563 [label="org.joda.time.field.ScaledDurationField.ScaledDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)"]
758 [label="org.joda.time.field.SkipDateTimeField.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField)"]
1670 [label="org.joda.time.field.SkipDateTimeField.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)"]
745 [label="org.joda.time.field.SkipUndoDateTimeField.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField)"]
1674 [label="org.joda.time.field.SkipUndoDateTimeField.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)"]
1678 [label="org.joda.time.field.StrictDateTimeField.StrictDateTimeField(org.joda.time.DateTimeField)"]
1682 [label="org.joda.time.field.UnsupportedDateTimeField.UnsupportedDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)"]
1728 [label="org.joda.time.field.UnsupportedDurationField.UnsupportedDurationField(org.joda.time.DurationFieldType)"]
525 [label="org.joda.time.field.ZeroIsMaxDateTimeField.ZeroIsMaxDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)"]
1790 [label="org.joda.time.format.DateTimeFormat$1.DateTimeFormat$1(int)"]
1769 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.DateTimeFormat$StyleFormatter(int,int,int)"]
1814 [label="org.joda.time.format.DateTimeFormat.DateTimeFormat()"]
1853 [label="org.joda.time.format.DateTimeFormatter.DateTimeFormatter(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)"]
1854 [label="org.joda.time.format.DateTimeFormatter.DateTimeFormatter(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer,int)"]
1899 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.DateTimeFormatterBuilder$CharacterLiteral(char)"]
2007 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.DateTimeFormatterBuilder$Composite(java.util.List)"]
1938 [label="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.DateTimeFormatterBuilder$FixedNumber(org.joda.time.DateTimeFieldType,int,boolean)"]
1968 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.DateTimeFormatterBuilder$Fraction(org.joda.time.DateTimeFieldType,int,int)"]
2023 [label="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.DateTimeFormatterBuilder$MatchingParser(org.joda.time.format.DateTimeParser[])"]
1918 [label="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.DateTimeFormatterBuilder$NumberFormatter(org.joda.time.DateTimeFieldType,int,boolean)"]
1929 [label="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.DateTimeFormatterBuilder$PaddedNumber(org.joda.time.DateTimeFieldType,int,boolean,int)"]
1908 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.DateTimeFormatterBuilder$StringLiteral(java.lang.String)"]
1950 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.DateTimeFormatterBuilder$TextField(org.joda.time.DateTimeFieldType,boolean)"]
2001 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.DateTimeFormatterBuilder$TimeZoneId()"]
1988 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.DateTimeFormatterBuilder$TimeZoneName(int,java.util.Map)"]
1979 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.DateTimeFormatterBuilder$TimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)"]
1940 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.DateTimeFormatterBuilder$TwoDigitYear(org.joda.time.DateTimeFieldType,int,boolean)"]
1922 [label="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.DateTimeFormatterBuilder$UnpaddedNumber(org.joda.time.DateTimeFieldType,int,boolean)"]
1849 [label="org.joda.time.format.DateTimeFormatterBuilder.DateTimeFormatterBuilder()"]
2072 [label="org.joda.time.format.DateTimeParserBucket$SavedField.DateTimeParserBucket$SavedField(org.joda.time.DateTimeField,int)"]
2073 [label="org.joda.time.format.DateTimeParserBucket$SavedField.DateTimeParserBucket$SavedField(org.joda.time.DateTimeField,java.lang.String,java.util.Locale)"]
2071 [label="org.joda.time.format.DateTimeParserBucket$SavedState.DateTimeParserBucket$SavedState()"]
2077 [label="org.joda.time.format.DateTimeParserBucket.DateTimeParserBucket(long,org.joda.time.Chronology,java.util.Locale)"]
2078 [label="org.joda.time.format.DateTimeParserBucket.DateTimeParserBucket(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer)"]
1881 [label="org.joda.time.format.DateTimeParserBucket.DateTimeParserBucket(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int)"]
2089 [label="org.joda.time.format.FormatUtils.FormatUtils()"]
2155 [label="org.joda.time.format.ISODateTimeFormat$Constants.ISODateTimeFormat$Constants()"]
2158 [label="org.joda.time.format.ISODateTimeFormat.ISODateTimeFormat()"]
2173 [label="org.joda.time.format.ISOPeriodFormat.ISOPeriodFormat()"]
2196 [label="org.joda.time.format.PeriodFormat.PeriodFormat()"]
2207 [label="org.joda.time.format.PeriodFormatter.PeriodFormatter(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)"]
2208 [label="org.joda.time.format.PeriodFormatter.PeriodFormatter(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)"]
2286 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.PeriodFormatterBuilder$Composite(java.util.List)"]
2235 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.PeriodFormatterBuilder$CompositeAffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2246 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.PeriodFormatterBuilder$FieldFormatter(int,int,int,boolean,int,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[],org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2247 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.PeriodFormatterBuilder$FieldFormatter(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2269 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.PeriodFormatterBuilder$Literal(java.lang.String)"]
2229 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.PeriodFormatterBuilder$PluralAffix(java.lang.String,java.lang.String)"]
2274 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)"]
2223 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.PeriodFormatterBuilder$SimpleAffix(java.lang.String)"]
2174 [label="org.joda.time.format.PeriodFormatterBuilder.PeriodFormatterBuilder()"]
2319 [label="org.joda.time.tz.CachedDateTimeZone$Info.CachedDateTimeZone$Info(org.joda.time.DateTimeZone,long)"]
2328 [label="org.joda.time.tz.CachedDateTimeZone.CachedDateTimeZone(org.joda.time.DateTimeZone)"]
2399 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.DateTimeZoneBuilder$DSTZone(java.lang.String,int,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,org.joda.time.tz.DateTimeZoneBuilder$Recurrence)"]
2347 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)"]
2412 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.DateTimeZoneBuilder$PrecalculatedZone(java.lang.String,long[],int[],int[],java.lang.String[],org.joda.time.tz.DateTimeZoneBuilder$DSTZone)"]
2361 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.DateTimeZoneBuilder$Recurrence(org.joda.time.tz.DateTimeZoneBuilder$OfYear,java.lang.String,int)"]
2370 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.DateTimeZoneBuilder$Rule(org.joda.time.tz.DateTimeZoneBuilder$Recurrence,int,int)"]
2383 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.DateTimeZoneBuilder$RuleSet()"]
2384 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.DateTimeZoneBuilder$RuleSet(org.joda.time.tz.DateTimeZoneBuilder$RuleSet)"]
2380 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.DateTimeZoneBuilder$Transition(long,java.lang.String,int,int)"]
2379 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.DateTimeZoneBuilder$Transition(long,org.joda.time.tz.DateTimeZoneBuilder$Rule,int)"]
2378 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.DateTimeZoneBuilder$Transition(long,org.joda.time.tz.DateTimeZoneBuilder$Transition)"]
2446 [label="org.joda.time.tz.DateTimeZoneBuilder.DateTimeZoneBuilder()"]
2465 [label="org.joda.time.tz.DefaultNameProvider.DefaultNameProvider()"]
2442 [label="org.joda.time.tz.FixedDateTimeZone.FixedDateTimeZone(java.lang.String,java.lang.String,int,int)"]
2474 [label="org.joda.time.tz.UTCProvider.UTCProvider()"]
2509 [label="org.joda.time.tz.ZoneInfoCompiler$1.ZoneInfoCompiler$1()"]
2478 [label="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.ZoneInfoCompiler$DateTimeOfYear()"]
2479 [label="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)"]
2494 [label="org.joda.time.tz.ZoneInfoCompiler$Rule.ZoneInfoCompiler$Rule(java.util.StringTokenizer)"]
2499 [label="org.joda.time.tz.ZoneInfoCompiler$RuleSet.ZoneInfoCompiler$RuleSet(org.joda.time.tz.ZoneInfoCompiler$Rule)"]
2503 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.ZoneInfoCompiler$Zone(java.lang.String,java.util.StringTokenizer)"]
2502 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.ZoneInfoCompiler$Zone(java.util.StringTokenizer)"]
2518 [label="org.joda.time.tz.ZoneInfoCompiler.ZoneInfoCompiler()"]
2557 [label="org.joda.time.tz.ZoneInfoProvider.ZoneInfoProvider(java.io.File)"]
2560 [label="org.joda.time.tz.ZoneInfoProvider.ZoneInfoProvider(java.lang.String)"]
2562 [label="org.joda.time.tz.ZoneInfoProvider.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader)"]
2561 [label="org.joda.time.tz.ZoneInfoProvider.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader,boolean)"]
3010 [label="org.joda.time.Interval.overlap(org.joda.time.ReadableInterval)"]
133 [label="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)"]
2914 [label="org.joda.time.Duration.parse(java.lang.String)"]
3705 [label="org.joda.time.Period.parse(java.lang.String)"]
2988 [label="org.joda.time.Instant.parse(java.lang.String)"]
2695 [label="org.joda.time.DateTime.parse(java.lang.String)"]
3493 [label="org.joda.time.MutableDateTime.parse(java.lang.String)"]
3003 [label="org.joda.time.Interval.parse(java.lang.String)"]
3564 [label="org.joda.time.MutableInterval.parse(java.lang.String)"]
3589 [label="org.joda.time.MutablePeriod.parse(java.lang.String)"]
3051 [label="org.joda.time.LocalDate.parse(java.lang.String)"]
3167 [label="org.joda.time.LocalDateTime.parse(java.lang.String)"]
2605 [label="org.joda.time.DateMidnight.parse(java.lang.String)"]
3309 [label="org.joda.time.LocalTime.parse(java.lang.String)"]
3413 [label="org.joda.time.MonthDay.parse(java.lang.String)"]
3935 [label="org.joda.time.YearMonth.parse(java.lang.String)"]
2227 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(java.lang.String,int)"]
2233 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(java.lang.String,int)"]
2242 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)"]
2243 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.parse(java.lang.String,int)"]
2989 [label="org.joda.time.Instant.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
2696 [label="org.joda.time.DateTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3494 [label="org.joda.time.MutableDateTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3053 [label="org.joda.time.LocalDate.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3169 [label="org.joda.time.LocalDateTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
2606 [label="org.joda.time.DateMidnight.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3311 [label="org.joda.time.LocalTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3414 [label="org.joda.time.MonthDay.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3936 [label="org.joda.time.YearMonth.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3706 [label="org.joda.time.Period.parse(java.lang.String,org.joda.time.format.PeriodFormatter)"]
3590 [label="org.joda.time.MutablePeriod.parse(java.lang.String,org.joda.time.format.PeriodFormatter)"]
2541 [label="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader)"]
1339 [label="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)"]
2483 [label="org.joda.time.tz.ZoneInfoCompiler.parseDayOfWeek(java.lang.String)"]
2888 [label="org.joda.time.Days.parseDays(java.lang.String)"]
2955 [label="org.joda.time.Hours.parseHours(java.lang.String)"]
1330 [label="java.lang.Integer.parseInt(java.lang.String)"]
2256 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)"]
1879 [label="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)"]
1333 [label="org.joda.time.format.PeriodFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int)"]
2221 [label="org.joda.time.format.PeriodParser.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2254 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2273 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2285 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2293 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
1780 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1783 [label="org.joda.time.format.DateTimeParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1905 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1916 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1919 [label="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1939 [label="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1941 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1959 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1976 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1984 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1994 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
2005 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
2020 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
2024 [label="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1890 [label="org.joda.time.format.DateTimeFormatter.parseLocalDate(java.lang.String)"]
1891 [label="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)"]
1893 [label="org.joda.time.format.DateTimeFormatter.parseLocalTime(java.lang.String)"]
1329 [label="java.lang.Long.parseLong(java.lang.String)"]
1323 [label="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)"]
3375 [label="org.joda.time.Minutes.parseMinutes(java.lang.String)"]
2482 [label="org.joda.time.tz.ZoneInfoCompiler.parseMonth(java.lang.String)"]
3455 [label="org.joda.time.Months.parseMonths(java.lang.String)"]
1897 [label="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)"]
1335 [label="org.joda.time.format.PeriodFormatter.parseMutablePeriod(java.lang.String)"]
2848 [label="org.joda.time.DateTimeZone.parseOffset(java.lang.String)"]
2496 [label="org.joda.time.tz.ZoneInfoCompiler.parseOptional(java.lang.String)"]
1813 [label="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)"]
1338 [label="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)"]
3808 [label="org.joda.time.Seconds.parseSeconds(java.lang.String)"]
2491 [label="org.joda.time.tz.ZoneInfoCompiler.parseTime(java.lang.String)"]
1815 [label="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])"]
1987 [label="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.String,int)"]
3899 [label="org.joda.time.Weeks.parseWeeks(java.lang.String)"]
2495 [label="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)"]
4039 [label="org.joda.time.Years.parseYears(java.lang.String)"]
2485 [label="org.joda.time.tz.ZoneInfoCompiler.parseZoneChar(char)"]
1798 [label="org.joda.time.format.DateTimeFormat.patternForStyle(java.lang.String,java.util.Locale)"]
2903 [label="org.joda.time.Days.plus(int)"]
3909 [label="org.joda.time.Weeks.plus(int)"]
2966 [label="org.joda.time.Hours.plus(int)"]
3386 [label="org.joda.time.Minutes.plus(int)"]
3818 [label="org.joda.time.Seconds.plus(int)"]
3460 [label="org.joda.time.Months.plus(int)"]
4044 [label="org.joda.time.Years.plus(int)"]
2933 [label="org.joda.time.Duration.plus(long)"]
2995 [label="org.joda.time.Instant.plus(long)"]
2728 [label="org.joda.time.DateTime.plus(long)"]
2628 [label="org.joda.time.DateMidnight.plus(long)"]
2904 [label="org.joda.time.Days.plus(org.joda.time.Days)"]
2967 [label="org.joda.time.Hours.plus(org.joda.time.Hours)"]
3387 [label="org.joda.time.Minutes.plus(org.joda.time.Minutes)"]
3461 [label="org.joda.time.Months.plus(org.joda.time.Months)"]
2934 [label="org.joda.time.Duration.plus(org.joda.time.ReadableDuration)"]
2996 [label="org.joda.time.Instant.plus(org.joda.time.ReadableDuration)"]
2729 [label="org.joda.time.DateTime.plus(org.joda.time.ReadableDuration)"]
3216 [label="org.joda.time.LocalDateTime.plus(org.joda.time.ReadableDuration)"]
2629 [label="org.joda.time.DateMidnight.plus(org.joda.time.ReadableDuration)"]
3746 [label="org.joda.time.Period.plus(org.joda.time.ReadablePeriod)"]
2730 [label="org.joda.time.DateTime.plus(org.joda.time.ReadablePeriod)"]
3098 [label="org.joda.time.LocalDate.plus(org.joda.time.ReadablePeriod)"]
3217 [label="org.joda.time.LocalDateTime.plus(org.joda.time.ReadablePeriod)"]
2630 [label="org.joda.time.DateMidnight.plus(org.joda.time.ReadablePeriod)"]
4003 [label="org.joda.time.YearMonthDay.plus(org.joda.time.ReadablePeriod)"]
3865 [label="org.joda.time.TimeOfDay.plus(org.joda.time.ReadablePeriod)"]
3336 [label="org.joda.time.LocalTime.plus(org.joda.time.ReadablePeriod)"]
3431 [label="org.joda.time.MonthDay.plus(org.joda.time.ReadablePeriod)"]
3692 [label="org.joda.time.Partial.plus(org.joda.time.ReadablePeriod)"]
3953 [label="org.joda.time.YearMonth.plus(org.joda.time.ReadablePeriod)"]
3819 [label="org.joda.time.Seconds.plus(org.joda.time.Seconds)"]
3910 [label="org.joda.time.Weeks.plus(org.joda.time.Weeks)"]
4045 [label="org.joda.time.Years.plus(org.joda.time.Years)"]
3751 [label="org.joda.time.Period.plusDays(int)"]
2734 [label="org.joda.time.DateTime.plusDays(int)"]
2488 [label="org.joda.time.LocalDate.plusDays(int)"]
3221 [label="org.joda.time.LocalDateTime.plusDays(int)"]
2634 [label="org.joda.time.DateMidnight.plusDays(int)"]
4006 [label="org.joda.time.YearMonthDay.plusDays(int)"]
3433 [label="org.joda.time.MonthDay.plusDays(int)"]
3752 [label="org.joda.time.Period.plusHours(int)"]
2735 [label="org.joda.time.DateTime.plusHours(int)"]
3222 [label="org.joda.time.LocalDateTime.plusHours(int)"]
3866 [label="org.joda.time.TimeOfDay.plusHours(int)"]
3337 [label="org.joda.time.LocalTime.plusHours(int)"]
3755 [label="org.joda.time.Period.plusMillis(int)"]
2738 [label="org.joda.time.DateTime.plusMillis(int)"]
3225 [label="org.joda.time.LocalDateTime.plusMillis(int)"]
3869 [label="org.joda.time.TimeOfDay.plusMillis(int)"]
3340 [label="org.joda.time.LocalTime.plusMillis(int)"]
3753 [label="org.joda.time.Period.plusMinutes(int)"]
2736 [label="org.joda.time.DateTime.plusMinutes(int)"]
3223 [label="org.joda.time.LocalDateTime.plusMinutes(int)"]
3867 [label="org.joda.time.TimeOfDay.plusMinutes(int)"]
3338 [label="org.joda.time.LocalTime.plusMinutes(int)"]
3749 [label="org.joda.time.Period.plusMonths(int)"]
2732 [label="org.joda.time.DateTime.plusMonths(int)"]
2487 [label="org.joda.time.LocalDate.plusMonths(int)"]
3219 [label="org.joda.time.LocalDateTime.plusMonths(int)"]
2632 [label="org.joda.time.DateMidnight.plusMonths(int)"]
4005 [label="org.joda.time.YearMonthDay.plusMonths(int)"]
3432 [label="org.joda.time.MonthDay.plusMonths(int)"]
3955 [label="org.joda.time.YearMonth.plusMonths(int)"]
3754 [label="org.joda.time.Period.plusSeconds(int)"]
2737 [label="org.joda.time.DateTime.plusSeconds(int)"]
3224 [label="org.joda.time.LocalDateTime.plusSeconds(int)"]
3868 [label="org.joda.time.TimeOfDay.plusSeconds(int)"]
3339 [label="org.joda.time.LocalTime.plusSeconds(int)"]
3750 [label="org.joda.time.Period.plusWeeks(int)"]
2733 [label="org.joda.time.DateTime.plusWeeks(int)"]
3100 [label="org.joda.time.LocalDate.plusWeeks(int)"]
3220 [label="org.joda.time.LocalDateTime.plusWeeks(int)"]
2633 [label="org.joda.time.DateMidnight.plusWeeks(int)"]
3748 [label="org.joda.time.Period.plusYears(int)"]
2731 [label="org.joda.time.DateTime.plusYears(int)"]
3099 [label="org.joda.time.LocalDate.plusYears(int)"]
3218 [label="org.joda.time.LocalDateTime.plusYears(int)"]
2631 [label="org.joda.time.DateMidnight.plusYears(int)"]
4004 [label="org.joda.time.YearMonthDay.plusYears(int)"]
3954 [label="org.joda.time.YearMonth.plusYears(int)"]
2084 [label="org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)"]
2353 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)"]
2363 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.previous(long,int,int)"]
2338 [label="org.joda.time.DateTimeZone.previousTransition(long)"]
2337 [label="org.joda.time.tz.CachedDateTimeZone.previousTransition(long)"]
2405 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)"]
2429 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)"]
1872 [label="org.joda.time.format.DateTimeFormatter.print(long)"]
1952 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.print(long,org.joda.time.Chronology,java.util.Locale)"]
1990 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.print(long,org.joda.time.DateTimeZone,java.util.Locale)"]
56 [label="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)"]
191 [label="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadablePartial)"]
1955 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.print(org.joda.time.ReadablePartial,java.util.Locale)"]
216 [label="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)"]
2849 [label="org.joda.time.DateTimeZone.printOffset(int)"]
2570 [label="java.lang.Throwable.printStackTrace()"]
2226 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.printTo(java.io.Writer,int)"]
2232 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.printTo(java.io.Writer,int)"]
2240 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.printTo(java.io.Writer,int)"]
2241 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.printTo(java.io.Writer,int)"]
1870 [label="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,long)"]
1867 [label="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,long,org.joda.time.Chronology)"]
1774 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1775 [label="org.joda.time.format.DateTimePrinter.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1901 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1911 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1925 [label="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1933 [label="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1945 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1953 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1971 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1982 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1991 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2004 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2017 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1866 [label="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,org.joda.time.ReadableInstant)"]
1875 [label="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,org.joda.time.ReadablePartial)"]
1778 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
1779 [label="org.joda.time.format.DateTimePrinter.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
1904 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
1914 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
1928 [label="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
1937 [label="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
1948 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
1956 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
1973 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
2019 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
2216 [label="org.joda.time.format.PeriodFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod)"]
2217 [label="org.joda.time.format.PeriodPrinter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2253 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2272 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2284 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2292 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
1871 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long)"]
1868 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,org.joda.time.ReadableInstant)"]
1876 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,org.joda.time.ReadablePartial)"]
2225 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.printTo(java.lang.StringBuffer,int)"]
2231 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.printTo(java.lang.StringBuffer,int)"]
2238 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.printTo(java.lang.StringBuffer,int)"]
2239 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.printTo(java.lang.StringBuffer,int)"]
1970 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology)"]
159 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long)"]
1865 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology)"]
1770 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1773 [label="org.joda.time.format.DateTimePrinter.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1900 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1910 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1923 [label="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1930 [label="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1943 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1951 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1969 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1981 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1989 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2003 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2015 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1864 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadableInstant)"]
1873 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial)"]
1776 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
1777 [label="org.joda.time.format.DateTimePrinter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
1903 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
1913 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
1927 [label="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
1936 [label="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
1946 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
1954 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
1972 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
2018 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
2211 [label="org.joda.time.format.PeriodFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod)"]
2215 [label="org.joda.time.format.PeriodPrinter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2251 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2271 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2283 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2291 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
1935 [label="org.joda.time.format.DateTimeFormatterBuilder.printUnknownString(java.io.Writer,int)"]
2514 [label="org.joda.time.tz.ZoneInfoCompiler.printUsage()"]
2187 [label="org.joda.time.format.PeriodFormatterBuilder.printZeroAlways()"]
2422 [label="java.io.PrintStream.println(java.lang.String)"]
2750 [label="org.joda.time.DateTime.property(org.joda.time.DateTimeFieldType)"]
1961 [label="org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)"]
3106 [label="org.joda.time.LocalDate.property(org.joda.time.DateTimeFieldType)"]
3236 [label="org.joda.time.LocalDateTime.property(org.joda.time.DateTimeFieldType)"]
2643 [label="org.joda.time.DateMidnight.property(org.joda.time.DateTimeFieldType)"]
4011 [label="org.joda.time.YearMonthDay.property(org.joda.time.DateTimeFieldType)"]
3875 [label="org.joda.time.TimeOfDay.property(org.joda.time.DateTimeFieldType)"]
3346 [label="org.joda.time.LocalTime.property(org.joda.time.DateTimeFieldType)"]
3442 [label="org.joda.time.MonthDay.property(org.joda.time.DateTimeFieldType)"]
3694 [label="org.joda.time.Partial.property(org.joda.time.DateTimeFieldType)"]
3966 [label="org.joda.time.YearMonth.property(org.joda.time.DateTimeFieldType)"]
1131 [label="java.util.HashMap.put(K,V)"]
736 [label="java.util.Map.put(K,V)"]
929 [label="java.util.WeakHashMap.put(K,V)"]
931 [label="java.util.TreeMap.put(K,V)"]
2818 [label="org.joda.time.DateTimeUtils.put(java.util.Map,java.lang.String,java.lang.String)"]
2551 [label="java.util.Map.putAll(java.util.Map)"]
2206 [label="java.util.concurrent.ConcurrentMap.putIfAbsent(K,V)"]
2345 [label="java.io.DataInput.readBoolean()"]
2344 [label="java.io.DataInput.readByte()"]
2342 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(java.io.DataInput)"]
2359 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(java.io.DataInput)"]
2440 [label="org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.DataInput,java.lang.String)"]
2400 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(java.io.DataInput,java.lang.String)"]
2408 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(java.io.DataInput,java.lang.String)"]
2439 [label="org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.InputStream,java.lang.String)"]
2410 [label="java.io.DataInput.readInt()"]
2553 [label="java.io.BufferedReader.readLine()"]
2444 [label="java.io.DataInput.readLong()"]
2346 [label="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)"]
993 [label="java.io.ObjectInputStream.readObject()"]
3472 [label="org.joda.time.MutableDateTime$Property.readObject(java.io.ObjectInputStream)"]
2581 [label="org.joda.time.DateMidnight$Property.readObject(java.io.ObjectInputStream)"]
2672 [label="org.joda.time.DateTime$Property.readObject(java.io.ObjectInputStream)"]
2838 [label="org.joda.time.DateTimeZone$Stub.readObject(java.io.ObjectInputStream)"]
3027 [label="org.joda.time.LocalDate$Property.readObject(java.io.ObjectInputStream)"]
3142 [label="org.joda.time.LocalDateTime$Property.readObject(java.io.ObjectInputStream)"]
3283 [label="org.joda.time.LocalTime$Property.readObject(java.io.ObjectInputStream)"]
464 [label="org.joda.time.chrono.AssembledChronology.readObject(java.io.ObjectInputStream)"]
992 [label="org.joda.time.chrono.ISOChronology$Stub.readObject(java.io.ObjectInputStream)"]
3068 [label="org.joda.time.LocalDate.readResolve()"]
3184 [label="org.joda.time.LocalDateTime.readResolve()"]
3324 [label="org.joda.time.LocalTime.readResolve()"]
2796 [label="org.joda.time.DateTimeComparator.readResolve()"]
2840 [label="org.joda.time.DateTimeZone$Stub.readResolve()"]
2890 [label="org.joda.time.Days.readResolve()"]
3900 [label="org.joda.time.Weeks.readResolve()"]
2957 [label="org.joda.time.Hours.readResolve()"]
3377 [label="org.joda.time.Minutes.readResolve()"]
3809 [label="org.joda.time.Seconds.readResolve()"]
3424 [label="org.joda.time.MonthDay.readResolve()"]
3456 [label="org.joda.time.Months.readResolve()"]
3946 [label="org.joda.time.YearMonth.readResolve()"]
4040 [label="org.joda.time.Years.readResolve()"]
724 [label="org.joda.time.chrono.BasicYearDateTimeField.readResolve()"]
979 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.readResolve()"]
922 [label="org.joda.time.chrono.GJEraDateTimeField.readResolve()"]
907 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.readResolve()"]
609 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.readResolve()"]
620 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.readResolve()"]
707 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.readResolve()"]
687 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.readResolve()"]
663 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.readResolve()"]
737 [label="org.joda.time.chrono.BuddhistChronology.readResolve()"]
865 [label="org.joda.time.chrono.GJChronology.readResolve()"]
754 [label="org.joda.time.chrono.CopticChronology.readResolve()"]
764 [label="org.joda.time.chrono.EthiopicChronology.readResolve()"]
983 [label="org.joda.time.chrono.GregorianChronology.readResolve()"]
1050 [label="org.joda.time.chrono.JulianChronology.readResolve()"]
989 [label="org.joda.time.chrono.ISOChronology$Stub.readResolve()"]
1026 [label="org.joda.time.chrono.IslamicChronology.readResolve()"]
1746 [label="org.joda.time.field.UnsupportedDurationField.readResolve()"]
1727 [label="org.joda.time.field.UnsupportedDateTimeField.readResolve()"]
1677 [label="org.joda.time.field.SkipUndoDateTimeField.readResolve()"]
1673 [label="org.joda.time.field.SkipDateTimeField.readResolve()"]
2839 [label="java.io.ObjectInputStream.readUTF()"]
2360 [label="java.io.DataInput.readUTF()"]
2578 [label="java.io.DataInputStream.readUTF()"]
2343 [label="java.io.DataInput.readUnsignedByte()"]
2409 [label="java.io.DataInput.readUnsignedShort()"]
2577 [label="java.io.DataInputStream.readUnsignedShort()"]
2575 [label="org.joda.time.tz.ZoneInfoProvider.readZoneInfoMap(java.io.DataInputStream,java.util.Map)"]
939 [label="org.joda.time.chrono.GJLocaleSymbols.realignDaysOfWeek(java.lang.String[])"]
942 [label="org.joda.time.chrono.GJLocaleSymbols.realignMonths(java.lang.String[])"]
1917 [label="java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)"]
1396 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()"]
874 [label="org.joda.time.DateTimeField.remainder(long)"]
723 [label="org.joda.time.chrono.BasicYearDateTimeField.remainder(long)"]
978 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.remainder(long)"]
696 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(long)"]
681 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)"]
662 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(long)"]
1019 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.remainder(long)"]
1112 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.remainder(long)"]
1191 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.remainder(long)"]
1726 [label="org.joda.time.field.UnsupportedDateTimeField.remainder(long)"]
1767 [label="org.joda.time.field.ZeroIsMaxDateTimeField.remainder(long)"]
1628 [label="org.joda.time.field.OffsetDateTimeField.remainder(long)"]
1576 [label="org.joda.time.field.DividedDateTimeField.remainder(long)"]
1654 [label="org.joda.time.field.RemainderDateTimeField.remainder(long)"]
682 [label="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)"]
1450 [label="org.joda.time.field.BaseDateTimeField.remainder(long)"]
1533 [label="org.joda.time.field.DelegatedDateTimeField.remainder(long)"]
2395 [label="java.util.Iterator.remove()"]
2458 [label="java.util.ArrayList.remove(int)"]
1272 [label="org.joda.time.convert.ConverterSet.remove(int,org.joda.time.convert.Converter[])"]
2574 [label="java.util.Map.remove(java.lang.Object)"]
2166 [label="java.util.Set.remove(java.lang.Object)"]
3789 [label="java.util.List.remove(java.lang.Object)"]
2169 [label="java.util.Collection.remove(java.lang.Object)"]
1249 [label="org.joda.time.convert.ConverterSet.remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])"]
1260 [label="org.joda.time.convert.ConverterManager.removeDurationConverter(org.joda.time.convert.DurationConverter)"]
1792 [label="org.joda.time.format.DateTimeFormat$1.removeEldestEntry(java.util.Map$Entry)"]
1248 [label="org.joda.time.convert.ConverterManager.removeInstantConverter(org.joda.time.convert.InstantConverter)"]
1268 [label="org.joda.time.convert.ConverterManager.removeIntervalConverter(org.joda.time.convert.IntervalConverter)"]
1256 [label="org.joda.time.convert.ConverterManager.removePartialConverter(org.joda.time.convert.PartialConverter)"]
1264 [label="org.joda.time.convert.ConverterManager.removePeriodConverter(org.joda.time.convert.PeriodConverter)"]
2368 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.rename(java.lang.String)"]
2369 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.renameAppend(java.lang.String)"]
1880 [label="org.joda.time.format.DateTimeFormatter.requireParser()"]
1874 [label="org.joda.time.format.DateTimeFormatter.requirePrinter()"]
2026 [label="org.joda.time.format.DateTimeParserBucket.restoreState(java.lang.Object)"]
2080 [label="org.joda.time.format.DateTimeParserBucket$SavedState.restoreState(org.joda.time.format.DateTimeParserBucket)"]
2168 [label="java.util.Collection.retainAll(java.util.Collection)"]
2278 [label="java.util.Collections.reverse(java.util.List)"]
3483 [label="org.joda.time.MutableDateTime$Property.roundCeiling()"]
815 [label="org.joda.time.DateTimeField.roundCeiling(long)"]
722 [label="org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(long)"]
977 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.roundCeiling(long)"]
915 [label="org.joda.time.chrono.GJEraDateTimeField.roundCeiling(long)"]
679 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)"]
814 [label="org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(long)"]
1018 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.roundCeiling(long)"]
1105 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundCeiling(long)"]
1190 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)"]
1722 [label="org.joda.time.field.UnsupportedDateTimeField.roundCeiling(long)"]
1763 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundCeiling(long)"]
1624 [label="org.joda.time.field.OffsetDateTimeField.roundCeiling(long)"]
1650 [label="org.joda.time.field.RemainderDateTimeField.roundCeiling(long)"]
680 [label="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)"]
1445 [label="org.joda.time.field.BaseDateTimeField.roundCeiling(long)"]
1529 [label="org.joda.time.field.DelegatedDateTimeField.roundCeiling(long)"]
2594 [label="org.joda.time.DateMidnight$Property.roundCeilingCopy()"]
2686 [label="org.joda.time.DateTime$Property.roundCeilingCopy()"]
3040 [label="org.joda.time.LocalDate$Property.roundCeilingCopy()"]
3157 [label="org.joda.time.LocalDateTime$Property.roundCeilingCopy()"]
3297 [label="org.joda.time.LocalTime$Property.roundCeilingCopy()"]
3482 [label="org.joda.time.MutableDateTime$Property.roundFloor()"]
706 [label="org.joda.time.DateTimeField.roundFloor(long)"]
721 [label="org.joda.time.chrono.BasicYearDateTimeField.roundFloor(long)"]
976 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.roundFloor(long)"]
914 [label="org.joda.time.chrono.GJEraDateTimeField.roundFloor(long)"]
705 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)"]
677 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)"]
661 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.roundFloor(long)"]
813 [label="org.joda.time.chrono.GJChronology$CutoverField.roundFloor(long)"]
1017 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.roundFloor(long)"]
1104 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundFloor(long)"]
1189 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)"]
1721 [label="org.joda.time.field.UnsupportedDateTimeField.roundFloor(long)"]
1762 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundFloor(long)"]
1623 [label="org.joda.time.field.OffsetDateTimeField.roundFloor(long)"]
1575 [label="org.joda.time.field.DividedDateTimeField.roundFloor(long)"]
1649 [label="org.joda.time.field.RemainderDateTimeField.roundFloor(long)"]
678 [label="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)"]
1446 [label="org.joda.time.field.BaseDateTimeField.roundFloor(long)"]
1528 [label="org.joda.time.field.DelegatedDateTimeField.roundFloor(long)"]
1469 [label="org.joda.time.field.DecoratedDateTimeField.roundFloor(long)"]
2593 [label="org.joda.time.DateMidnight$Property.roundFloorCopy()"]
2685 [label="org.joda.time.DateTime$Property.roundFloorCopy()"]
3039 [label="org.joda.time.LocalDate$Property.roundFloorCopy()"]
3156 [label="org.joda.time.LocalDateTime$Property.roundFloorCopy()"]
3296 [label="org.joda.time.LocalTime$Property.roundFloorCopy()"]
3485 [label="org.joda.time.MutableDateTime$Property.roundHalfCeiling()"]
1109 [label="org.joda.time.DateTimeField.roundHalfCeiling(long)"]
917 [label="org.joda.time.chrono.GJEraDateTimeField.roundHalfCeiling(long)"]
1108 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfCeiling(long)"]
1724 [label="org.joda.time.field.UnsupportedDateTimeField.roundHalfCeiling(long)"]
1765 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfCeiling(long)"]
1626 [label="org.joda.time.field.OffsetDateTimeField.roundHalfCeiling(long)"]
1652 [label="org.joda.time.field.RemainderDateTimeField.roundHalfCeiling(long)"]
1448 [label="org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long)"]
1531 [label="org.joda.time.field.DelegatedDateTimeField.roundHalfCeiling(long)"]
2596 [label="org.joda.time.DateMidnight$Property.roundHalfCeilingCopy()"]
2688 [label="org.joda.time.DateTime$Property.roundHalfCeilingCopy()"]
3042 [label="org.joda.time.LocalDate$Property.roundHalfCeilingCopy()"]
3159 [label="org.joda.time.LocalDateTime$Property.roundHalfCeilingCopy()"]
3299 [label="org.joda.time.LocalTime$Property.roundHalfCeilingCopy()"]
3486 [label="org.joda.time.MutableDateTime$Property.roundHalfEven()"]
1111 [label="org.joda.time.DateTimeField.roundHalfEven(long)"]
918 [label="org.joda.time.chrono.GJEraDateTimeField.roundHalfEven(long)"]
1110 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfEven(long)"]
1725 [label="org.joda.time.field.UnsupportedDateTimeField.roundHalfEven(long)"]
1766 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfEven(long)"]
1627 [label="org.joda.time.field.OffsetDateTimeField.roundHalfEven(long)"]
1653 [label="org.joda.time.field.RemainderDateTimeField.roundHalfEven(long)"]
1449 [label="org.joda.time.field.BaseDateTimeField.roundHalfEven(long)"]
1532 [label="org.joda.time.field.DelegatedDateTimeField.roundHalfEven(long)"]
2597 [label="org.joda.time.DateMidnight$Property.roundHalfEvenCopy()"]
2689 [label="org.joda.time.DateTime$Property.roundHalfEvenCopy()"]
3043 [label="org.joda.time.LocalDate$Property.roundHalfEvenCopy()"]
3160 [label="org.joda.time.LocalDateTime$Property.roundHalfEvenCopy()"]
3300 [label="org.joda.time.LocalTime$Property.roundHalfEvenCopy()"]
3484 [label="org.joda.time.MutableDateTime$Property.roundHalfFloor()"]
1107 [label="org.joda.time.DateTimeField.roundHalfFloor(long)"]
916 [label="org.joda.time.chrono.GJEraDateTimeField.roundHalfFloor(long)"]
1106 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfFloor(long)"]
1723 [label="org.joda.time.field.UnsupportedDateTimeField.roundHalfFloor(long)"]
1764 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfFloor(long)"]
1625 [label="org.joda.time.field.OffsetDateTimeField.roundHalfFloor(long)"]
1651 [label="org.joda.time.field.RemainderDateTimeField.roundHalfFloor(long)"]
1447 [label="org.joda.time.field.BaseDateTimeField.roundHalfFloor(long)"]
1530 [label="org.joda.time.field.DelegatedDateTimeField.roundHalfFloor(long)"]
2595 [label="org.joda.time.DateMidnight$Property.roundHalfFloorCopy()"]
2687 [label="org.joda.time.DateTime$Property.roundHalfFloorCopy()"]
3041 [label="org.joda.time.LocalDate$Property.roundHalfFloorCopy()"]
3158 [label="org.joda.time.LocalDateTime$Property.roundHalfFloorCopy()"]
3298 [label="org.joda.time.LocalTime$Property.roundHalfFloorCopy()"]
360 [label="org.joda.time.field.FieldUtils.safeAdd(int,int)"]
148 [label="org.joda.time.field.FieldUtils.safeAdd(long,long)"]
1580 [label="org.joda.time.field.FieldUtils.safeDivide(long,long)"]
1579 [label="org.joda.time.field.FieldUtils.safeMultiply(int,int)"]
374 [label="org.joda.time.field.FieldUtils.safeMultiply(long,int)"]
1459 [label="org.joda.time.field.FieldUtils.safeMultiply(long,long)"]
1581 [label="org.joda.time.field.FieldUtils.safeMultiplyToInt(long,long)"]
1578 [label="org.joda.time.field.FieldUtils.safeNegate(int)"]
325 [label="org.joda.time.field.FieldUtils.safeSubtract(long,long)"]
375 [label="org.joda.time.field.FieldUtils.safeToInt(long)"]
1978 [label="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeField,int)"]
1921 [label="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,int)"]
1967 [label="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,java.lang.String,java.util.Locale)"]
2079 [label="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.format.DateTimeParserBucket$SavedField)"]
2025 [label="org.joda.time.format.DateTimeParserBucket.saveState()"]
2228 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.scan(java.lang.String,int)"]
2234 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan(java.lang.String,int)"]
2244 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)"]
2245 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.scan(java.lang.String,int)"]
2105 [label="org.joda.time.format.ISODateTimeFormat$Constants.secondElement()"]
488 [label="org.joda.time.DateTimeFieldType.secondOfDay()"]
37 [label="org.joda.time.Chronology.secondOfDay()"]
2787 [label="org.joda.time.DateTime.secondOfDay()"]
3557 [label="org.joda.time.MutableDateTime.secondOfDay()"]
444 [label="org.joda.time.chrono.BaseChronology.secondOfDay()"]
882 [label="org.joda.time.chrono.AssembledChronology.secondOfDay()"]
487 [label="org.joda.time.DateTimeFieldType.secondOfMinute()"]
39 [label="org.joda.time.Chronology.secondOfMinute()"]
2788 [label="org.joda.time.DateTime.secondOfMinute()"]
3558 [label="org.joda.time.MutableDateTime.secondOfMinute()"]
3275 [label="org.joda.time.LocalDateTime.secondOfMinute()"]
3889 [label="org.joda.time.TimeOfDay.secondOfMinute()"]
3359 [label="org.joda.time.LocalTime.secondOfMinute()"]
443 [label="org.joda.time.chrono.BaseChronology.secondOfMinute()"]
881 [label="org.joda.time.chrono.AssembledChronology.secondOfMinute()"]
398 [label="org.joda.time.Chronology.seconds()"]
3786 [label="org.joda.time.PeriodType.seconds()"]
354 [label="org.joda.time.DurationFieldType.seconds()"]
430 [label="org.joda.time.chrono.BaseChronology.seconds()"]
3714 [label="org.joda.time.Period.seconds(int)"]
2900 [label="org.joda.time.Seconds.seconds(int)"]
3804 [label="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3805 [label="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3806 [label="org.joda.time.Seconds.secondsIn(org.joda.time.ReadableInterval)"]
1241 [label="org.joda.time.convert.ConverterSet.select(java.lang.Class)"]
1878 [label="org.joda.time.format.DateTimeFormatter.selectChronology(org.joda.time.Chronology)"]
1271 [label="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)"]
1851 [label="org.joda.time.format.DateTimeFormat.selectStyle(char)"]
2517 [label="java.lang.ThreadLocal.set(T)"]
1962 [label="org.joda.time.MutableDateTime$Property.set(int)"]
2311 [label="java.util.List.set(int,E)"]
3206 [label="java.util.Calendar.set(int,int,int,int,int,int)"]
3481 [label="org.joda.time.MutableDateTime$Property.set(java.lang.String)"]
3480 [label="org.joda.time.MutableDateTime$Property.set(java.lang.String,java.util.Locale)"]
2074 [label="org.joda.time.format.DateTimeParserBucket$SavedField.set(long,boolean)"]
467 [label="org.joda.time.DateTimeField.set(long,int)"]
711 [label="org.joda.time.chrono.BasicYearDateTimeField.set(long,int)"]
973 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)"]
911 [label="org.joda.time.chrono.GJEraDateTimeField.set(long,int)"]
692 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)"]
652 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)"]
667 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,int)"]
790 [label="org.joda.time.chrono.GJChronology$CutoverField.set(long,int)"]
1015 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.set(long,int)"]
1100 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(long,int)"]
1180 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(long,int)"]
1704 [label="org.joda.time.field.UnsupportedDateTimeField.set(long,int)"]
519 [label="org.joda.time.field.PreciseDateTimeField.set(long,int)"]
1755 [label="org.joda.time.field.ZeroIsMaxDateTimeField.set(long,int)"]
1619 [label="org.joda.time.field.OffsetDateTimeField.set(long,int)"]
1571 [label="org.joda.time.field.DividedDateTimeField.set(long,int)"]
1647 [label="org.joda.time.field.RemainderDateTimeField.set(long,int)"]
1634 [label="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)"]
1431 [label="org.joda.time.field.BaseDateTimeField.set(long,int)"]
1676 [label="org.joda.time.field.SkipUndoDateTimeField.set(long,int)"]
1506 [label="org.joda.time.field.DelegatedDateTimeField.set(long,int)"]
1672 [label="org.joda.time.field.SkipDateTimeField.set(long,int)"]
975 [label="org.joda.time.field.DecoratedDateTimeField.set(long,int)"]
1599 [label="org.joda.time.field.LenientDateTimeField.set(long,int)"]
1679 [label="org.joda.time.field.StrictDateTimeField.set(long,int)"]
1509 [label="org.joda.time.DateTimeField.set(long,java.lang.String)"]
1707 [label="org.joda.time.field.UnsupportedDateTimeField.set(long,java.lang.String)"]
1439 [label="org.joda.time.field.BaseDateTimeField.set(long,java.lang.String)"]
1508 [label="org.joda.time.field.DelegatedDateTimeField.set(long,java.lang.String)"]
794 [label="org.joda.time.DateTimeField.set(long,java.lang.String,java.util.Locale)"]
517 [label="org.joda.time.chrono.BasicChronology$HalfdayField.set(long,java.lang.String,java.util.Locale)"]
912 [label="org.joda.time.chrono.GJEraDateTimeField.set(long,java.lang.String,java.util.Locale)"]
668 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,java.lang.String,java.util.Locale)"]
793 [label="org.joda.time.chrono.GJChronology$CutoverField.set(long,java.lang.String,java.util.Locale)"]
1101 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(long,java.lang.String,java.util.Locale)"]
1184 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(long,java.lang.String,java.util.Locale)"]
1706 [label="org.joda.time.field.UnsupportedDateTimeField.set(long,java.lang.String,java.util.Locale)"]
1437 [label="org.joda.time.field.BaseDateTimeField.set(long,java.lang.String,java.util.Locale)"]
1507 [label="org.joda.time.field.DelegatedDateTimeField.set(long,java.lang.String,java.util.Locale)"]
3511 [label="org.joda.time.MutableDateTime.set(org.joda.time.DateTimeFieldType,int)"]
3613 [label="org.joda.time.MutablePeriod.set(org.joda.time.DurationFieldType,int)"]
302 [label="org.joda.time.DateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)"]
1705 [label="org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)"]
648 [label="org.joda.time.field.BaseDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)"]
1510 [label="org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)"]
1512 [label="org.joda.time.DateTimeField.set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)"]
1708 [label="org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)"]
1440 [label="org.joda.time.field.BaseDateTimeField.set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)"]
1511 [label="org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)"]
180 [label="org.joda.time.Chronology.set(org.joda.time.ReadablePartial,long)"]
477 [label="org.joda.time.chrono.BaseChronology.set(org.joda.time.ReadablePartial,long)"]
239 [label="org.joda.time.base.BaseDateTime.setChronology(org.joda.time.Chronology)"]
3510 [label="org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)"]
3576 [label="org.joda.time.MutableInterval.setChronology(org.joda.time.Chronology)"]
1290 [label="org.joda.time.ReadWritableInterval.setChronology(org.joda.time.Chronology)"]
1887 [label="org.joda.time.ReadWritableInstant.setChronology(org.joda.time.Chronology)"]
2588 [label="org.joda.time.DateMidnight$Property.setCopy(int)"]
2679 [label="org.joda.time.DateTime$Property.setCopy(int)"]
3034 [label="org.joda.time.LocalDate$Property.setCopy(int)"]
3151 [label="org.joda.time.LocalDateTime$Property.setCopy(int)"]
3291 [label="org.joda.time.LocalTime$Property.setCopy(int)"]
3403 [label="org.joda.time.MonthDay$Property.setCopy(int)"]
3668 [label="org.joda.time.Partial$Property.setCopy(int)"]
3835 [label="org.joda.time.TimeOfDay$Property.setCopy(int)"]
3925 [label="org.joda.time.YearMonth$Property.setCopy(int)"]
3979 [label="org.joda.time.YearMonthDay$Property.setCopy(int)"]
2590 [label="org.joda.time.DateMidnight$Property.setCopy(java.lang.String)"]
2681 [label="org.joda.time.DateTime$Property.setCopy(java.lang.String)"]
3036 [label="org.joda.time.LocalDate$Property.setCopy(java.lang.String)"]
3153 [label="org.joda.time.LocalDateTime$Property.setCopy(java.lang.String)"]
3293 [label="org.joda.time.LocalTime$Property.setCopy(java.lang.String)"]
3405 [label="org.joda.time.MonthDay$Property.setCopy(java.lang.String)"]
3670 [label="org.joda.time.Partial$Property.setCopy(java.lang.String)"]
3837 [label="org.joda.time.TimeOfDay$Property.setCopy(java.lang.String)"]
3927 [label="org.joda.time.YearMonth$Property.setCopy(java.lang.String)"]
3981 [label="org.joda.time.YearMonthDay$Property.setCopy(java.lang.String)"]
2589 [label="org.joda.time.DateMidnight$Property.setCopy(java.lang.String,java.util.Locale)"]
2680 [label="org.joda.time.DateTime$Property.setCopy(java.lang.String,java.util.Locale)"]
3035 [label="org.joda.time.LocalDate$Property.setCopy(java.lang.String,java.util.Locale)"]
3152 [label="org.joda.time.LocalDateTime$Property.setCopy(java.lang.String,java.util.Locale)"]
3292 [label="org.joda.time.LocalTime$Property.setCopy(java.lang.String,java.util.Locale)"]
3404 [label="org.joda.time.MonthDay$Property.setCopy(java.lang.String,java.util.Locale)"]
3669 [label="org.joda.time.Partial$Property.setCopy(java.lang.String,java.util.Locale)"]
3836 [label="org.joda.time.TimeOfDay$Property.setCopy(java.lang.String,java.util.Locale)"]
3926 [label="org.joda.time.YearMonth$Property.setCopy(java.lang.String,java.util.Locale)"]
3980 [label="org.joda.time.YearMonthDay$Property.setCopy(java.lang.String,java.util.Locale)"]
2824 [label="org.joda.time.DateTimeUtils.setCurrentMillisFixed(long)"]
2825 [label="org.joda.time.DateTimeUtils.setCurrentMillisOffset(long)"]
2826 [label="org.joda.time.DateTimeUtils.setCurrentMillisProvider(org.joda.time.DateTimeUtils$MillisProvider)"]
2822 [label="org.joda.time.DateTimeUtils.setCurrentMillisSystem()"]
3538 [label="org.joda.time.MutableDateTime.setDate(int,int,int)"]
3536 [label="org.joda.time.MutableDateTime.setDate(long)"]
3537 [label="org.joda.time.MutableDateTime.setDate(org.joda.time.ReadableInstant)"]
3542 [label="org.joda.time.MutableDateTime.setDateTime(int,int,int,int,int,int,int)"]
3522 [label="org.joda.time.MutableDateTime.setDayOfMonth(int)"]
2349 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(org.joda.time.Chronology,long)"]
2352 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)"]
2354 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)"]
3523 [label="org.joda.time.MutableDateTime.setDayOfWeek(int)"]
2350 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(org.joda.time.Chronology,long)"]
3521 [label="org.joda.time.MutableDateTime.setDayOfYear(int)"]
3648 [label="org.joda.time.MutablePeriod.setDays(int)"]
2263 [label="org.joda.time.ReadWritablePeriod.setDays(int)"]
2846 [label="org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone)"]
2830 [label="org.joda.time.DateTimeUtils.setDefaultTimeZoneNames(java.util.Map)"]
3581 [label="org.joda.time.MutableInterval.setDurationAfterStart(long)"]
3583 [label="org.joda.time.MutableInterval.setDurationAfterStart(org.joda.time.ReadableDuration)"]
3582 [label="org.joda.time.MutableInterval.setDurationBeforeEnd(long)"]
3584 [label="org.joda.time.MutableInterval.setDurationBeforeEnd(org.joda.time.ReadableDuration)"]
3580 [label="org.joda.time.MutableInterval.setEnd(org.joda.time.ReadableInstant)"]
3579 [label="org.joda.time.MutableInterval.setEndMillis(long)"]
356 [label="org.joda.time.base.BasePeriod.setField(org.joda.time.DurationFieldType,int)"]
357 [label="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)"]
2257 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.setFieldValue(org.joda.time.ReadWritablePeriod,int,int)"]
418 [label="org.joda.time.chrono.AssembledChronology.setFields()"]
2452 [label="org.joda.time.tz.DateTimeZoneBuilder.setFixedSavings(java.lang.String,int)"]
2453 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setFixedSavings(java.lang.String,int)"]
3525 [label="org.joda.time.MutableDateTime.setHourOfDay(int)"]
3650 [label="org.joda.time.MutablePeriod.setHours(int)"]
2264 [label="org.joda.time.ReadWritablePeriod.setHours(int)"]
3738 [label="org.joda.time.PeriodType.setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)"]
2348 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)"]
3573 [label="org.joda.time.MutableInterval.setInterval(long,long)"]
1291 [label="org.joda.time.ReadWritableInterval.setInterval(long,long)"]
281 [label="org.joda.time.base.BaseInterval.setInterval(long,long,org.joda.time.Chronology)"]
3575 [label="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3574 [label="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInterval)"]
1309 [label="org.joda.time.ReadWritableInterval.setInterval(org.joda.time.ReadableInterval)"]
276 [label="org.joda.time.convert.IntervalConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)"]
1289 [label="org.joda.time.convert.NullConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)"]
1308 [label="org.joda.time.convert.ReadableIntervalConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)"]
1336 [label="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)"]
335 [label="org.joda.time.convert.PeriodConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1287 [label="org.joda.time.convert.NullConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1295 [label="org.joda.time.convert.ReadableDurationConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1306 [label="org.joda.time.convert.ReadableIntervalConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1317 [label="org.joda.time.convert.ReadablePeriodConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1331 [label="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
78 [label="java.lang.StringBuffer.setLength(int)"]
3656 [label="org.joda.time.MutablePeriod.setMillis(int)"]
2267 [label="org.joda.time.ReadWritablePeriod.setMillis(int)"]
238 [label="org.joda.time.base.BaseDateTime.setMillis(long)"]
3477 [label="org.joda.time.MutableDateTime.setMillis(long)"]
1883 [label="org.joda.time.ReadWritableInstant.setMillis(long)"]
3504 [label="org.joda.time.MutableDateTime.setMillis(org.joda.time.ReadableInstant)"]
3533 [label="org.joda.time.MutableDateTime.setMillisOfDay(int)"]
3534 [label="org.joda.time.MutableDateTime.setMillisOfSecond(int)"]
3527 [label="org.joda.time.MutableDateTime.setMinuteOfDay(int)"]
3528 [label="org.joda.time.MutableDateTime.setMinuteOfHour(int)"]
3652 [label="org.joda.time.MutablePeriod.setMinutes(int)"]
2265 [label="org.joda.time.ReadWritablePeriod.setMinutes(int)"]
3517 [label="org.joda.time.MutableDateTime.setMonthOfYear(int)"]
3644 [label="org.joda.time.MutablePeriod.setMonths(int)"]
2261 [label="org.joda.time.ReadWritablePeriod.setMonths(int)"]
2861 [label="org.joda.time.DateTimeZone.setNameProvider(org.joda.time.tz.NameProvider)"]
2843 [label="org.joda.time.DateTimeZone.setNameProvider0(org.joda.time.tz.NameProvider)"]
1985 [label="org.joda.time.format.DateTimeParserBucket.setOffset(java.lang.Integer)"]
347 [label="org.joda.time.base.BasePeriod.setPeriod(int,int,int,int,int,int,int,int)"]
3615 [label="org.joda.time.MutablePeriod.setPeriod(int,int,int,int,int,int,int,int)"]
3617 [label="org.joda.time.MutablePeriod.setPeriod(long)"]
3620 [label="org.joda.time.MutablePeriod.setPeriod(long,long)"]
3618 [label="org.joda.time.MutablePeriod.setPeriod(long,long,org.joda.time.Chronology)"]
3623 [label="org.joda.time.MutablePeriod.setPeriod(long,org.joda.time.Chronology)"]
3621 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadableDuration)"]
3622 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadableDuration,org.joda.time.Chronology)"]
3619 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3616 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadableInterval)"]
344 [label="org.joda.time.base.BasePeriod.setPeriod(org.joda.time.ReadablePeriod)"]
3614 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadablePeriod)"]
1288 [label="org.joda.time.ReadWritablePeriod.setPeriod(org.joda.time.ReadablePeriod)"]
3585 [label="org.joda.time.MutableInterval.setPeriodAfterStart(org.joda.time.ReadablePeriod)"]
3586 [label="org.joda.time.MutableInterval.setPeriodBeforeEnd(org.joda.time.ReadablePeriod)"]
314 [label="org.joda.time.base.BasePeriod.setPeriodInternal(int,int,int,int,int,int,int,int)"]
346 [label="org.joda.time.base.BasePeriod.setPeriodInternal(org.joda.time.ReadablePeriod)"]
2855 [label="org.joda.time.DateTimeZone.setProvider(org.joda.time.tz.Provider)"]
2842 [label="org.joda.time.DateTimeZone.setProvider0(org.joda.time.tz.Provider)"]
3502 [label="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField)"]
3503 [label="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)"]
3530 [label="org.joda.time.MutableDateTime.setSecondOfDay(int)"]
3531 [label="org.joda.time.MutableDateTime.setSecondOfMinute(int)"]
3654 [label="org.joda.time.MutablePeriod.setSeconds(int)"]
2266 [label="org.joda.time.ReadWritablePeriod.setSeconds(int)"]
2449 [label="org.joda.time.tz.DateTimeZoneBuilder.setStandardOffset(int)"]
2451 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setStandardOffset(int)"]
3578 [label="org.joda.time.MutableInterval.setStart(org.joda.time.ReadableInstant)"]
3577 [label="org.joda.time.MutableInterval.setStartMillis(long)"]
3541 [label="org.joda.time.MutableDateTime.setTime(int,int,int,int)"]
50 [label="java.util.Calendar.setTime(java.util.Date)"]
3539 [label="org.joda.time.MutableDateTime.setTime(long)"]
3092 [label="java.util.Date.setTime(long)"]
3540 [label="org.joda.time.MutableDateTime.setTime(org.joda.time.ReadableInstant)"]
3208 [label="java.util.Calendar.setTimeInMillis(long)"]
2448 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setUpperLimit(int,org.joda.time.tz.DateTimeZoneBuilder$OfYear)"]
301 [label="org.joda.time.base.BasePartial.setValue(int,int)"]
3612 [label="org.joda.time.base.BasePeriod.setValue(int,int)"]
3611 [label="org.joda.time.MutablePeriod.setValue(int,int)"]
1296 [label="org.joda.time.ReadWritablePeriod.setValue(int,int)"]
304 [label="org.joda.time.base.BasePartial.setValues(int[])"]
345 [label="org.joda.time.base.BasePeriod.setValues(int[])"]
3519 [label="org.joda.time.MutableDateTime.setWeekOfWeekyear(int)"]
3646 [label="org.joda.time.MutablePeriod.setWeeks(int)"]
2262 [label="org.joda.time.ReadWritablePeriod.setWeeks(int)"]
3515 [label="org.joda.time.MutableDateTime.setWeekyear(int)"]
3513 [label="org.joda.time.MutableDateTime.setYear(int)"]
697 [label="org.joda.time.chrono.BasicChronology.setYear(long,int)"]
623 [label="org.joda.time.chrono.BasicFixedMonthChronology.setYear(long,int)"]
637 [label="org.joda.time.chrono.BasicGJChronology.setYear(long,int)"]
1035 [label="org.joda.time.chrono.IslamicChronology.setYear(long,int)"]
3642 [label="org.joda.time.MutablePeriod.setYears(int)"]
2260 [label="org.joda.time.ReadWritablePeriod.setYears(int)"]
1898 [label="org.joda.time.MutableDateTime.setZone(org.joda.time.DateTimeZone)"]
1888 [label="org.joda.time.ReadWritableInstant.setZone(org.joda.time.DateTimeZone)"]
1998 [label="org.joda.time.format.DateTimeParserBucket.setZone(org.joda.time.DateTimeZone)"]
1122 [label="org.joda.time.MutableDateTime.setZoneRetainFields(org.joda.time.DateTimeZone)"]
1799 [label="org.joda.time.format.DateTimeFormat.shortDate()"]
1802 [label="org.joda.time.format.DateTimeFormat.shortDateTime()"]
1801 [label="org.joda.time.format.DateTimeFormat.shortTime()"]
2534 [label="java.lang.Short.shortValue()"]
2477 [label="java.util.Collections.singleton(T)"]
193 [label="org.joda.time.base.AbstractPeriod.size()"]
166 [label="org.joda.time.ReadablePartial.size()"]
211 [label="org.joda.time.ReadablePeriod.size()"]
195 [label="org.joda.time.PeriodType.size()"]
3687 [label="org.joda.time.Partial.size()"]
1793 [label="java.util.HashMap.size()"]
2522 [label="java.util.Map.size()"]
855 [label="java.util.ArrayList.size()"]
2530 [label="java.util.TreeMap.size()"]
2162 [label="java.util.Set.size()"]
2012 [label="java.util.List.size()"]
2160 [label="java.util.Collection.size()"]
1243 [label="org.joda.time.convert.ConverterSet.size()"]
2086 [label="java.util.Arrays.sort(java.lang.Object[],int,int)"]
2083 [label="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)"]
327 [label="org.joda.time.PeriodType.standard()"]
215 [label="org.joda.time.format.ISOPeriodFormat.standard()"]
2916 [label="org.joda.time.Duration.standardDays(long)"]
2887 [label="org.joda.time.Days.standardDaysIn(org.joda.time.ReadablePeriod)"]
2917 [label="org.joda.time.Duration.standardHours(long)"]
2954 [label="org.joda.time.Hours.standardHoursIn(org.joda.time.ReadablePeriod)"]
2918 [label="org.joda.time.Duration.standardMinutes(long)"]
3374 [label="org.joda.time.Minutes.standardMinutesIn(org.joda.time.ReadablePeriod)"]
370 [label="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)"]
2919 [label="org.joda.time.Duration.standardSeconds(long)"]
3807 [label="org.joda.time.Seconds.standardSecondsIn(org.joda.time.ReadablePeriod)"]
3898 [label="org.joda.time.Weeks.standardWeeksIn(org.joda.time.ReadablePeriod)"]
1997 [label="java.lang.String.startsWith(java.lang.String)"]
2316 [label="java.util.List.subList(int,int)"]
543 [label="java.lang.String.substring(int)"]
1328 [label="java.lang.String.substring(int,int)"]
2639 [label="org.joda.time.DurationField.subtract(long,int)"]
2940 [label="org.joda.time.DurationField.subtract(long,long)"]
3892 [label="org.joda.time.format.ISODateTimeFormat.tTime()"]
2124 [label="org.joda.time.format.ISODateTimeFormat$Constants.tTime()"]
2125 [label="org.joda.time.format.ISODateTimeFormat$Constants.tTimeNoMillis()"]
2537 [label="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)"]
310 [label="org.joda.time.PeriodType.time()"]
3365 [label="org.joda.time.format.ISODateTimeFormat.time()"]
2122 [label="org.joda.time.format.ISODateTimeFormat$Constants.time()"]
2167 [label="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)"]
2147 [label="org.joda.time.format.ISODateTimeFormat$Constants.timeElementParser()"]
2123 [label="org.joda.time.format.ISODateTimeFormat$Constants.timeNoMillis()"]
3851 [label="org.joda.time.format.ISODateTimeFormat.timeParser()"]
2150 [label="org.joda.time.format.ISODateTimeFormat$Constants.timeParser()"]
2279 [label="java.util.ArrayList.toArray(T[])"]
2288 [label="java.util.List.toArray(T[])"]
44 [label="org.joda.time.base.AbstractDateTime.toCalendar(java.util.Locale)"]
49 [label="org.joda.time.base.AbstractInstant.toDate()"]
3090 [label="org.joda.time.LocalDate.toDate()"]
3200 [label="org.joda.time.LocalDateTime.toDate()"]
3203 [label="org.joda.time.LocalDateTime.toDate(java.util.TimeZone)"]
2607 [label="org.joda.time.DateTime.toDateMidnight()"]
3082 [label="org.joda.time.LocalDate.toDateMidnight()"]
4020 [label="org.joda.time.YearMonthDay.toDateMidnight()"]
3083 [label="org.joda.time.LocalDate.toDateMidnight(org.joda.time.DateTimeZone)"]
4021 [label="org.joda.time.YearMonthDay.toDateMidnight(org.joda.time.DateTimeZone)"]
88 [label="org.joda.time.base.AbstractInstant.toDateTime()"]
2999 [label="org.joda.time.Instant.toDateTime()"]
1117 [label="org.joda.time.ReadableDateTime.toDateTime()"]
3192 [label="org.joda.time.LocalDateTime.toDateTime()"]
96 [label="org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)"]
2711 [label="org.joda.time.DateTime.toDateTime(org.joda.time.Chronology)"]
93 [label="org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.DateTimeZone)"]
2710 [label="org.joda.time.DateTime.toDateTime(org.joda.time.DateTimeZone)"]
2874 [label="org.joda.time.LocalDateTime.toDateTime(org.joda.time.DateTimeZone)"]
3086 [label="org.joda.time.LocalDate.toDateTime(org.joda.time.LocalTime)"]
3087 [label="org.joda.time.LocalDate.toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone)"]
178 [label="org.joda.time.base.AbstractPartial.toDateTime(org.joda.time.ReadableInstant)"]
4022 [label="org.joda.time.YearMonthDay.toDateTime(org.joda.time.TimeOfDay)"]
4023 [label="org.joda.time.YearMonthDay.toDateTime(org.joda.time.TimeOfDay,org.joda.time.DateTimeZone)"]
3080 [label="org.joda.time.LocalDate.toDateTimeAtCurrentTime()"]
4018 [label="org.joda.time.YearMonthDay.toDateTimeAtCurrentTime()"]
3081 [label="org.joda.time.LocalDate.toDateTimeAtCurrentTime(org.joda.time.DateTimeZone)"]
4019 [label="org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(org.joda.time.DateTimeZone)"]
3078 [label="org.joda.time.LocalDate.toDateTimeAtMidnight()"]
4016 [label="org.joda.time.YearMonthDay.toDateTimeAtMidnight()"]
3079 [label="org.joda.time.LocalDate.toDateTimeAtMidnight(org.joda.time.DateTimeZone)"]
4017 [label="org.joda.time.YearMonthDay.toDateTimeAtMidnight(org.joda.time.DateTimeZone)"]
3077 [label="org.joda.time.LocalDate.toDateTimeAtStartOfDay()"]
2721 [label="org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)"]
90 [label="org.joda.time.base.AbstractInstant.toDateTimeISO()"]
3000 [label="org.joda.time.Instant.toDateTimeISO()"]
2709 [label="org.joda.time.DateTime.toDateTimeISO()"]
3881 [label="org.joda.time.TimeOfDay.toDateTimeToday()"]
3362 [label="org.joda.time.LocalTime.toDateTimeToday()"]
3882 [label="org.joda.time.TimeOfDay.toDateTimeToday(org.joda.time.DateTimeZone)"]
3363 [label="org.joda.time.LocalTime.toDateTimeToday(org.joda.time.DateTimeZone)"]
2455 [label="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)"]
61 [label="org.joda.time.base.AbstractDuration.toDuration()"]
149 [label="org.joda.time.base.AbstractInterval.toDuration()"]
339 [label="org.joda.time.base.BasePeriod.toDurationFrom(org.joda.time.ReadableInstant)"]
147 [label="org.joda.time.base.AbstractInterval.toDurationMillis()"]
1305 [label="org.joda.time.ReadableInterval.toDurationMillis()"]
341 [label="org.joda.time.base.BasePeriod.toDurationTo(org.joda.time.ReadableInstant)"]
1850 [label="org.joda.time.format.DateTimeFormatterBuilder.toFormatter()"]
2185 [label="org.joda.time.format.PeriodFormatterBuilder.toFormatter()"]
2296 [label="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)"]
51 [label="org.joda.time.base.AbstractDateTime.toGregorianCalendar()"]
86 [label="org.joda.time.base.AbstractInstant.toInstant()"]
849 [label="org.joda.time.ReadableInstant.toInstant()"]
143 [label="org.joda.time.base.AbstractInterval.toInterval()"]
3088 [label="org.joda.time.LocalDate.toInterval()"]
2647 [label="org.joda.time.DateMidnight.toInterval()"]
4024 [label="org.joda.time.YearMonthDay.toInterval()"]
3962 [label="org.joda.time.YearMonth.toInterval()"]
1397 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()"]
3089 [label="org.joda.time.LocalDate.toInterval(org.joda.time.DateTimeZone)"]
4025 [label="org.joda.time.YearMonthDay.toInterval(org.joda.time.DateTimeZone)"]
3963 [label="org.joda.time.YearMonth.toInterval(org.joda.time.DateTimeZone)"]
261 [label="org.joda.time.base.BaseDuration.toIntervalFrom(org.joda.time.ReadableInstant)"]
263 [label="org.joda.time.base.BaseDuration.toIntervalTo(org.joda.time.ReadableInstant)"]
2833 [label="org.joda.time.DateTimeUtils.toJulianDay(long)"]
2832 [label="org.joda.time.DateTimeUtils.toJulianDayNumber(long)"]
2720 [label="org.joda.time.DateTime.toLocalDate()"]
1892 [label="org.joda.time.LocalDateTime.toLocalDate()"]
2646 [label="org.joda.time.DateMidnight.toLocalDate()"]
4012 [label="org.joda.time.YearMonthDay.toLocalDate()"]
3437 [label="org.joda.time.MonthDay.toLocalDate(int)"]
3959 [label="org.joda.time.YearMonth.toLocalDate(int)"]
2754 [label="org.joda.time.DateTime.toLocalDateTime()"]
3084 [label="org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalTime)"]
2755 [label="org.joda.time.DateTime.toLocalTime()"]
1894 [label="org.joda.time.LocalDateTime.toLocalTime()"]
3876 [label="org.joda.time.TimeOfDay.toLocalTime()"]
2535 [label="java.lang.String.toLowerCase()"]
1907 [label="java.lang.Character.toLowerCase(char)"]
1964 [label="java.lang.String.toLowerCase(java.util.Locale)"]
97 [label="org.joda.time.base.AbstractInstant.toMutableDateTime()"]
3001 [label="org.joda.time.Instant.toMutableDateTime()"]
102 [label="org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.Chronology)"]
101 [label="org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.DateTimeZone)"]
99 [label="org.joda.time.base.AbstractInstant.toMutableDateTimeISO()"]
3002 [label="org.joda.time.Instant.toMutableDateTimeISO()"]
145 [label="org.joda.time.base.AbstractInterval.toMutableInterval()"]
208 [label="org.joda.time.base.AbstractPeriod.toMutablePeriod()"]
387 [label="org.joda.time.base.BaseSingleFieldPeriod.toMutablePeriod()"]
2031 [label="org.joda.time.format.DateTimeFormatterBuilder.toParser()"]
2298 [label="org.joda.time.format.PeriodFormatterBuilder.toParser()"]
1789 [label="java.text.SimpleDateFormat.toPattern()"]
64 [label="org.joda.time.base.AbstractDuration.toPeriod()"]
150 [label="org.joda.time.base.AbstractInterval.toPeriod()"]
206 [label="org.joda.time.base.AbstractPeriod.toPeriod()"]
385 [label="org.joda.time.base.BaseSingleFieldPeriod.toPeriod()"]
249 [label="org.joda.time.base.BaseDuration.toPeriod(org.joda.time.Chronology)"]
152 [label="org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.PeriodType)"]
246 [label="org.joda.time.base.BaseDuration.toPeriod(org.joda.time.PeriodType)"]
3636 [label="org.joda.time.ReadableInterval.toPeriod(org.joda.time.PeriodType)"]
251 [label="org.joda.time.base.BaseDuration.toPeriod(org.joda.time.PeriodType,org.joda.time.Chronology)"]
253 [label="org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.ReadableInstant)"]
255 [label="org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
257 [label="org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.ReadableInstant)"]
259 [label="org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
2030 [label="org.joda.time.format.DateTimeFormatterBuilder.toPrinter()"]
2297 [label="org.joda.time.format.PeriodFormatterBuilder.toPrinter()"]
2926 [label="org.joda.time.Duration.toStandardDays()"]
3769 [label="org.joda.time.Period.toStandardDays()"]
3903 [label="org.joda.time.Weeks.toStandardDays()"]
2961 [label="org.joda.time.Hours.toStandardDays()"]
3381 [label="org.joda.time.Minutes.toStandardDays()"]
3813 [label="org.joda.time.Seconds.toStandardDays()"]
3773 [label="org.joda.time.Period.toStandardDuration()"]
2901 [label="org.joda.time.Days.toStandardDuration()"]
3907 [label="org.joda.time.Weeks.toStandardDuration()"]
2964 [label="org.joda.time.Hours.toStandardDuration()"]
3384 [label="org.joda.time.Minutes.toStandardDuration()"]
3816 [label="org.joda.time.Seconds.toStandardDuration()"]
2927 [label="org.joda.time.Duration.toStandardHours()"]
3770 [label="org.joda.time.Period.toStandardHours()"]
2895 [label="org.joda.time.Days.toStandardHours()"]
3904 [label="org.joda.time.Weeks.toStandardHours()"]
3382 [label="org.joda.time.Minutes.toStandardHours()"]
3814 [label="org.joda.time.Seconds.toStandardHours()"]
2928 [label="org.joda.time.Duration.toStandardMinutes()"]
3771 [label="org.joda.time.Period.toStandardMinutes()"]
2897 [label="org.joda.time.Days.toStandardMinutes()"]
3905 [label="org.joda.time.Weeks.toStandardMinutes()"]
2962 [label="org.joda.time.Hours.toStandardMinutes()"]
3815 [label="org.joda.time.Seconds.toStandardMinutes()"]
2929 [label="org.joda.time.Duration.toStandardSeconds()"]
3772 [label="org.joda.time.Period.toStandardSeconds()"]
2899 [label="org.joda.time.Days.toStandardSeconds()"]
3906 [label="org.joda.time.Weeks.toStandardSeconds()"]
2963 [label="org.joda.time.Hours.toStandardSeconds()"]
3383 [label="org.joda.time.Minutes.toStandardSeconds()"]
3767 [label="org.joda.time.Period.toStandardWeeks()"]
2893 [label="org.joda.time.Days.toStandardWeeks()"]
2960 [label="org.joda.time.Hours.toStandardWeeks()"]
3380 [label="org.joda.time.Minutes.toStandardWeeks()"]
3812 [label="org.joda.time.Seconds.toStandardWeeks()"]
54 [label="org.joda.time.base.AbstractInstant.toString()"]
72 [label="org.joda.time.base.AbstractDuration.toString()"]
156 [label="org.joda.time.base.AbstractInterval.toString()"]
214 [label="org.joda.time.base.AbstractPeriod.toString()"]
190 [label="java.lang.Object.toString()"]
80 [label="java.lang.StringBuffer.toString()"]
548 [label="java.lang.StringBuilder.toString()"]
2809 [label="org.joda.time.DateTimeFieldType.toString()"]
1066 [label="org.joda.time.Chronology.toString()"]
2875 [label="org.joda.time.DateTimeZone.toString()"]
3563 [label="org.joda.time.MutableDateTime.toString()"]
3798 [label="org.joda.time.PeriodType.toString()"]
2946 [label="org.joda.time.DurationFieldType.toString()"]
1562 [label="org.joda.time.DurationField.toString()"]
3137 [label="org.joda.time.LocalDate.toString()"]
3278 [label="org.joda.time.LocalDateTime.toString()"]
4032 [label="org.joda.time.YearMonthDay.toString()"]
3891 [label="org.joda.time.TimeOfDay.toString()"]
3364 [label="org.joda.time.LocalTime.toString()"]
2801 [label="org.joda.time.DateTimeComparator.toString()"]
2864 [label="org.joda.time.DateTimeZone$1.toString()"]
2912 [label="org.joda.time.Days.toString()"]
3918 [label="org.joda.time.Weeks.toString()"]
2975 [label="org.joda.time.Hours.toString()"]
3395 [label="org.joda.time.Minutes.toString()"]
3827 [label="org.joda.time.Seconds.toString()"]
3445 [label="org.joda.time.MonthDay.toString()"]
3469 [label="org.joda.time.Months.toString()"]
3699 [label="org.joda.time.Partial.toString()"]
3969 [label="org.joda.time.YearMonth.toString()"]
4053 [label="org.joda.time.Years.toString()"]
1784 [label="java.util.Locale.toString()"]
998 [label="org.joda.time.chrono.ISOChronology.toString()"]
540 [label="org.joda.time.chrono.BasicChronology.toString()"]
742 [label="org.joda.time.chrono.BuddhistChronology.toString()"]
873 [label="org.joda.time.chrono.GJChronology.toString()"]
1134 [label="org.joda.time.chrono.LimitChronology.toString()"]
1218 [label="org.joda.time.chrono.ZonedChronology.toString()"]
1065 [label="org.joda.time.chrono.LenientChronology.toString()"]
1074 [label="org.joda.time.chrono.LimitChronology$LimitException.toString()"]
1144 [label="org.joda.time.chrono.StrictChronology.toString()"]
1745 [label="org.joda.time.field.UnsupportedDurationField.toString()"]
1451 [label="org.joda.time.field.BaseDateTimeField.toString()"]
1534 [label="org.joda.time.field.DelegatedDateTimeField.toString()"]
1462 [label="org.joda.time.field.BaseDurationField.toString()"]
1369 [label="org.joda.time.field.AbstractPartialFieldProperty.toString()"]
1403 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.toString()"]
1561 [label="org.joda.time.field.DelegatedDurationField.toString()"]
1269 [label="org.joda.time.convert.ConverterManager.toString()"]
1226 [label="org.joda.time.convert.AbstractConverter.toString()"]
2508 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()"]
1348 [label="java.lang.Integer.toString(int)"]
53 [label="org.joda.time.base.AbstractDateTime.toString(java.lang.String)"]
306 [label="org.joda.time.base.BasePartial.toString(java.lang.String)"]
3138 [label="org.joda.time.LocalDate.toString(java.lang.String)"]
3279 [label="org.joda.time.LocalDateTime.toString(java.lang.String)"]
3366 [label="org.joda.time.LocalTime.toString(java.lang.String)"]
3446 [label="org.joda.time.MonthDay.toString(java.lang.String)"]
3701 [label="org.joda.time.Partial.toString(java.lang.String)"]
3971 [label="org.joda.time.YearMonth.toString(java.lang.String)"]
57 [label="org.joda.time.base.AbstractDateTime.toString(java.lang.String,java.util.Locale)"]
307 [label="org.joda.time.base.BasePartial.toString(java.lang.String,java.util.Locale)"]
3139 [label="org.joda.time.LocalDate.toString(java.lang.String,java.util.Locale)"]
3280 [label="org.joda.time.LocalDateTime.toString(java.lang.String,java.util.Locale)"]
3367 [label="org.joda.time.LocalTime.toString(java.lang.String,java.util.Locale)"]
3447 [label="org.joda.time.MonthDay.toString(java.lang.String,java.util.Locale)"]
3702 [label="org.joda.time.Partial.toString(java.lang.String,java.util.Locale)"]
3972 [label="org.joda.time.YearMonth.toString(java.lang.String,java.util.Locale)"]
1975 [label="java.lang.Long.toString(long)"]
121 [label="org.joda.time.base.AbstractInstant.toString(org.joda.time.format.DateTimeFormatter)"]
189 [label="org.joda.time.base.AbstractPartial.toString(org.joda.time.format.DateTimeFormatter)"]
217 [label="org.joda.time.base.AbstractPeriod.toString(org.joda.time.format.PeriodFormatter)"]
3700 [label="org.joda.time.Partial.toStringList()"]
2752 [label="org.joda.time.DateTime.toTimeOfDay()"]
47 [label="org.joda.time.DateTimeZone.toTimeZone()"]
2469 [label="org.joda.time.tz.FixedDateTimeZone.toTimeZone()"]
1906 [label="java.lang.Character.toUpperCase(char)"]
1965 [label="java.lang.String.toUpperCase(java.util.Locale)"]
2751 [label="org.joda.time.DateTime.toYearMonthDay()"]
2644 [label="org.joda.time.DateMidnight.toYearMonthDay()"]
2554 [label="java.lang.String.trim()"]
2569 [label="org.joda.time.tz.ZoneInfoProvider.uncaughtException(java.lang.Exception)"]
2819 [label="java.util.Collections.unmodifiableMap(java.util.Map)"]
1731 [label="org.joda.time.field.UnsupportedDurationField.unsupported()"]
1685 [label="org.joda.time.field.UnsupportedDateTimeField.unsupported()"]
1147 [label="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)"]
296 [label="org.joda.time.Chronology.validate(org.joda.time.ReadablePartial,int[])"]
468 [label="org.joda.time.chrono.BaseChronology.validate(org.joda.time.ReadablePartial,int[])"]
378 [label="java.lang.String.valueOf(int)"]
471 [label="java.lang.Integer.valueOf(int)"]
2983 [label="java.lang.String.valueOf(java.lang.Object)"]
2538 [label="java.lang.Long.valueOf(long)"]
2527 [label="java.lang.Short.valueOf(short)"]
2532 [label="java.util.TreeMap.values()"]
2421 [label="org.joda.time.tz.ZoneInfoCompiler.verbose()"]
1582 [label="org.joda.time.field.FieldUtils.verifyValueBounds(java.lang.String,int,int,int)"]
655 [label="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)"]
530 [label="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)"]
2156 [label="org.joda.time.format.ISODateTimeFormat.weekDate()"]
2128 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekDateTime()"]
2129 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekDateTimeNoMillis()"]
2100 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekElement()"]
500 [label="org.joda.time.DateTimeFieldType.weekOfWeekyear()"]
23 [label="org.joda.time.Chronology.weekOfWeekyear()"]
2780 [label="org.joda.time.DateTime.weekOfWeekyear()"]
3550 [label="org.joda.time.MutableDateTime.weekOfWeekyear()"]
3133 [label="org.joda.time.LocalDate.weekOfWeekyear()"]
3269 [label="org.joda.time.LocalDateTime.weekOfWeekyear()"]
2666 [label="org.joda.time.DateMidnight.weekOfWeekyear()"]
455 [label="org.joda.time.chrono.BaseChronology.weekOfWeekyear()"]
688 [label="org.joda.time.chrono.AssembledChronology.weekOfWeekyear()"]
403 [label="org.joda.time.Chronology.weeks()"]
3785 [label="org.joda.time.PeriodType.weeks()"]
350 [label="org.joda.time.DurationFieldType.weeks()"]
435 [label="org.joda.time.chrono.BaseChronology.weeks()"]
702 [label="org.joda.time.chrono.AssembledChronology.weeks()"]
3710 [label="org.joda.time.Period.weeks(int)"]
2894 [label="org.joda.time.Weeks.weeks(int)"]
3895 [label="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3896 [label="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3897 [label="org.joda.time.Weeks.weeksIn(org.joda.time.ReadableInterval)"]
502 [label="org.joda.time.DateTimeFieldType.weekyear()"]
19 [label="org.joda.time.Chronology.weekyear()"]
2778 [label="org.joda.time.DateTime.weekyear()"]
3548 [label="org.joda.time.MutableDateTime.weekyear()"]
3131 [label="org.joda.time.LocalDate.weekyear()"]
3267 [label="org.joda.time.LocalDateTime.weekyear()"]
2664 [label="org.joda.time.DateMidnight.weekyear()"]
456 [label="org.joda.time.chrono.BaseChronology.weekyear()"]
708 [label="org.joda.time.chrono.AssembledChronology.weekyear()"]
2099 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekyearElement()"]
503 [label="org.joda.time.DateTimeFieldType.weekyearOfCentury()"]
414 [label="org.joda.time.Chronology.weekyearOfCentury()"]
457 [label="org.joda.time.chrono.BaseChronology.weekyearOfCentury()"]
894 [label="org.joda.time.chrono.AssembledChronology.weekyearOfCentury()"]
2111 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekyearWeek()"]
2112 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekyearWeekDay()"]
404 [label="org.joda.time.Chronology.weekyears()"]
501 [label="org.joda.time.DurationFieldType.weekyears()"]
436 [label="org.joda.time.chrono.BaseChronology.weekyears()"]
676 [label="org.joda.time.chrono.AssembledChronology.weekyears()"]
3685 [label="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)"]
2758 [label="org.joda.time.DateTime.withCenturyOfEra(int)"]
3116 [label="org.joda.time.LocalDate.withCenturyOfEra(int)"]
3247 [label="org.joda.time.LocalDateTime.withCenturyOfEra(int)"]
2649 [label="org.joda.time.DateMidnight.withCenturyOfEra(int)"]
2712 [label="org.joda.time.DateTime.withChronology(org.joda.time.Chronology)"]
3015 [label="org.joda.time.Interval.withChronology(org.joda.time.Chronology)"]
2618 [label="org.joda.time.DateMidnight.withChronology(org.joda.time.Chronology)"]
157 [label="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)"]
3999 [label="org.joda.time.YearMonthDay.withChronologyRetainFields(org.joda.time.Chronology)"]
3861 [label="org.joda.time.TimeOfDay.withChronologyRetainFields(org.joda.time.Chronology)"]
3427 [label="org.joda.time.MonthDay.withChronologyRetainFields(org.joda.time.Chronology)"]
3683 [label="org.joda.time.Partial.withChronologyRetainFields(org.joda.time.Chronology)"]
3949 [label="org.joda.time.YearMonth.withChronologyRetainFields(org.joda.time.Chronology)"]
2717 [label="org.joda.time.DateTime.withDate(int,int,int)"]
3209 [label="org.joda.time.LocalDateTime.withDate(int,int,int)"]
2766 [label="org.joda.time.DateTime.withDayOfMonth(int)"]
3124 [label="org.joda.time.LocalDate.withDayOfMonth(int)"]
3255 [label="org.joda.time.LocalDateTime.withDayOfMonth(int)"]
2657 [label="org.joda.time.DateMidnight.withDayOfMonth(int)"]
4028 [label="org.joda.time.YearMonthDay.withDayOfMonth(int)"]
3441 [label="org.joda.time.MonthDay.withDayOfMonth(int)"]
2767 [label="org.joda.time.DateTime.withDayOfWeek(int)"]
3125 [label="org.joda.time.LocalDate.withDayOfWeek(int)"]
3256 [label="org.joda.time.LocalDateTime.withDayOfWeek(int)"]
2658 [label="org.joda.time.DateMidnight.withDayOfWeek(int)"]
2765 [label="org.joda.time.DateTime.withDayOfYear(int)"]
3123 [label="org.joda.time.LocalDate.withDayOfYear(int)"]
3254 [label="org.joda.time.LocalDateTime.withDayOfYear(int)"]
2656 [label="org.joda.time.DateMidnight.withDayOfYear(int)"]
3741 [label="org.joda.time.Period.withDays(int)"]
3793 [label="org.joda.time.PeriodType.withDaysRemoved()"]
1863 [label="org.joda.time.format.DateTimeFormatter.withDefaultYear(int)"]
2931 [label="org.joda.time.Duration.withDurationAdded(long,int)"]
2992 [label="org.joda.time.Instant.withDurationAdded(long,int)"]
2725 [label="org.joda.time.DateTime.withDurationAdded(long,int)"]
2624 [label="org.joda.time.DateMidnight.withDurationAdded(long,int)"]
2932 [label="org.joda.time.Duration.withDurationAdded(org.joda.time.ReadableDuration,int)"]
2994 [label="org.joda.time.Instant.withDurationAdded(org.joda.time.ReadableDuration,int)"]
2726 [label="org.joda.time.DateTime.withDurationAdded(org.joda.time.ReadableDuration,int)"]
3214 [label="org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.ReadableDuration,int)"]
2626 [label="org.joda.time.DateMidnight.withDurationAdded(org.joda.time.ReadableDuration,int)"]
3020 [label="org.joda.time.Interval.withDurationAfterStart(org.joda.time.ReadableDuration)"]
3021 [label="org.joda.time.Interval.withDurationBeforeEnd(org.joda.time.ReadableDuration)"]
2714 [label="org.joda.time.DateTime.withEarlierOffsetAtOverlap()"]
3019 [label="org.joda.time.Interval.withEnd(org.joda.time.ReadableInstant)"]
3018 [label="org.joda.time.Interval.withEndMillis(long)"]
2757 [label="org.joda.time.DateTime.withEra(int)"]
3115 [label="org.joda.time.LocalDate.withEra(int)"]
3246 [label="org.joda.time.LocalDateTime.withEra(int)"]
2648 [label="org.joda.time.DateMidnight.withEra(int)"]
2723 [label="org.joda.time.DateTime.withField(org.joda.time.DateTimeFieldType,int)"]
3095 [label="org.joda.time.LocalDate.withField(org.joda.time.DateTimeFieldType,int)"]
3212 [label="org.joda.time.LocalDateTime.withField(org.joda.time.DateTimeFieldType,int)"]
2622 [label="org.joda.time.DateMidnight.withField(org.joda.time.DateTimeFieldType,int)"]
4000 [label="org.joda.time.YearMonthDay.withField(org.joda.time.DateTimeFieldType,int)"]
3862 [label="org.joda.time.TimeOfDay.withField(org.joda.time.DateTimeFieldType,int)"]
3333 [label="org.joda.time.LocalTime.withField(org.joda.time.DateTimeFieldType,int)"]
3428 [label="org.joda.time.MonthDay.withField(org.joda.time.DateTimeFieldType,int)"]
3688 [label="org.joda.time.Partial.withField(org.joda.time.DateTimeFieldType,int)"]
3950 [label="org.joda.time.YearMonth.withField(org.joda.time.DateTimeFieldType,int)"]
3735 [label="org.joda.time.Period.withField(org.joda.time.DurationFieldType,int)"]
3690 [label="org.joda.time.Partial.withFieldAddWrapped(org.joda.time.DurationFieldType,int)"]
3736 [label="org.joda.time.Period.withFieldAdded(org.joda.time.DurationFieldType,int)"]
2724 [label="org.joda.time.DateTime.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3096 [label="org.joda.time.LocalDate.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3213 [label="org.joda.time.LocalDateTime.withFieldAdded(org.joda.time.DurationFieldType,int)"]
2623 [label="org.joda.time.DateMidnight.withFieldAdded(org.joda.time.DurationFieldType,int)"]
4001 [label="org.joda.time.YearMonthDay.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3863 [label="org.joda.time.TimeOfDay.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3334 [label="org.joda.time.LocalTime.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3429 [label="org.joda.time.MonthDay.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3689 [label="org.joda.time.Partial.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3951 [label="org.joda.time.YearMonth.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3800 [label="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)"]
2722 [label="org.joda.time.DateTime.withFields(org.joda.time.ReadablePartial)"]
3094 [label="org.joda.time.LocalDate.withFields(org.joda.time.ReadablePartial)"]
3211 [label="org.joda.time.LocalDateTime.withFields(org.joda.time.ReadablePartial)"]
2621 [label="org.joda.time.DateMidnight.withFields(org.joda.time.ReadablePartial)"]
3332 [label="org.joda.time.LocalTime.withFields(org.joda.time.ReadablePartial)"]
386 [label="org.joda.time.Period.withFields(org.joda.time.ReadablePeriod)"]
2768 [label="org.joda.time.DateTime.withHourOfDay(int)"]
3257 [label="org.joda.time.LocalDateTime.withHourOfDay(int)"]
3883 [label="org.joda.time.TimeOfDay.withHourOfDay(int)"]
3352 [label="org.joda.time.LocalTime.withHourOfDay(int)"]
3742 [label="org.joda.time.Period.withHours(int)"]
3794 [label="org.joda.time.PeriodType.withHoursRemoved()"]
2716 [label="org.joda.time.DateTime.withLaterOffsetAtOverlap()"]
3032 [label="org.joda.time.LocalDate.withLocalMillis(long)"]
3148 [label="org.joda.time.LocalDateTime.withLocalMillis(long)"]
3287 [label="org.joda.time.LocalTime.withLocalMillis(long)"]
58 [label="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)"]
2209 [label="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)"]
2591 [label="org.joda.time.DateMidnight$Property.withMaximumValue()"]
2682 [label="org.joda.time.DateTime$Property.withMaximumValue()"]
3037 [label="org.joda.time.LocalDate$Property.withMaximumValue()"]
3154 [label="org.joda.time.LocalDateTime$Property.withMaximumValue()"]
3294 [label="org.joda.time.LocalTime$Property.withMaximumValue()"]
3671 [label="org.joda.time.Partial$Property.withMaximumValue()"]
3838 [label="org.joda.time.TimeOfDay$Property.withMaximumValue()"]
3982 [label="org.joda.time.YearMonthDay$Property.withMaximumValue()"]
3745 [label="org.joda.time.Period.withMillis(int)"]
2930 [label="org.joda.time.Duration.withMillis(long)"]
2991 [label="org.joda.time.Instant.withMillis(long)"]
2676 [label="org.joda.time.DateTime.withMillis(long)"]
2585 [label="org.joda.time.DateMidnight.withMillis(long)"]
2772 [label="org.joda.time.DateTime.withMillisOfDay(int)"]
3261 [label="org.joda.time.LocalDateTime.withMillisOfDay(int)"]
3356 [label="org.joda.time.LocalTime.withMillisOfDay(int)"]
2771 [label="org.joda.time.DateTime.withMillisOfSecond(int)"]
3260 [label="org.joda.time.LocalDateTime.withMillisOfSecond(int)"]
3886 [label="org.joda.time.TimeOfDay.withMillisOfSecond(int)"]
3355 [label="org.joda.time.LocalTime.withMillisOfSecond(int)"]
3797 [label="org.joda.time.PeriodType.withMillisRemoved()"]
2592 [label="org.joda.time.DateMidnight$Property.withMinimumValue()"]
2684 [label="org.joda.time.DateTime$Property.withMinimumValue()"]
3038 [label="org.joda.time.LocalDate$Property.withMinimumValue()"]
3155 [label="org.joda.time.LocalDateTime$Property.withMinimumValue()"]
3295 [label="org.joda.time.LocalTime$Property.withMinimumValue()"]
3672 [label="org.joda.time.Partial$Property.withMinimumValue()"]
3839 [label="org.joda.time.TimeOfDay$Property.withMinimumValue()"]
3983 [label="org.joda.time.YearMonthDay$Property.withMinimumValue()"]
2769 [label="org.joda.time.DateTime.withMinuteOfHour(int)"]
3258 [label="org.joda.time.LocalDateTime.withMinuteOfHour(int)"]
3884 [label="org.joda.time.TimeOfDay.withMinuteOfHour(int)"]
3353 [label="org.joda.time.LocalTime.withMinuteOfHour(int)"]
3743 [label="org.joda.time.Period.withMinutes(int)"]
3795 [label="org.joda.time.PeriodType.withMinutesRemoved()"]
2763 [label="org.joda.time.DateTime.withMonthOfYear(int)"]
3121 [label="org.joda.time.LocalDate.withMonthOfYear(int)"]
3252 [label="org.joda.time.LocalDateTime.withMonthOfYear(int)"]
2654 [label="org.joda.time.DateMidnight.withMonthOfYear(int)"]
4027 [label="org.joda.time.YearMonthDay.withMonthOfYear(int)"]
3440 [label="org.joda.time.MonthDay.withMonthOfYear(int)"]
3965 [label="org.joda.time.YearMonth.withMonthOfYear(int)"]
3739 [label="org.joda.time.Period.withMonths(int)"]
3791 [label="org.joda.time.PeriodType.withMonthsRemoved()"]
1857 [label="org.joda.time.format.DateTimeFormatter.withOffsetParsed()"]
1334 [label="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)"]
2727 [label="org.joda.time.DateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3097 [label="org.joda.time.LocalDate.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3215 [label="org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
2627 [label="org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
4002 [label="org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3864 [label="org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3335 [label="org.joda.time.LocalTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3430 [label="org.joda.time.MonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3691 [label="org.joda.time.Partial.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3952 [label="org.joda.time.YearMonth.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3022 [label="org.joda.time.Interval.withPeriodAfterStart(org.joda.time.ReadablePeriod)"]
3023 [label="org.joda.time.Interval.withPeriodBeforeEnd(org.joda.time.ReadablePeriod)"]
3733 [label="org.joda.time.Period.withPeriodType(org.joda.time.PeriodType)"]
1862 [label="org.joda.time.format.DateTimeFormatter.withPivotYear(int)"]
1860 [label="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)"]
2770 [label="org.joda.time.DateTime.withSecondOfMinute(int)"]
3259 [label="org.joda.time.LocalDateTime.withSecondOfMinute(int)"]
3885 [label="org.joda.time.TimeOfDay.withSecondOfMinute(int)"]
3354 [label="org.joda.time.LocalTime.withSecondOfMinute(int)"]
3744 [label="org.joda.time.Period.withSeconds(int)"]
3796 [label="org.joda.time.PeriodType.withSecondsRemoved()"]
3017 [label="org.joda.time.Interval.withStart(org.joda.time.ReadableInstant)"]
3016 [label="org.joda.time.Interval.withStartMillis(long)"]
2718 [label="org.joda.time.DateTime.withTime(int,int,int,int)"]
3210 [label="org.joda.time.LocalDateTime.withTime(int,int,int,int)"]
2719 [label="org.joda.time.DateTime.withTimeAtStartOfDay()"]
287 [label="org.joda.time.Chronology.withUTC()"]
867 [label="org.joda.time.chrono.GJChronology.withUTC()"]
1120 [label="org.joda.time.chrono.LimitChronology.withUTC()"]
1207 [label="org.joda.time.chrono.ZonedChronology.withUTC()"]
1058 [label="org.joda.time.chrono.LenientChronology.withUTC()"]
1137 [label="org.joda.time.chrono.StrictChronology.withUTC()"]
2764 [label="org.joda.time.DateTime.withWeekOfWeekyear(int)"]
3122 [label="org.joda.time.LocalDate.withWeekOfWeekyear(int)"]
3253 [label="org.joda.time.LocalDateTime.withWeekOfWeekyear(int)"]
2655 [label="org.joda.time.DateMidnight.withWeekOfWeekyear(int)"]
3740 [label="org.joda.time.Period.withWeeks(int)"]
3792 [label="org.joda.time.PeriodType.withWeeksRemoved()"]
2762 [label="org.joda.time.DateTime.withWeekyear(int)"]
3120 [label="org.joda.time.LocalDate.withWeekyear(int)"]
3251 [label="org.joda.time.LocalDateTime.withWeekyear(int)"]
2653 [label="org.joda.time.DateMidnight.withWeekyear(int)"]
2761 [label="org.joda.time.DateTime.withYear(int)"]
3119 [label="org.joda.time.LocalDate.withYear(int)"]
3250 [label="org.joda.time.LocalDateTime.withYear(int)"]
2652 [label="org.joda.time.DateMidnight.withYear(int)"]
4026 [label="org.joda.time.YearMonthDay.withYear(int)"]
3964 [label="org.joda.time.YearMonth.withYear(int)"]
2760 [label="org.joda.time.DateTime.withYearOfCentury(int)"]
3118 [label="org.joda.time.LocalDate.withYearOfCentury(int)"]
3249 [label="org.joda.time.LocalDateTime.withYearOfCentury(int)"]
2651 [label="org.joda.time.DateMidnight.withYearOfCentury(int)"]
2759 [label="org.joda.time.DateTime.withYearOfEra(int)"]
3117 [label="org.joda.time.LocalDate.withYearOfEra(int)"]
3248 [label="org.joda.time.LocalDateTime.withYearOfEra(int)"]
2650 [label="org.joda.time.DateMidnight.withYearOfEra(int)"]
3737 [label="org.joda.time.Period.withYears(int)"]
3790 [label="org.joda.time.PeriodType.withYearsRemoved()"]
95 [label="org.joda.time.Chronology.withZone(org.joda.time.DateTimeZone)"]
1896 [label="org.joda.time.DateTime.withZone(org.joda.time.DateTimeZone)"]
1859 [label="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)"]
997 [label="org.joda.time.chrono.ISOChronology.withZone(org.joda.time.DateTimeZone)"]
739 [label="org.joda.time.chrono.BuddhistChronology.withZone(org.joda.time.DateTimeZone)"]
868 [label="org.joda.time.chrono.GJChronology.withZone(org.joda.time.DateTimeZone)"]
1121 [label="org.joda.time.chrono.LimitChronology.withZone(org.joda.time.DateTimeZone)"]
755 [label="org.joda.time.chrono.CopticChronology.withZone(org.joda.time.DateTimeZone)"]
1208 [label="org.joda.time.chrono.ZonedChronology.withZone(org.joda.time.DateTimeZone)"]
765 [label="org.joda.time.chrono.EthiopicChronology.withZone(org.joda.time.DateTimeZone)"]
984 [label="org.joda.time.chrono.GregorianChronology.withZone(org.joda.time.DateTimeZone)"]
1051 [label="org.joda.time.chrono.JulianChronology.withZone(org.joda.time.DateTimeZone)"]
1028 [label="org.joda.time.chrono.IslamicChronology.withZone(org.joda.time.DateTimeZone)"]
1059 [label="org.joda.time.chrono.LenientChronology.withZone(org.joda.time.DateTimeZone)"]
1138 [label="org.joda.time.chrono.StrictChronology.withZone(org.joda.time.DateTimeZone)"]
2713 [label="org.joda.time.DateTime.withZoneRetainFields(org.joda.time.DateTimeZone)"]
2619 [label="org.joda.time.DateMidnight.withZoneRetainFields(org.joda.time.DateTimeZone)"]
1858 [label="org.joda.time.format.DateTimeFormatter.withZoneUTC()"]
3686 [label="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)"]
2199 [label="org.joda.time.format.PeriodFormat.wordBased()"]
2198 [label="org.joda.time.format.PeriodFormat.wordBased(java.util.Locale)"]
1902 [label="java.io.Writer.write(int)"]
1912 [label="java.io.Writer.write(java.lang.String)"]
2357 [label="java.io.DataOutput.writeBoolean(boolean)"]
2356 [label="java.io.DataOutput.writeByte(int)"]
2438 [label="java.io.DataOutput.writeInt(int)"]
2443 [label="java.io.DataOutput.writeLong(long)"]
2358 [label="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)"]
3471 [label="org.joda.time.MutableDateTime$Property.writeObject(java.io.ObjectOutputStream)"]
2580 [label="org.joda.time.DateMidnight$Property.writeObject(java.io.ObjectOutputStream)"]
2671 [label="org.joda.time.DateTime$Property.writeObject(java.io.ObjectOutputStream)"]
2836 [label="org.joda.time.DateTimeZone$Stub.writeObject(java.io.ObjectOutputStream)"]
3026 [label="org.joda.time.LocalDate$Property.writeObject(java.io.ObjectOutputStream)"]
3141 [label="org.joda.time.LocalDateTime$Property.writeObject(java.io.ObjectOutputStream)"]
3282 [label="org.joda.time.LocalTime$Property.writeObject(java.io.ObjectOutputStream)"]
990 [label="org.joda.time.chrono.ISOChronology$Stub.writeObject(java.io.ObjectOutputStream)"]
991 [label="java.io.ObjectOutputStream.writeObject(java.lang.Object)"]
1934 [label="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)"]
2091 [label="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,long,int)"]
2876 [label="org.joda.time.DateTimeZone.writeReplace()"]
1004 [label="org.joda.time.chrono.ISOChronology.writeReplace()"]
2437 [label="java.io.DataOutput.writeShort(int)"]
2531 [label="java.io.DataOutputStream.writeShort(int)"]
2355 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.writeTo(java.io.DataOutput)"]
2366 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.writeTo(java.io.DataOutput)"]
2407 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.writeTo(java.io.DataOutput)"]
2434 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.writeTo(java.io.DataOutput)"]
2460 [label="org.joda.time.tz.DateTimeZoneBuilder.writeTo(java.lang.String,java.io.DataOutput)"]
2459 [label="org.joda.time.tz.DateTimeZoneBuilder.writeTo(java.lang.String,java.io.OutputStream)"]
2837 [label="java.io.ObjectOutputStream.writeUTF(java.lang.String)"]
2367 [label="java.io.DataOutput.writeUTF(java.lang.String)"]
2533 [label="java.io.DataOutputStream.writeUTF(java.lang.String)"]
1926 [label="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)"]
2092 [label="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,long)"]
2521 [label="org.joda.time.tz.ZoneInfoCompiler.writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)"]
505 [label="org.joda.time.DateTimeFieldType.year()"]
17 [label="org.joda.time.Chronology.year()"]
2777 [label="org.joda.time.DateTime.year()"]
3547 [label="org.joda.time.MutableDateTime.year()"]
3130 [label="org.joda.time.LocalDate.year()"]
3266 [label="org.joda.time.LocalDateTime.year()"]
2663 [label="org.joda.time.DateMidnight.year()"]
4029 [label="org.joda.time.YearMonthDay.year()"]
3967 [label="org.joda.time.YearMonth.year()"]
459 [label="org.joda.time.chrono.BaseChronology.year()"]
725 [label="org.joda.time.chrono.AssembledChronology.year()"]
3782 [label="org.joda.time.PeriodType.yearDay()"]
3781 [label="org.joda.time.PeriodType.yearDayTime()"]
2096 [label="org.joda.time.format.ISODateTimeFormat$Constants.yearElement()"]
3970 [label="org.joda.time.format.ISODateTimeFormat.yearMonth()"]
2109 [label="org.joda.time.format.ISODateTimeFormat$Constants.yearMonth()"]
2418 [label="org.joda.time.PeriodType.yearMonthDay()"]
2172 [label="org.joda.time.format.ISODateTimeFormat.yearMonthDay()"]
2110 [label="org.joda.time.format.ISODateTimeFormat$Constants.yearMonthDay()"]
3778 [label="org.joda.time.PeriodType.yearMonthDayTime()"]
507 [label="org.joda.time.DateTimeFieldType.yearOfCentury()"]
15 [label="org.joda.time.Chronology.yearOfCentury()"]
2775 [label="org.joda.time.DateTime.yearOfCentury()"]
3545 [label="org.joda.time.MutableDateTime.yearOfCentury()"]
3128 [label="org.joda.time.LocalDate.yearOfCentury()"]
3264 [label="org.joda.time.LocalDateTime.yearOfCentury()"]
2661 [label="org.joda.time.DateMidnight.yearOfCentury()"]
461 [label="org.joda.time.chrono.BaseChronology.yearOfCentury()"]
893 [label="org.joda.time.chrono.AssembledChronology.yearOfCentury()"]
506 [label="org.joda.time.DateTimeFieldType.yearOfEra()"]
13 [label="org.joda.time.Chronology.yearOfEra()"]
2776 [label="org.joda.time.DateTime.yearOfEra()"]
3546 [label="org.joda.time.MutableDateTime.yearOfEra()"]
3129 [label="org.joda.time.LocalDate.yearOfEra()"]
3265 [label="org.joda.time.LocalDateTime.yearOfEra()"]
2662 [label="org.joda.time.DateMidnight.yearOfEra()"]
460 [label="org.joda.time.chrono.BaseChronology.yearOfEra()"]
891 [label="org.joda.time.chrono.AssembledChronology.yearOfEra()"]
3780 [label="org.joda.time.PeriodType.yearWeekDay()"]
3779 [label="org.joda.time.PeriodType.yearWeekDayTime()"]
406 [label="org.joda.time.Chronology.years()"]
3784 [label="org.joda.time.PeriodType.years()"]
348 [label="org.joda.time.DurationFieldType.years()"]
438 [label="org.joda.time.chrono.BaseChronology.years()"]
613 [label="org.joda.time.chrono.AssembledChronology.years()"]
3707 [label="org.joda.time.Period.years(int)"]
4035 [label="org.joda.time.Years.years(int)"]
4036 [label="org.joda.time.Years.yearsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
4037 [label="org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
4038 [label="org.joda.time.Years.yearsIn(org.joda.time.ReadableInterval)"]
0 -> 1
1 -> 60
2 -> 3
2 -> 4
2 -> 5
2 -> 6
2 -> 7
8 -> 4
8 -> 6
8 -> 7
8 -> 9
10 -> 4
10 -> 6
10 -> 7
10 -> 11
12 -> 4
12 -> 6
12 -> 7
12 -> 13
14 -> 4
14 -> 6
14 -> 7
14 -> 15
16 -> 4
16 -> 6
16 -> 7
16 -> 17
18 -> 4
18 -> 6
18 -> 7
18 -> 19
20 -> 4
20 -> 6
20 -> 7
20 -> 21
22 -> 4
22 -> 6
22 -> 7
22 -> 23
24 -> 4
24 -> 6
24 -> 7
24 -> 25
26 -> 4
26 -> 6
26 -> 7
26 -> 27
28 -> 4
28 -> 6
28 -> 7
28 -> 29
30 -> 4
30 -> 6
30 -> 7
30 -> 31
32 -> 4
32 -> 6
32 -> 7
32 -> 33
34 -> 4
34 -> 6
34 -> 7
34 -> 35
36 -> 4
36 -> 6
36 -> 7
36 -> 37
38 -> 4
38 -> 6
38 -> 7
38 -> 39
40 -> 4
40 -> 6
40 -> 7
40 -> 41
42 -> 4
42 -> 6
42 -> 7
42 -> 43
44 -> 45
44 -> 46
44 -> 47
44 -> 48
44 -> 49
44 -> 50
46 -> 4
46 -> 81
47 -> 2470
49 -> 6
49 -> 103
51 -> 46
51 -> 47
51 -> 49
51 -> 50
51 -> 52
53 -> 54
53 -> 55
53 -> 56
54 -> 56
54 -> 120
55 -> 1795
56 -> 80
56 -> 158
56 -> 1864
56 -> 1874
56 -> 1877
57 -> 54
57 -> 55
57 -> 56
57 -> 58
58 -> 1854
58 -> 1855
58 -> 1856
59 -> 60
61 -> 62
61 -> 63
63 -> 240
64 -> 62
64 -> 65
65 -> 326
66 -> 62
67 -> 66
68 -> 66
69 -> 66
70 -> 62
71 -> 62
72 -> 62
72 -> 73
72 -> 74
72 -> 75
72 -> 76
72 -> 77
72 -> 78
72 -> 79
72 -> 80
75 -> 74
75 -> 1924
75 -> 1975
82 -> 3
82 -> 4
82 -> 5
82 -> 6
82 -> 7
83 -> 4
83 -> 5
83 -> 84
85 -> 3
85 -> 6
85 -> 7
86 -> 6
86 -> 87
87 -> 1
88 -> 6
88 -> 46
88 -> 89
89 -> 224
90 -> 6
90 -> 46
90 -> 91
90 -> 92
91 -> 419
91 -> 730
91 -> 731
91 -> 736
91 -> 753
91 -> 925
91 -> 996
92 -> 220
93 -> 4
93 -> 6
93 -> 92
93 -> 94
93 -> 95
94 -> 219
96 -> 6
96 -> 92
97 -> 6
97 -> 46
97 -> 98
98 -> 224
99 -> 6
99 -> 46
99 -> 91
99 -> 100
100 -> 220
101 -> 4
101 -> 6
101 -> 94
101 -> 95
101 -> 100
102 -> 6
102 -> 100
104 -> 4
104 -> 6
104 -> 105
105 -> 647
106 -> 4
106 -> 6
106 -> 107
108 -> 6
109 -> 6
110 -> 109
110 -> 111
111 -> 2821
112 -> 109
112 -> 113
113 -> 6
113 -> 111
114 -> 6
115 -> 111
115 -> 114
116 -> 113
116 -> 114
117 -> 6
118 -> 111
118 -> 117
119 -> 113
119 -> 117
121 -> 54
121 -> 56
122 -> 60
123 -> 3
124 -> 92
124 -> 125
124 -> 126
127 -> 92
127 -> 126
127 -> 128
129 -> 125
129 -> 128
130 -> 111
130 -> 129
131 -> 6
131 -> 129
131 -> 130
132 -> 125
132 -> 128
132 -> 130
133 -> 111
133 -> 125
133 -> 128
134 -> 125
134 -> 128
135 -> 128
136 -> 111
136 -> 135
137 -> 6
137 -> 135
137 -> 136
138 -> 125
138 -> 135
138 -> 136
139 -> 125
140 -> 111
140 -> 139
141 -> 6
141 -> 139
141 -> 140
142 -> 111
142 -> 125
142 -> 128
143 -> 125
143 -> 126
143 -> 128
143 -> 144
144 -> 265
145 -> 125
145 -> 126
145 -> 128
145 -> 146
146 -> 265
147 -> 125
147 -> 128
147 -> 148
148 -> 1043
149 -> 63
149 -> 147
150 -> 125
150 -> 126
150 -> 128
150 -> 151
151 -> 315
152 -> 125
152 -> 126
152 -> 128
152 -> 153
153 -> 315
154 -> 105
154 -> 125
154 -> 126
154 -> 128
155 -> 107
155 -> 125
155 -> 126
155 -> 128
156 -> 79
156 -> 80
156 -> 120
156 -> 125
156 -> 126
156 -> 128
156 -> 157
156 -> 158
156 -> 159
157 -> 1854
159 -> 1865
160 -> 60
161 -> 162
161 -> 163
161 -> 164
165 -> 161
165 -> 166
167 -> 162
167 -> 163
168 -> 166
168 -> 167
169 -> 166
169 -> 170
171 -> 170
171 -> 172
172 -> 3
172 -> 174
173 -> 174
174 -> 161
174 -> 166
175 -> 161
175 -> 166
175 -> 176
177 -> 3
177 -> 175
178 -> 92
178 -> 113
178 -> 179
178 -> 180
179 -> 4
179 -> 219
181 -> 105
181 -> 161
181 -> 162
181 -> 166
181 -> 170
181 -> 182
183 -> 107
183 -> 161
183 -> 162
183 -> 166
183 -> 170
184 -> 161
184 -> 166
184 -> 170
184 -> 182
184 -> 185
186 -> 3
186 -> 184
187 -> 3
187 -> 184
188 -> 3
188 -> 184
189 -> 190
189 -> 191
191 -> 80
191 -> 158
191 -> 1873
191 -> 1874
191 -> 1877
192 -> 60
193 -> 194
193 -> 195
196 -> 194
196 -> 197
198 -> 193
198 -> 196
199 -> 193
199 -> 200
201 -> 200
201 -> 202
202 -> 194
202 -> 205
203 -> 194
203 -> 204
204 -> 205
205 -> 195
206 -> 207
207 -> 332
208 -> 209
209 -> 332
210 -> 193
210 -> 196
210 -> 200
210 -> 211
210 -> 212
213 -> 107
213 -> 193
213 -> 196
213 -> 200
214 -> 215
214 -> 216
215 -> 2174
215 -> 2175
215 -> 2176
215 -> 2177
215 -> 2178
215 -> 2179
215 -> 2180
215 -> 2181
215 -> 2182
215 -> 2183
215 -> 2184
215 -> 2185
216 -> 80
216 -> 158
216 -> 2212
216 -> 2213
216 -> 2214
216 -> 2215
216 -> 2218
217 -> 214
217 -> 216
218 -> 111
218 -> 219
218 -> 220
219 -> 91
219 -> 730
220 -> 0
220 -> 225
220 -> 226
221 -> 91
221 -> 111
221 -> 220
222 -> 111
222 -> 220
223 -> 219
223 -> 220
224 -> 91
224 -> 220
225 -> 94
227 -> 0
227 -> 225
227 -> 226
227 -> 228
227 -> 229
227 -> 230
227 -> 231
228 -> 1239
229 -> 3
229 -> 320
229 -> 537
229 -> 1241
232 -> 0
232 -> 225
232 -> 226
232 -> 228
232 -> 229
232 -> 231
232 -> 233
234 -> 219
234 -> 235
235 -> 0
235 -> 225
235 -> 226
235 -> 237
236 -> 91
236 -> 235
238 -> 226
239 -> 225
240 -> 59
241 -> 59
241 -> 148
242 -> 59
242 -> 113
242 -> 148
243 -> 59
243 -> 228
243 -> 244
243 -> 245
244 -> 3
244 -> 320
244 -> 537
244 -> 1241
246 -> 247
246 -> 248
248 -> 330
249 -> 247
249 -> 250
250 -> 330
251 -> 247
251 -> 252
252 -> 330
253 -> 254
254 -> 323
255 -> 256
256 -> 323
257 -> 258
258 -> 324
259 -> 260
260 -> 324
261 -> 262
262 -> 267
263 -> 264
264 -> 269
265 -> 94
265 -> 122
265 -> 123
266 -> 111
266 -> 113
266 -> 122
266 -> 123
266 -> 179
266 -> 219
267 -> 113
267 -> 122
267 -> 123
267 -> 148
267 -> 179
267 -> 268
268 -> 62
269 -> 113
269 -> 122
269 -> 123
269 -> 148
269 -> 179
269 -> 268
270 -> 113
270 -> 122
270 -> 123
270 -> 179
270 -> 271
272 -> 113
272 -> 122
272 -> 123
272 -> 179
272 -> 271
273 -> 122
273 -> 123
273 -> 125
273 -> 126
273 -> 128
273 -> 228
273 -> 274
273 -> 275
273 -> 276
273 -> 277
273 -> 278
273 -> 279
273 -> 280
274 -> 3
274 -> 320
274 -> 537
274 -> 1241
277 -> 265
281 -> 94
281 -> 123
282 -> 160
283 -> 111
283 -> 284
284 -> 94
284 -> 160
284 -> 287
284 -> 288
285 -> 111
285 -> 284
286 -> 284
289 -> 94
289 -> 160
289 -> 228
289 -> 287
289 -> 290
289 -> 291
289 -> 292
290 -> 3
290 -> 320
290 -> 537
290 -> 1241
293 -> 94
293 -> 160
293 -> 228
293 -> 287
293 -> 290
293 -> 291
293 -> 294
295 -> 94
295 -> 160
295 -> 287
295 -> 296
297 -> 160
298 -> 160
298 -> 287
299 -> 300
301 -> 167
301 -> 302
301 -> 303
304 -> 296
304 -> 303
304 -> 305
306 -> 55
306 -> 190
306 -> 191
307 -> 55
307 -> 58
307 -> 190
307 -> 191
308 -> 192
309 -> 310
310 -> 352
310 -> 353
310 -> 354
310 -> 355
310 -> 3777
311 -> 308
312 -> 192
312 -> 313
312 -> 314
313 -> 338
314 -> 193
314 -> 342
314 -> 348
314 -> 349
314 -> 350
314 -> 351
314 -> 352
314 -> 353
314 -> 354
314 -> 355
315 -> 94
315 -> 192
315 -> 313
315 -> 316
317 -> 113
317 -> 192
317 -> 193
317 -> 313
317 -> 316
317 -> 318
318 -> 4
318 -> 219
319 -> 3
319 -> 94
319 -> 162
319 -> 166
319 -> 180
319 -> 182
319 -> 192
319 -> 287
319 -> 313
319 -> 316
319 -> 320
319 -> 321
319 -> 322
322 -> 3
322 -> 166
322 -> 469
322 -> 554
322 -> 771
322 -> 836
323 -> 113
323 -> 148
323 -> 179
323 -> 192
323 -> 268
323 -> 313
323 -> 316
324 -> 113
324 -> 179
324 -> 192
324 -> 268
324 -> 313
324 -> 316
324 -> 325
325 -> 1043
326 -> 192
326 -> 303
326 -> 327
326 -> 328
326 -> 329
327 -> 348
327 -> 349
327 -> 350
327 -> 351
327 -> 352
327 -> 353
327 -> 354
327 -> 355
327 -> 3777
329 -> 211
329 -> 212
329 -> 367
329 -> 368
329 -> 371
329 -> 479
330 -> 94
330 -> 192
330 -> 313
330 -> 331
332 -> 94
332 -> 192
332 -> 193
332 -> 199
332 -> 228
332 -> 313
332 -> 333
332 -> 334
332 -> 335
332 -> 336
333 -> 3
333 -> 320
333 -> 537
333 -> 1241
336 -> 332
337 -> 192
338 -> 327
339 -> 113
339 -> 179
339 -> 271
339 -> 340
340 -> 241
341 -> 113
341 -> 179
341 -> 271
341 -> 340
342 -> 3
342 -> 202
342 -> 343
344 -> 193
344 -> 345
344 -> 346
345 -> 303
346 -> 193
346 -> 200
346 -> 211
346 -> 212
346 -> 342
346 -> 345
347 -> 314
347 -> 345
356 -> 357
357 -> 3
357 -> 202
358 -> 359
359 -> 3
359 -> 202
359 -> 360
360 -> 1043
361 -> 199
361 -> 345
361 -> 362
362 -> 200
362 -> 211
362 -> 212
362 -> 342
363 -> 199
363 -> 345
363 -> 364
364 -> 3
364 -> 200
364 -> 202
364 -> 211
364 -> 212
364 -> 343
364 -> 360
364 -> 365
366 -> 3
366 -> 6
366 -> 179
366 -> 367
366 -> 368
369 -> 3
369 -> 94
369 -> 162
369 -> 166
369 -> 180
369 -> 182
369 -> 287
369 -> 316
369 -> 322
370 -> 3
370 -> 148
370 -> 200
370 -> 211
370 -> 212
370 -> 328
370 -> 367
370 -> 371
370 -> 372
370 -> 373
370 -> 374
370 -> 375
374 -> 1043
375 -> 1043
376 -> 60
377 -> 378
377 -> 379
377 -> 380
381 -> 378
381 -> 379
381 -> 382
383 -> 380
383 -> 382
384 -> 380
385 -> 386
386 -> 199
386 -> 362
386 -> 3635
386 -> 3708
387 -> 388
387 -> 389
388 -> 330
389 -> 363
390 -> 194
390 -> 200
390 -> 382
390 -> 391
392 -> 107
392 -> 380
392 -> 382
393 -> 185
393 -> 320
393 -> 382
394 -> 60
395 -> 9
395 -> 11
395 -> 13
395 -> 15
395 -> 17
395 -> 19
395 -> 21
395 -> 23
395 -> 25
395 -> 27
395 -> 29
395 -> 31
395 -> 33
395 -> 35
395 -> 37
395 -> 39
395 -> 41
395 -> 43
395 -> 396
395 -> 397
395 -> 398
395 -> 399
395 -> 400
395 -> 401
395 -> 402
395 -> 403
395 -> 404
395 -> 405
395 -> 406
395 -> 407
395 -> 408
395 -> 409
395 -> 410
395 -> 411
395 -> 412
395 -> 413
395 -> 414
397 -> 415
409 -> 84
416 -> 417
416 -> 418
417 -> 466
418 -> 17
418 -> 21
418 -> 27
418 -> 31
418 -> 35
418 -> 39
418 -> 41
418 -> 43
418 -> 394
418 -> 395
418 -> 428
418 -> 429
418 -> 430
418 -> 431
418 -> 432
418 -> 433
418 -> 434
418 -> 435
418 -> 436
418 -> 437
418 -> 438
418 -> 439
418 -> 440
418 -> 441
418 -> 442
418 -> 443
418 -> 444
418 -> 445
418 -> 446
418 -> 447
418 -> 448
418 -> 449
418 -> 450
418 -> 451
418 -> 452
418 -> 453
418 -> 454
418 -> 455
418 -> 456
418 -> 457
418 -> 458
418 -> 459
418 -> 460
418 -> 461
418 -> 462
418 -> 463
419 -> 81
420 -> 421
420 -> 422
422 -> 442
422 -> 453
422 -> 458
422 -> 459
422 -> 467
423 -> 237
423 -> 424
424 -> 441
424 -> 443
424 -> 445
424 -> 447
424 -> 453
424 -> 458
424 -> 459
424 -> 467
425 -> 426
425 -> 427
427 -> 441
427 -> 443
427 -> 445
427 -> 447
427 -> 467
429 -> 355
429 -> 483
430 -> 354
430 -> 483
431 -> 353
431 -> 483
432 -> 352
432 -> 483
433 -> 483
433 -> 493
434 -> 351
434 -> 483
435 -> 350
435 -> 483
436 -> 483
436 -> 501
437 -> 349
437 -> 483
438 -> 348
438 -> 483
439 -> 483
439 -> 508
440 -> 483
440 -> 510
441 -> 429
441 -> 484
441 -> 485
442 -> 429
442 -> 485
442 -> 486
443 -> 430
443 -> 485
443 -> 487
444 -> 430
444 -> 485
444 -> 488
445 -> 431
445 -> 485
445 -> 489
446 -> 431
446 -> 485
446 -> 490
447 -> 432
447 -> 485
447 -> 491
448 -> 432
448 -> 485
448 -> 492
449 -> 432
449 -> 485
449 -> 494
450 -> 432
450 -> 485
450 -> 495
451 -> 433
451 -> 485
451 -> 496
452 -> 434
452 -> 485
452 -> 497
453 -> 434
453 -> 485
453 -> 498
454 -> 434
454 -> 485
454 -> 499
455 -> 435
455 -> 485
455 -> 500
456 -> 436
456 -> 485
456 -> 502
457 -> 436
457 -> 485
457 -> 503
458 -> 437
458 -> 485
458 -> 504
459 -> 438
459 -> 485
459 -> 505
460 -> 438
460 -> 485
460 -> 506
461 -> 438
461 -> 485
461 -> 507
462 -> 439
462 -> 485
462 -> 509
463 -> 440
463 -> 485
463 -> 511
464 -> 418
464 -> 465
466 -> 60
468 -> 164
468 -> 166
468 -> 469
468 -> 470
468 -> 471
468 -> 472
468 -> 473
468 -> 474
468 -> 475
472 -> 3
472 -> 1069
472 -> 1406
472 -> 2976
476 -> 5
476 -> 7
476 -> 166
476 -> 182
477 -> 5
477 -> 166
477 -> 170
477 -> 182
477 -> 467
478 -> 211
478 -> 212
478 -> 367
478 -> 368
478 -> 479
480 -> 200
480 -> 211
480 -> 212
480 -> 367
480 -> 481
482 -> 148
482 -> 374
483 -> 1130
483 -> 1131
483 -> 1680
483 -> 1728
485 -> 1130
485 -> 1131
485 -> 1680
485 -> 1681
485 -> 1682
512 -> 496
512 -> 513
513 -> 3
513 -> 371
513 -> 373
513 -> 596
513 -> 1629
514 -> 515
514 -> 516
515 -> 45
515 -> 925
515 -> 926
515 -> 927
515 -> 928
515 -> 929
517 -> 515
517 -> 518
517 -> 519
518 -> 496
518 -> 670
518 -> 950
519 -> 655
519 -> 1630
519 -> 1632
519 -> 1633
520 -> 515
520 -> 521
522 -> 60
523 -> 350
523 -> 351
523 -> 352
523 -> 353
523 -> 354
523 -> 484
523 -> 486
523 -> 487
523 -> 488
523 -> 489
523 -> 490
523 -> 491
523 -> 492
523 -> 493
523 -> 494
523 -> 495
523 -> 512
523 -> 513
523 -> 524
523 -> 525
524 -> 1146
525 -> 3
525 -> 470
525 -> 960
526 -> 3
526 -> 416
527 -> 81
527 -> 528
529 -> 421
529 -> 486
529 -> 528
529 -> 530
529 -> 531
530 -> 471
530 -> 472
531 -> 498
531 -> 504
531 -> 505
531 -> 530
531 -> 574
531 -> 589
531 -> 591
531 -> 592
531 -> 593
532 -> 237
532 -> 484
532 -> 487
532 -> 489
532 -> 491
532 -> 528
532 -> 530
532 -> 531
533 -> 320
533 -> 527
533 -> 534
533 -> 535
536 -> 320
536 -> 527
536 -> 534
536 -> 537
536 -> 538
536 -> 539
539 -> 538
539 -> 546
540 -> 320
540 -> 527
540 -> 534
540 -> 537
540 -> 541
540 -> 542
540 -> 543
540 -> 544
540 -> 545
540 -> 546
540 -> 547
540 -> 548
549 -> 503
549 -> 507
549 -> 509
549 -> 550
549 -> 551
549 -> 552
549 -> 553
549 -> 554
549 -> 555
549 -> 556
549 -> 557
549 -> 558
549 -> 559
549 -> 560
549 -> 561
549 -> 562
549 -> 563
549 -> 564
550 -> 505
550 -> 640
550 -> 689
551 -> 506
551 -> 960
552 -> 164
552 -> 1614
553 -> 747
553 -> 771
555 -> 1000
555 -> 1413
556 -> 1614
557 -> 511
557 -> 666
558 -> 497
558 -> 596
559 -> 498
559 -> 596
560 -> 499
560 -> 596
561 -> 638
562 -> 502
562 -> 640
562 -> 689
563 -> 500
563 -> 596
564 -> 3
564 -> 554
564 -> 960
565 -> 566
567 -> 568
568 -> 569
568 -> 570
569 -> 571
571 -> 522
571 -> 595
572 -> 569
572 -> 573
574 -> 569
574 -> 573
575 -> 566
575 -> 569
575 -> 576
575 -> 577
578 -> 575
578 -> 579
580 -> 575
580 -> 579
580 -> 581
581 -> 569
581 -> 573
582 -> 579
582 -> 581
583 -> 575
583 -> 584
584 -> 569
585 -> 575
585 -> 586
586 -> 567
586 -> 568
587 -> 575
587 -> 586
588 -> 575
588 -> 579
588 -> 589
590 -> 588
593 -> 594
596 -> 3
596 -> 371
596 -> 373
596 -> 666
597 -> 580
598 -> 599
600 -> 601
602 -> 588
603 -> 504
603 -> 505
603 -> 589
603 -> 600
603 -> 604
603 -> 605
603 -> 606
607 -> 166
607 -> 182
607 -> 504
607 -> 505
607 -> 589
607 -> 600
607 -> 606
608 -> 590
609 -> 610
611 -> 583
612 -> 613
614 -> 615
616 -> 565
616 -> 575
617 -> 505
617 -> 565
617 -> 604
617 -> 605
617 -> 615
618 -> 166
618 -> 182
618 -> 505
618 -> 565
618 -> 615
619 -> 615
619 -> 616
620 -> 621
622 -> 526
623 -> 574
623 -> 575
623 -> 584
623 -> 624
623 -> 625
626 -> 569
626 -> 575
627 -> 583
628 -> 625
629 -> 583
630 -> 569
631 -> 526
632 -> 566
632 -> 569
633 -> 566
634 -> 588
635 -> 566
636 -> 566
636 -> 569
636 -> 575
637 -> 566
637 -> 574
637 -> 575
637 -> 584
637 -> 624
638 -> 504
638 -> 594
638 -> 639
638 -> 640
640 -> 176
640 -> 666
640 -> 1585
641 -> 578
642 -> 574
642 -> 575
642 -> 579
642 -> 581
642 -> 589
642 -> 624
642 -> 643
644 -> 3
644 -> 574
644 -> 575
644 -> 579
644 -> 581
644 -> 589
644 -> 591
644 -> 592
644 -> 624
644 -> 642
644 -> 645
646 -> 5
646 -> 166
646 -> 170
646 -> 182
646 -> 322
646 -> 467
646 -> 476
646 -> 504
646 -> 642
646 -> 647
646 -> 648
646 -> 649
648 -> 166
648 -> 469
648 -> 474
648 -> 475
648 -> 655
648 -> 1422
648 -> 1425
649 -> 3
649 -> 469
649 -> 554
649 -> 648
649 -> 836
649 -> 1422
649 -> 1423
649 -> 1424
649 -> 1425
650 -> 641
650 -> 651
650 -> 652
651 -> 1584
652 -> 574
652 -> 575
652 -> 582
652 -> 589
652 -> 624
652 -> 655
653 -> 467
653 -> 572
653 -> 575
653 -> 579
653 -> 581
653 -> 589
653 -> 610
653 -> 654
654 -> 375
654 -> 1588
655 -> 164
655 -> 471
655 -> 472
656 -> 613
657 -> 566
657 -> 575
657 -> 579
658 -> 657
659 -> 660
661 -> 572
661 -> 575
661 -> 579
662 -> 661
663 -> 664
665 -> 511
665 -> 666
666 -> 3
666 -> 1404
667 -> 655
668 -> 511
668 -> 669
668 -> 670
670 -> 3
670 -> 1069
670 -> 1406
670 -> 2978
671 -> 483
671 -> 510
672 -> 673
674 -> 587
675 -> 676
677 -> 678
679 -> 680
681 -> 682
683 -> 567
683 -> 585
684 -> 502
684 -> 567
684 -> 604
684 -> 605
685 -> 166
685 -> 182
685 -> 502
685 -> 567
686 -> 683
687 -> 688
690 -> 585
691 -> 690
691 -> 692
692 -> 467
692 -> 567
692 -> 570
692 -> 587
692 -> 591
692 -> 592
692 -> 643
692 -> 655
692 -> 690
692 -> 697
692 -> 698
693 -> 375
693 -> 691
694 -> 691
695 -> 567
695 -> 654
695 -> 690
695 -> 696
696 -> 705
699 -> 567
699 -> 585
700 -> 567
700 -> 585
701 -> 702
703 -> 591
704 -> 592
705 -> 587
705 -> 688
705 -> 706
707 -> 708
709 -> 575
710 -> 360
710 -> 709
710 -> 711
711 -> 591
711 -> 592
711 -> 655
711 -> 697
712 -> 375
712 -> 710
713 -> 575
713 -> 591
713 -> 592
713 -> 651
713 -> 711
714 -> 715
716 -> 566
716 -> 709
717 -> 566
717 -> 709
718 -> 660
719 -> 591
720 -> 592
721 -> 569
721 -> 709
722 -> 569
722 -> 709
723 -> 721
724 -> 725
726 -> 665
726 -> 727
726 -> 728
728 -> 730
728 -> 731
728 -> 732
728 -> 733
728 -> 734
728 -> 735
728 -> 736
729 -> 728
729 -> 730
730 -> 1232
730 -> 2006
730 -> 2844
730 -> 2845
732 -> 845
733 -> 416
734 -> 235
735 -> 3
735 -> 1117
735 -> 1118
735 -> 1119
737 -> 81
737 -> 528
737 -> 728
737 -> 738
739 -> 419
739 -> 728
739 -> 730
740 -> 419
740 -> 535
741 -> 419
741 -> 538
741 -> 539
742 -> 419
742 -> 546
743 -> 483
743 -> 503
743 -> 506
743 -> 507
743 -> 509
743 -> 510
743 -> 552
743 -> 554
743 -> 555
743 -> 556
743 -> 564
743 -> 744
743 -> 745
743 -> 746
743 -> 747
745 -> 1674
746 -> 3
746 -> 164
746 -> 1404
747 -> 3
747 -> 176
747 -> 470
747 -> 473
747 -> 554
747 -> 960
747 -> 1563
748 -> 665
748 -> 727
748 -> 749
749 -> 751
750 -> 730
750 -> 751
751 -> 3
751 -> 730
751 -> 731
751 -> 734
751 -> 735
751 -> 736
751 -> 751
751 -> 752
751 -> 753
752 -> 622
753 -> 3
753 -> 287
753 -> 1205
754 -> 81
754 -> 528
754 -> 534
754 -> 751
755 -> 527
755 -> 730
755 -> 749
756 -> 625
757 -> 528
757 -> 549
757 -> 554
757 -> 638
757 -> 758
758 -> 1670
759 -> 665
759 -> 727
759 -> 760
760 -> 762
761 -> 730
761 -> 762
762 -> 3
762 -> 730
762 -> 731
762 -> 734
762 -> 735
762 -> 736
762 -> 753
762 -> 762
762 -> 763
763 -> 622
764 -> 81
764 -> 528
764 -> 534
764 -> 762
765 -> 527
765 -> 730
765 -> 760
766 -> 625
767 -> 528
767 -> 549
767 -> 554
767 -> 638
767 -> 758
768 -> 769
769 -> 770
770 -> 164
770 -> 554
770 -> 666
770 -> 771
772 -> 7
773 -> 774
775 -> 776
777 -> 778
779 -> 780
781 -> 782
783 -> 784
785 -> 5
785 -> 166
785 -> 182
785 -> 322
785 -> 467
785 -> 476
785 -> 649
785 -> 781
786 -> 787
788 -> 789
790 -> 164
790 -> 467
790 -> 471
790 -> 472
790 -> 772
790 -> 791
790 -> 792
791 -> 823
791 -> 824
792 -> 821
792 -> 822
793 -> 791
793 -> 792
793 -> 794
795 -> 796
797 -> 798
799 -> 800
801 -> 470
802 -> 803
804 -> 474
805 -> 7
805 -> 467
805 -> 806
807 -> 473
808 -> 7
808 -> 467
808 -> 782
808 -> 809
810 -> 477
810 -> 808
810 -> 811
811 -> 845
812 -> 5
812 -> 166
812 -> 182
812 -> 467
812 -> 808
812 -> 809
812 -> 811
813 -> 706
813 -> 791
814 -> 792
814 -> 815
816 -> 817
816 -> 818
819 -> 818
819 -> 820
821 -> 844
822 -> 843
823 -> 844
824 -> 843
825 -> 826
826 -> 769
826 -> 829
827 -> 826
828 -> 826
829 -> 836
829 -> 837
830 -> 7
830 -> 708
830 -> 725
830 -> 782
830 -> 791
830 -> 792
831 -> 7
831 -> 708
831 -> 725
831 -> 782
831 -> 784
831 -> 791
831 -> 792
832 -> 787
832 -> 791
832 -> 792
833 -> 789
833 -> 791
833 -> 792
834 -> 806
835 -> 809
837 -> 3
837 -> 415
837 -> 1146
838 -> 830
839 -> 831
840 -> 832
841 -> 833
842 -> 87
842 -> 727
843 -> 7
843 -> 17
843 -> 21
843 -> 27
843 -> 41
843 -> 421
844 -> 7
844 -> 19
844 -> 23
844 -> 29
844 -> 41
844 -> 467
845 -> 3
845 -> 104
845 -> 731
845 -> 736
845 -> 753
845 -> 845
845 -> 848
845 -> 849
845 -> 850
845 -> 851
845 -> 852
845 -> 853
845 -> 854
845 -> 855
845 -> 856
845 -> 857
845 -> 858
845 -> 859
845 -> 860
845 -> 861
845 -> 862
845 -> 863
846 -> 730
846 -> 845
847 -> 845
848 -> 730
851 -> 860
852 -> 27
852 -> 81
852 -> 94
852 -> 282
852 -> 287
852 -> 706
852 -> 2620
853 -> 7
853 -> 17
853 -> 2883
853 -> 3028
857 -> 534
859 -> 3
859 -> 730
859 -> 731
859 -> 736
859 -> 753
859 -> 859
859 -> 1049
860 -> 3
860 -> 730
860 -> 731
860 -> 736
860 -> 753
860 -> 860
860 -> 982
861 -> 416
862 -> 416
864 -> 87
864 -> 845
864 -> 850
865 -> 845
865 -> 857
865 -> 866
866 -> 81
866 -> 528
867 -> 868
868 -> 730
868 -> 845
868 -> 857
868 -> 866
869 -> 3
869 -> 421
869 -> 528
869 -> 529
870 -> 3
870 -> 237
870 -> 528
870 -> 532
871 -> 535
871 -> 857
871 -> 866
872 -> 106
872 -> 538
872 -> 539
872 -> 857
872 -> 866
873 -> 25
873 -> 74
873 -> 79
873 -> 80
873 -> 120
873 -> 157
873 -> 158
873 -> 159
873 -> 546
873 -> 850
873 -> 857
873 -> 866
873 -> 867
873 -> 874
873 -> 875
873 -> 876
875 -> 2172
877 -> 7
877 -> 395
877 -> 528
877 -> 534
877 -> 554
877 -> 610
877 -> 621
877 -> 664
877 -> 688
877 -> 708
877 -> 725
877 -> 744
877 -> 768
877 -> 770
877 -> 815
877 -> 822
877 -> 825
877 -> 826
877 -> 827
877 -> 828
877 -> 850
877 -> 878
877 -> 879
877 -> 880
877 -> 881
877 -> 882
877 -> 883
877 -> 884
877 -> 885
877 -> 886
877 -> 887
877 -> 888
877 -> 889
877 -> 890
877 -> 891
877 -> 892
877 -> 893
877 -> 894
895 -> 570
896 -> 515
896 -> 897
898 -> 515
898 -> 899
900 -> 515
900 -> 901
901 -> 497
901 -> 670
901 -> 947
901 -> 948
902 -> 702
903 -> 515
903 -> 904
905 -> 515
905 -> 906
907 -> 698
908 -> 575
909 -> 515
909 -> 910
911 -> 575
911 -> 655
911 -> 697
911 -> 908
912 -> 515
912 -> 911
912 -> 913
913 -> 511
913 -> 670
913 -> 947
913 -> 948
914 -> 697
914 -> 908
915 -> 697
915 -> 908
916 -> 914
917 -> 914
918 -> 914
919 -> 483
919 -> 510
920 -> 515
920 -> 921
922 -> 890
923 -> 924
928 -> 60
928 -> 471
928 -> 669
928 -> 930
928 -> 931
928 -> 932
928 -> 934
928 -> 935
928 -> 936
928 -> 937
928 -> 938
928 -> 939
928 -> 940
928 -> 941
928 -> 942
928 -> 943
928 -> 944
928 -> 945
928 -> 946
930 -> 931
932 -> 378
932 -> 931
932 -> 933
934 -> 673
936 -> 2416
936 -> 2828
936 -> 2829
949 -> 504
949 -> 670
949 -> 947
949 -> 948
951 -> 515
951 -> 952
953 -> 515
953 -> 954
955 -> 515
955 -> 949
956 -> 515
956 -> 957
958 -> 515
958 -> 959
960 -> 3
960 -> 84
960 -> 666
961 -> 962
963 -> 7
963 -> 964
965 -> 782
965 -> 964
966 -> 784
966 -> 964
967 -> 964
967 -> 968
969 -> 964
969 -> 970
971 -> 787
971 -> 964
972 -> 789
972 -> 964
973 -> 575
973 -> 655
973 -> 974
973 -> 975
974 -> 473
974 -> 964
975 -> 467
976 -> 706
976 -> 964
977 -> 815
977 -> 964
978 -> 874
978 -> 964
979 -> 891
980 -> 727
980 -> 851
981 -> 730
981 -> 860
982 -> 631
983 -> 81
983 -> 528
983 -> 534
983 -> 860
984 -> 527
984 -> 730
984 -> 851
985 -> 528
985 -> 549
986 -> 987
988 -> 60
989 -> 91
990 -> 991
992 -> 993
994 -> 727
994 -> 736
994 -> 995
994 -> 996
996 -> 416
997 -> 91
997 -> 419
997 -> 730
998 -> 419
998 -> 546
999 -> 81
999 -> 503
999 -> 507
999 -> 509
999 -> 528
999 -> 553
999 -> 554
999 -> 1000
999 -> 1001
1000 -> 554
1000 -> 964
1000 -> 1001
1001 -> 960
1001 -> 964
1002 -> 419
1002 -> 535
1003 -> 419
1003 -> 538
1003 -> 539
1004 -> 419
1004 -> 988
1005 -> 1006
1006 -> 506
1006 -> 725
1006 -> 960
1006 -> 995
1007 -> 962
1007 -> 995
1008 -> 7
1008 -> 964
1009 -> 782
1009 -> 964
1010 -> 784
1010 -> 964
1011 -> 964
1011 -> 968
1012 -> 964
1012 -> 970
1013 -> 787
1013 -> 964
1014 -> 789
1014 -> 964
1015 -> 7
1015 -> 655
1015 -> 964
1015 -> 975
1015 -> 1016
1016 -> 473
1016 -> 964
1017 -> 706
1017 -> 964
1018 -> 815
1018 -> 964
1019 -> 874
1019 -> 964
1020 -> 60
1021 -> 665
1021 -> 727
1021 -> 1020
1021 -> 1022
1022 -> 1024
1023 -> 730
1023 -> 1024
1024 -> 730
1024 -> 731
1024 -> 734
1024 -> 735
1024 -> 736
1024 -> 753
1024 -> 1024
1024 -> 1025
1025 -> 526
1026 -> 81
1026 -> 528
1026 -> 1022
1026 -> 1027
1028 -> 527
1028 -> 730
1028 -> 1022
1029 -> 533
1029 -> 1030
1031 -> 536
1031 -> 1030
1031 -> 1032
1033 -> 1034
1034 -> 1038
1035 -> 574
1035 -> 584
1035 -> 624
1035 -> 1033
1035 -> 1034
1036 -> 569
1036 -> 1033
1037 -> 583
1039 -> 1034
1040 -> 1034
1041 -> 569
1042 -> 1034
1042 -> 1043
1044 -> 528
1044 -> 549
1044 -> 554
1044 -> 638
1045 -> 727
1045 -> 1046
1046 -> 859
1047 -> 471
1047 -> 472
1047 -> 505
1048 -> 730
1048 -> 859
1049 -> 631
1050 -> 81
1050 -> 528
1050 -> 534
1050 -> 859
1051 -> 527
1051 -> 730
1051 -> 1046
1052 -> 531
1052 -> 1047
1053 -> 1054
1055 -> 528
1055 -> 549
1055 -> 758
1056 -> 3
1056 -> 1057
1057 -> 416
1058 -> 287
1058 -> 419
1058 -> 528
1058 -> 1056
1059 -> 95
1059 -> 419
1059 -> 528
1059 -> 730
1059 -> 1056
1059 -> 1058
1060 -> 1061
1061 -> 528
1061 -> 1062
1062 -> 1169
1062 -> 1597
1062 -> 1598
1063 -> 528
1063 -> 647
1064 -> 107
1064 -> 528
1065 -> 528
1065 -> 1066
1067 -> 3
1068 -> 74
1068 -> 79
1068 -> 80
1068 -> 120
1068 -> 157
1068 -> 158
1068 -> 159
1068 -> 528
1068 -> 1069
1068 -> 1070
1068 -> 1071
1068 -> 1072
1068 -> 1073
1074 -> 1068
1075 -> 836
1075 -> 837
1076 -> 1077
1076 -> 1078
1076 -> 1079
1077 -> 1067
1077 -> 1071
1080 -> 1077
1080 -> 1078
1080 -> 1081
1082 -> 1077
1082 -> 1078
1082 -> 1083
1084 -> 1077
1084 -> 1078
1084 -> 1085
1086 -> 479
1086 -> 1077
1086 -> 1078
1087 -> 481
1087 -> 1077
1087 -> 1078
1088 -> 368
1088 -> 1077
1088 -> 1078
1089 -> 1077
1089 -> 1078
1089 -> 1090
1091 -> 164
1091 -> 960
1092 -> 7
1092 -> 964
1092 -> 1077
1093 -> 774
1093 -> 964
1093 -> 1077
1094 -> 778
1094 -> 964
1094 -> 1077
1095 -> 782
1095 -> 964
1095 -> 1077
1096 -> 784
1096 -> 964
1096 -> 1077
1097 -> 964
1097 -> 968
1097 -> 1077
1098 -> 787
1098 -> 964
1098 -> 1077
1099 -> 789
1099 -> 964
1099 -> 1077
1100 -> 467
1100 -> 964
1100 -> 1077
1101 -> 794
1101 -> 964
1101 -> 1077
1102 -> 796
1102 -> 964
1102 -> 1077
1103 -> 798
1103 -> 964
1103 -> 1077
1104 -> 706
1104 -> 964
1104 -> 1077
1105 -> 815
1105 -> 964
1105 -> 1077
1106 -> 964
1106 -> 1077
1106 -> 1107
1108 -> 964
1108 -> 1077
1108 -> 1109
1110 -> 964
1110 -> 1077
1110 -> 1111
1112 -> 874
1112 -> 964
1112 -> 1077
1113 -> 806
1113 -> 964
1113 -> 1077
1114 -> 809
1114 -> 964
1114 -> 1077
1115 -> 817
1115 -> 964
1116 -> 820
1116 -> 964
1119 -> 416
1120 -> 1121
1121 -> 88
1121 -> 95
1121 -> 97
1121 -> 419
1121 -> 528
1121 -> 730
1121 -> 735
1121 -> 1122
1122 -> 46
1122 -> 95
1122 -> 848
1122 -> 1071
1122 -> 1340
1122 -> 2620
1122 -> 3477
1122 -> 3510
1123 -> 421
1123 -> 528
1123 -> 1077
1124 -> 237
1124 -> 528
1124 -> 1077
1125 -> 426
1125 -> 528
1125 -> 1077
1126 -> 727
1126 -> 1127
1126 -> 1128
1127 -> 415
1127 -> 1075
1127 -> 1129
1127 -> 1130
1127 -> 1131
1128 -> 84
1128 -> 554
1128 -> 771
1128 -> 800
1128 -> 1091
1128 -> 1127
1128 -> 1129
1128 -> 1130
1128 -> 1131
1132 -> 105
1132 -> 528
1132 -> 647
1132 -> 1070
1132 -> 1072
1133 -> 106
1133 -> 107
1133 -> 528
1133 -> 1070
1133 -> 1072
1134 -> 54
1134 -> 528
1134 -> 1066
1134 -> 1070
1134 -> 1072
1135 -> 3
1135 -> 1136
1136 -> 416
1137 -> 287
1137 -> 419
1137 -> 528
1137 -> 1135
1138 -> 95
1138 -> 419
1138 -> 528
1138 -> 730
1138 -> 1135
1138 -> 1137
1139 -> 1140
1140 -> 1141
1141 -> 1169
1141 -> 1597
1141 -> 1678
1142 -> 528
1142 -> 647
1143 -> 107
1143 -> 528
1144 -> 528
1144 -> 1066
1145 -> 415
1145 -> 836
1145 -> 878
1145 -> 1146
1145 -> 1147
1146 -> 3
1146 -> 1452
1147 -> 373
1148 -> 371
1148 -> 1149
1150 -> 373
1151 -> 1079
1151 -> 1152
1152 -> 1164
1153 -> 1081
1153 -> 1152
1154 -> 1083
1154 -> 1152
1155 -> 1085
1155 -> 1152
1156 -> 479
1156 -> 1157
1156 -> 1158
1157 -> 1043
1157 -> 1162
1158 -> 1043
1158 -> 1163
1159 -> 481
1159 -> 1157
1159 -> 1158
1160 -> 368
1160 -> 1157
1161 -> 1090
1161 -> 1157
1163 -> 1162
1163 -> 2336
1163 -> 2338
1164 -> 1043
1164 -> 1162
1165 -> 535
1165 -> 647
1166 -> 107
1166 -> 539
1167 -> 84
1167 -> 164
1167 -> 666
1167 -> 878
1167 -> 1147
1168 -> 1169
1170 -> 7
1170 -> 1164
1171 -> 774
1171 -> 1164
1172 -> 778
1172 -> 1164
1173 -> 776
1174 -> 780
1175 -> 782
1175 -> 1164
1175 -> 1176
1175 -> 1177
1176 -> 1043
1176 -> 1162
1177 -> 1162
1177 -> 2872
1178 -> 784
1178 -> 1164
1178 -> 1176
1178 -> 1177
1179 -> 968
1179 -> 1164
1179 -> 1176
1179 -> 1177
1180 -> 164
1180 -> 467
1180 -> 471
1180 -> 546
1180 -> 1069
1180 -> 1164
1180 -> 1170
1180 -> 1177
1180 -> 1181
1180 -> 1182
1180 -> 1183
1181 -> 3
1181 -> 2984
1182 -> 3
1182 -> 1069
1182 -> 1406
1182 -> 2976
1184 -> 794
1184 -> 1164
1184 -> 1177
1185 -> 787
1185 -> 1176
1186 -> 789
1186 -> 1176
1187 -> 796
1187 -> 1164
1188 -> 798
1188 -> 1164
1189 -> 706
1189 -> 1164
1189 -> 1176
1189 -> 1177
1190 -> 815
1190 -> 1164
1190 -> 1176
1190 -> 1177
1191 -> 874
1191 -> 1164
1192 -> 470
1193 -> 806
1193 -> 1164
1194 -> 803
1195 -> 474
1196 -> 473
1197 -> 809
1197 -> 1164
1198 -> 1199
1200 -> 475
1201 -> 817
1202 -> 820
1203 -> 535
1203 -> 647
1204 -> 107
1204 -> 539
1205 -> 416
1206 -> 744
1207 -> 528
1208 -> 528
1208 -> 730
1208 -> 744
1208 -> 1205
1209 -> 421
1209 -> 528
1209 -> 1210
1210 -> 546
1210 -> 1162
1210 -> 1163
1210 -> 1181
1210 -> 1206
1211 -> 237
1211 -> 528
1211 -> 1210
1212 -> 426
1212 -> 528
1212 -> 1162
1212 -> 1206
1212 -> 1210
1213 -> 727
1213 -> 1214
1213 -> 1215
1214 -> 415
1214 -> 1129
1214 -> 1130
1214 -> 1131
1214 -> 1145
1214 -> 1206
1215 -> 84
1215 -> 554
1215 -> 771
1215 -> 800
1215 -> 1129
1215 -> 1130
1215 -> 1131
1215 -> 1167
1215 -> 1206
1215 -> 1214
1216 -> 528
1216 -> 535
1216 -> 647
1216 -> 1206
1217 -> 107
1217 -> 528
1217 -> 539
1217 -> 1206
1218 -> 528
1218 -> 546
1218 -> 1206
1219 -> 60
1220 -> 111
1221 -> 91
1222 -> 94
1223 -> 288
1223 -> 1220
1224 -> 1223
1225 -> 327
1226 -> 537
1226 -> 1227
1228 -> 1229
1229 -> 1219
1230 -> 730
1230 -> 1231
1230 -> 1232
1230 -> 1233
1232 -> 3
1232 -> 543
1232 -> 669
1232 -> 730
1232 -> 1997
1232 -> 2847
1232 -> 2848
1232 -> 2849
1232 -> 2850
1232 -> 2853
1232 -> 2854
1233 -> 91
1233 -> 320
1233 -> 537
1233 -> 728
1233 -> 851
1233 -> 864
1233 -> 1046
1233 -> 1234
1233 -> 1235
1233 -> 1236
1237 -> 1236
1237 -> 1238
1239 -> 60
1239 -> 1240
1240 -> 60
1241 -> 107
1241 -> 300
1241 -> 1270
1241 -> 1271
1242 -> 1243
1242 -> 1244
1244 -> 303
1245 -> 1246
1245 -> 1247
1246 -> 1250
1246 -> 1251
1246 -> 1252
1247 -> 303
1247 -> 647
1247 -> 1227
1247 -> 1240
1248 -> 1246
1248 -> 1249
1249 -> 647
1249 -> 1272
1251 -> 3024
1253 -> 1243
1253 -> 1244
1254 -> 1247
1254 -> 1255
1255 -> 1250
1255 -> 1251
1255 -> 1252
1256 -> 1249
1256 -> 1255
1257 -> 1243
1257 -> 1244
1258 -> 1247
1258 -> 1259
1259 -> 1250
1259 -> 1251
1259 -> 1252
1260 -> 1249
1260 -> 1259
1261 -> 1243
1261 -> 1244
1262 -> 1247
1262 -> 1263
1263 -> 1250
1263 -> 1251
1263 -> 1252
1264 -> 1249
1264 -> 1263
1265 -> 1243
1265 -> 1244
1266 -> 1247
1266 -> 1267
1267 -> 1250
1267 -> 1251
1267 -> 1252
1268 -> 1249
1268 -> 1267
1269 -> 1243
1270 -> 60
1271 -> 320
1271 -> 537
1271 -> 544
1271 -> 545
1271 -> 548
1271 -> 1227
1271 -> 1272
1271 -> 1274
1271 -> 1275
1271 -> 1276
1272 -> 1240
1272 -> 1273
1277 -> 1278
1278 -> 1219
1279 -> 1236
1280 -> 1281
1281 -> 1219
1282 -> 1283
1284 -> 1283
1285 -> 1286
1286 -> 1219
1287 -> 1288
1289 -> 111
1289 -> 1290
1289 -> 1291
1292 -> 1293
1293 -> 1219
1294 -> 62
1295 -> 62
1295 -> 94
1295 -> 331
1295 -> 1296
1297 -> 1298
1298 -> 1219
1299 -> 4
1299 -> 81
1299 -> 91
1299 -> 95
1300 -> 4
1300 -> 94
1301 -> 6
1302 -> 1303
1303 -> 1219
1304 -> 1305
1306 -> 125
1306 -> 128
1306 -> 316
1306 -> 1296
1306 -> 1307
1307 -> 126
1307 -> 219
1308 -> 126
1308 -> 1290
1308 -> 1309
1310 -> 1311
1311 -> 1219
1312 -> 95
1312 -> 1313
1313 -> 94
1313 -> 162
1314 -> 166
1314 -> 182
1314 -> 296
1314 -> 605
1315 -> 1316
1316 -> 1219
1317 -> 1288
1318 -> 194
1319 -> 1320
1320 -> 1219
1321 -> 157
1321 -> 1322
1321 -> 1323
1323 -> 3
1323 -> 673
1323 -> 1783
1323 -> 1878
1323 -> 1880
1323 -> 1881
1323 -> 1882
1323 -> 1889
1324 -> 95
1324 -> 157
1324 -> 288
1324 -> 1323
1324 -> 1325
1326 -> 3
1326 -> 148
1326 -> 374
1326 -> 543
1326 -> 673
1326 -> 1327
1326 -> 1328
1326 -> 1329
1326 -> 1330
1331 -> 3
1331 -> 194
1331 -> 215
1331 -> 673
1331 -> 1332
1331 -> 1333
1331 -> 1334
1331 -> 1335
1333 -> 2213
1333 -> 2219
1333 -> 2220
1333 -> 2221
1334 -> 2208
1335 -> 3
1335 -> 673
1335 -> 1889
1335 -> 2219
1335 -> 2220
1335 -> 2221
1335 -> 2222
1336 -> 3
1336 -> 157
1336 -> 215
1336 -> 271
1336 -> 543
1336 -> 673
1336 -> 1071
1336 -> 1225
1336 -> 1290
1336 -> 1291
1336 -> 1322
1336 -> 1327
1336 -> 1328
1336 -> 1334
1336 -> 1337
1336 -> 1338
1336 -> 1339
1336 -> 1340
1338 -> 206
1338 -> 1335
1338 -> 2219
1339 -> 3
1339 -> 92
1339 -> 95
1339 -> 673
1339 -> 1783
1339 -> 1878
1339 -> 1880
1339 -> 1881
1339 -> 1882
1339 -> 1884
1339 -> 1885
1339 -> 1886
1339 -> 1889
1339 -> 1896
1341 -> 60
1342 -> 164
1342 -> 1343
1344 -> 1343
1344 -> 1345
1346 -> 1347
1346 -> 1348
1349 -> 1350
1350 -> 1343
1350 -> 1347
1350 -> 1351
1350 -> 1352
1353 -> 1354
1354 -> 1343
1354 -> 1347
1354 -> 1351
1354 -> 1355
1356 -> 554
1356 -> 1343
1357 -> 771
1357 -> 1343
1358 -> 470
1358 -> 1343
1359 -> 803
1359 -> 1343
1359 -> 1351
1360 -> 473
1360 -> 1343
1361 -> 1199
1361 -> 1343
1361 -> 1351
1362 -> 817
1362 -> 1343
1363 -> 820
1363 -> 1343
1364 -> 3
1364 -> 1342
1364 -> 1347
1364 -> 1365
1366 -> 3
1366 -> 605
1366 -> 1342
1366 -> 1347
1367 -> 105
1367 -> 162
1367 -> 1342
1367 -> 1347
1367 -> 1351
1368 -> 107
1368 -> 162
1368 -> 1342
1368 -> 1347
1368 -> 1351
1369 -> 1344
1370 -> 60
1371 -> 164
1371 -> 1372
1373 -> 1345
1373 -> 1372
1374 -> 1375
1376 -> 7
1376 -> 1372
1376 -> 1377
1378 -> 1348
1378 -> 1376
1379 -> 1380
1380 -> 774
1380 -> 1372
1380 -> 1377
1381 -> 1382
1382 -> 778
1382 -> 1372
1382 -> 1377
1383 -> 6
1383 -> 111
1383 -> 787
1383 -> 1372
1383 -> 1377
1384 -> 6
1384 -> 111
1384 -> 789
1384 -> 1372
1384 -> 1377
1385 -> 554
1385 -> 1372
1386 -> 771
1386 -> 1372
1387 -> 796
1387 -> 1372
1387 -> 1377
1388 -> 798
1388 -> 1372
1388 -> 1377
1389 -> 800
1389 -> 1372
1390 -> 470
1390 -> 1372
1391 -> 806
1391 -> 1372
1391 -> 1377
1392 -> 473
1392 -> 1372
1393 -> 809
1393 -> 1372
1393 -> 1377
1394 -> 817
1394 -> 1372
1395 -> 820
1395 -> 1372
1396 -> 874
1396 -> 1372
1396 -> 1377
1397 -> 706
1397 -> 782
1397 -> 1372
1397 -> 1377
1397 -> 1398
1398 -> 265
1399 -> 3
1399 -> 1365
1399 -> 1371
1399 -> 1376
1400 -> 3
1400 -> 605
1400 -> 1371
1400 -> 1376
1401 -> 105
1401 -> 647
1401 -> 1371
1401 -> 1374
1401 -> 1376
1402 -> 107
1402 -> 1371
1402 -> 1374
1402 -> 1376
1403 -> 1373
1404 -> 60
1405 -> 1406
1407 -> 1408
1407 -> 1409
1409 -> 1348
1410 -> 1407
1411 -> 1409
1412 -> 605
1412 -> 1411
1412 -> 1413
1414 -> 1408
1414 -> 1415
1415 -> 1409
1416 -> 1414
1417 -> 1415
1418 -> 605
1418 -> 1413
1418 -> 1417
1419 -> 479
1419 -> 1420
1421 -> 481
1421 -> 1420
1422 -> 1434
1425 -> 1433
1426 -> 3
1426 -> 469
1426 -> 554
1426 -> 648
1426 -> 836
1426 -> 1422
1426 -> 1423
1426 -> 1425
1426 -> 1427
1428 -> 651
1428 -> 1408
1428 -> 1429
1428 -> 1430
1428 -> 1431
1429 -> 1441
1430 -> 1442
1432 -> 648
1432 -> 651
1432 -> 1433
1432 -> 1434
1433 -> 1441
1434 -> 1442
1435 -> 368
1435 -> 1420
1436 -> 1090
1436 -> 1420
1437 -> 1431
1437 -> 1438
1438 -> 670
1438 -> 1330
1438 -> 1413
1439 -> 1437
1440 -> 648
1440 -> 1438
1443 -> 673
1443 -> 1348
1443 -> 1442
1444 -> 1443
1445 -> 1419
1445 -> 1446
1447 -> 1445
1447 -> 1446
1448 -> 1445
1448 -> 1446
1449 -> 1408
1449 -> 1445
1449 -> 1446
1450 -> 1446
1451 -> 1405
1452 -> 60
1453 -> 343
1454 -> 375
1454 -> 1455
1455 -> 373
1456 -> 375
1456 -> 1081
1457 -> 373
1458 -> 373
1458 -> 1459
1459 -> 1043
1460 -> 375
1460 -> 1090
1461 -> 373
1462 -> 1453
1463 -> 1169
1464 -> 7
1465 -> 554
1466 -> 771
1467 -> 470
1468 -> 473
1469 -> 706
1470 -> 371
1471 -> 1081
1472 -> 1083
1473 -> 1085
1474 -> 479
1475 -> 481
1476 -> 1090
1477 -> 373
1478 -> 1479
1479 -> 746
1480 -> 1406
1481 -> 84
1482 -> 1169
1483 -> 7
1484 -> 774
1485 -> 1486
1487 -> 1352
1488 -> 1489
1490 -> 776
1491 -> 778
1492 -> 1493
1494 -> 1355
1495 -> 1496
1497 -> 780
1498 -> 782
1499 -> 784
1500 -> 1424
1501 -> 1427
1502 -> 968
1503 -> 970
1504 -> 787
1505 -> 789
1506 -> 467
1507 -> 794
1508 -> 1509
1510 -> 302
1511 -> 1512
1513 -> 554
1514 -> 771
1515 -> 796
1516 -> 798
1517 -> 800
1518 -> 470
1519 -> 806
1520 -> 803
1521 -> 474
1522 -> 473
1523 -> 809
1524 -> 1199
1525 -> 475
1526 -> 817
1527 -> 820
1528 -> 706
1529 -> 815
1530 -> 1107
1531 -> 1109
1532 -> 1111
1533 -> 874
1534 -> 1480
1535 -> 1536
1536 -> 3
1536 -> 836
1536 -> 1452
1537 -> 343
1538 -> 415
1539 -> 371
1540 -> 1541
1542 -> 1543
1544 -> 1079
1545 -> 1081
1546 -> 1547
1548 -> 1549
1550 -> 1083
1551 -> 1085
1552 -> 479
1553 -> 481
1554 -> 368
1555 -> 1090
1556 -> 373
1557 -> 1558
1559 -> 647
1560 -> 107
1561 -> 1562
1563 -> 3
1563 -> 837
1564 -> 1565
1565 -> 470
1565 -> 473
1565 -> 960
1565 -> 964
1566 -> 1466
1567 -> 7
1567 -> 964
1568 -> 782
1568 -> 964
1569 -> 784
1569 -> 964
1570 -> 651
1570 -> 1567
1570 -> 1571
1571 -> 7
1571 -> 467
1571 -> 655
1571 -> 964
1571 -> 1574
1572 -> 787
1572 -> 964
1573 -> 789
1573 -> 964
1575 -> 467
1575 -> 706
1575 -> 964
1575 -> 1567
1576 -> 874
1576 -> 964
1576 -> 1567
1576 -> 1571
1577 -> 60
1578 -> 1043
1579 -> 1043
1580 -> 1043
1581 -> 375
1581 -> 1459
1582 -> 471
1582 -> 1583
1583 -> 3
1583 -> 1069
1583 -> 2976
1584 -> 3
1585 -> 1146
1586 -> 654
1587 -> 1588
1588 -> 1588
1588 -> 1592
1589 -> 1590
1591 -> 1592
1593 -> 1590
1594 -> 1592
1595 -> 654
1596 -> 1588
1598 -> 1478
1599 -> 5
1599 -> 81
1599 -> 287
1599 -> 325
1599 -> 784
1599 -> 1164
1599 -> 1177
1599 -> 1483
1599 -> 1600
1601 -> 1602
1602 -> 1452
1603 -> 355
1604 -> 375
1605 -> 375
1606 -> 148
1607 -> 148
1608 -> 325
1608 -> 375
1609 -> 325
1610 -> 373
1610 -> 1611
1612 -> 1611
1613 -> 1611
1614 -> 3
1614 -> 470
1614 -> 473
1614 -> 960
1615 -> 1464
1616 -> 655
1616 -> 1419
1616 -> 1615
1617 -> 655
1617 -> 1421
1617 -> 1615
1618 -> 651
1618 -> 1615
1618 -> 1619
1619 -> 655
1619 -> 975
1620 -> 796
1620 -> 964
1621 -> 798
1621 -> 964
1622 -> 800
1622 -> 964
1623 -> 706
1623 -> 964
1624 -> 815
1624 -> 964
1625 -> 964
1625 -> 1107
1626 -> 964
1626 -> 1109
1627 -> 964
1627 -> 1111
1628 -> 874
1628 -> 964
1630 -> 1629
1631 -> 651
1631 -> 1629
1631 -> 1630
1631 -> 1632
1631 -> 1633
1634 -> 655
1634 -> 1408
1634 -> 1632
1634 -> 1635
1635 -> 1430
1636 -> 1459
1637 -> 148
1638 -> 148
1638 -> 1459
1639 -> 325
1640 -> 1641
1642 -> 107
1642 -> 1641
1643 -> 3
1643 -> 554
1643 -> 960
1643 -> 1563
1643 -> 1644
1645 -> 7
1645 -> 964
1646 -> 651
1646 -> 1645
1646 -> 1647
1647 -> 7
1647 -> 467
1647 -> 655
1647 -> 964
1647 -> 1648
1649 -> 706
1649 -> 964
1650 -> 815
1650 -> 964
1651 -> 964
1651 -> 1107
1652 -> 964
1652 -> 1109
1653 -> 964
1653 -> 1111
1654 -> 874
1654 -> 964
1655 -> 1078
1655 -> 1541
1656 -> 1078
1656 -> 1543
1657 -> 1078
1657 -> 1079
1658 -> 1078
1658 -> 1081
1659 -> 1078
1659 -> 1549
1660 -> 374
1660 -> 1078
1660 -> 1549
1661 -> 1078
1661 -> 1085
1662 -> 374
1662 -> 1078
1662 -> 1085
1663 -> 481
1663 -> 1078
1664 -> 374
1664 -> 481
1664 -> 1078
1665 -> 368
1665 -> 1078
1666 -> 1078
1666 -> 1090
1667 -> 373
1667 -> 1078
1668 -> 647
1668 -> 1078
1668 -> 1641
1669 -> 107
1669 -> 1078
1669 -> 1641
1670 -> 1478
1670 -> 1518
1671 -> 1483
1672 -> 471
1672 -> 472
1672 -> 505
1672 -> 655
1672 -> 1506
1672 -> 1522
1673 -> 5
1673 -> 1600
1674 -> 1478
1674 -> 1518
1675 -> 1483
1676 -> 655
1676 -> 1506
1676 -> 1522
1677 -> 5
1677 -> 1600
1678 -> 1478
1679 -> 655
1679 -> 1506
1679 -> 1519
1679 -> 1523
1682 -> 878
1682 -> 1404
1683 -> 1406
1684 -> 1685
1685 -> 1375
1686 -> 1685
1687 -> 1685
1688 -> 1685
1689 -> 1685
1690 -> 1685
1691 -> 1685
1692 -> 1685
1693 -> 1685
1694 -> 1685
1695 -> 1685
1696 -> 479
1696 -> 1681
1697 -> 481
1697 -> 1681
1698 -> 1685
1699 -> 1685
1700 -> 1685
1701 -> 1685
1702 -> 368
1702 -> 1681
1703 -> 1090
1703 -> 1681
1704 -> 1685
1705 -> 1685
1706 -> 1685
1707 -> 1685
1708 -> 1685
1709 -> 1685
1710 -> 1685
1711 -> 1685
1712 -> 1685
1713 -> 1685
1714 -> 1685
1715 -> 1685
1716 -> 1685
1717 -> 1685
1718 -> 1685
1719 -> 1685
1720 -> 1685
1721 -> 1685
1722 -> 1685
1723 -> 1685
1724 -> 1685
1725 -> 1685
1726 -> 1685
1727 -> 485
1728 -> 1452
1729 -> 343
1730 -> 1731
1731 -> 1375
1732 -> 1731
1733 -> 1731
1734 -> 1731
1735 -> 1731
1736 -> 1731
1737 -> 1731
1738 -> 1731
1739 -> 1731
1740 -> 1731
1741 -> 1731
1742 -> 1731
1743 -> 669
1743 -> 1729
1744 -> 538
1744 -> 1729
1745 -> 1729
1746 -> 483
1747 -> 7
1747 -> 964
1747 -> 1748
1748 -> 473
1748 -> 964
1749 -> 782
1749 -> 964
1750 -> 784
1750 -> 964
1751 -> 964
1751 -> 968
1752 -> 964
1752 -> 970
1753 -> 787
1753 -> 964
1754 -> 789
1754 -> 964
1755 -> 467
1755 -> 655
1755 -> 964
1755 -> 1748
1756 -> 796
1756 -> 964
1757 -> 798
1757 -> 964
1758 -> 800
1758 -> 964
1759 -> 809
1759 -> 964
1760 -> 964
1760 -> 1199
1761 -> 475
1761 -> 964
1762 -> 706
1762 -> 964
1763 -> 815
1763 -> 964
1764 -> 964
1764 -> 1107
1765 -> 964
1765 -> 1109
1766 -> 964
1766 -> 1111
1767 -> 874
1767 -> 964
1768 -> 727
1769 -> 60
1770 -> 1771
1770 -> 1772
1770 -> 1773
1771 -> 45
1771 -> 55
1771 -> 731
1771 -> 736
1771 -> 1348
1771 -> 1784
1771 -> 1785
1774 -> 1771
1774 -> 1772
1774 -> 1775
1776 -> 1771
1776 -> 1772
1776 -> 1777
1778 -> 1771
1778 -> 1772
1778 -> 1779
1780 -> 1771
1780 -> 1781
1780 -> 1782
1780 -> 1783
1785 -> 3
1785 -> 1786
1785 -> 1787
1785 -> 1788
1785 -> 1789
1790 -> 1791
1792 -> 1793
1794 -> 1790
1795 -> 3
1795 -> 673
1795 -> 731
1795 -> 736
1795 -> 1813
1795 -> 1849
1795 -> 1850
1796 -> 1797
1797 -> 3
1797 -> 673
1797 -> 1327
1797 -> 1800
1797 -> 1851
1798 -> 45
1798 -> 1772
1798 -> 1785
1798 -> 1797
1799 -> 1800
1800 -> 1852
1801 -> 1800
1802 -> 1800
1803 -> 1800
1804 -> 1800
1805 -> 1800
1806 -> 1800
1807 -> 1800
1808 -> 1800
1809 -> 1800
1810 -> 1800
1811 -> 1800
1812 -> 1813
1813 -> 3
1813 -> 16
1813 -> 18
1813 -> 543
1813 -> 673
1813 -> 1327
1813 -> 1815
1813 -> 1816
1813 -> 1817
1813 -> 1818
1813 -> 1819
1813 -> 1820
1813 -> 1821
1813 -> 1822
1813 -> 1823
1813 -> 1824
1813 -> 1825
1813 -> 1826
1813 -> 1827
1813 -> 1828
1813 -> 1829
1813 -> 1830
1813 -> 1831
1813 -> 1832
1813 -> 1833
1813 -> 1834
1813 -> 1835
1813 -> 1836
1813 -> 1837
1813 -> 1838
1813 -> 1839
1813 -> 1840
1813 -> 1841
1813 -> 1842
1813 -> 1843
1813 -> 1844
1813 -> 1845
1813 -> 1846
1813 -> 1847
1813 -> 1848
1814 -> 60
1815 -> 545
1815 -> 548
1815 -> 673
1815 -> 1275
1815 -> 1327
1816 -> 511
1816 -> 2052
1817 -> 509
1817 -> 2050
1818 -> 673
1818 -> 1327
1819 -> 218
1820 -> 502
1820 -> 1940
1820 -> 2047
1821 -> 505
1821 -> 1940
1821 -> 2047
1822 -> 502
1822 -> 2050
1823 -> 505
1823 -> 2050
1824 -> 506
1824 -> 2048
1825 -> 504
1825 -> 2052
1826 -> 504
1826 -> 2053
1827 -> 504
1827 -> 2048
1828 -> 498
1828 -> 2048
1829 -> 496
1829 -> 2052
1830 -> 495
1830 -> 2048
1831 -> 491
1831 -> 2048
1832 -> 492
1832 -> 2048
1833 -> 494
1833 -> 2048
1834 -> 489
1834 -> 2048
1835 -> 487
1835 -> 2048
1836 -> 488
1836 -> 2054
1837 -> 497
1837 -> 2048
1838 -> 497
1838 -> 2052
1839 -> 497
1839 -> 2053
1840 -> 499
1840 -> 2048
1841 -> 500
1841 -> 2048
1842 -> 1988
1842 -> 2039
1843 -> 1988
1843 -> 2039
1844 -> 1979
1844 -> 2047
1845 -> 2039
1846 -> 1899
1846 -> 2047
1848 -> 3
1848 -> 673
1848 -> 1327
1848 -> 1899
1848 -> 1908
1848 -> 2047
1849 -> 60
1849 -> 2008
1850 -> 1375
1850 -> 1853
1850 -> 2027
1850 -> 2028
1850 -> 2029
1851 -> 3
1852 -> 1769
1852 -> 1853
1853 -> 60
1854 -> 60
1857 -> 1854
1858 -> 1859
1859 -> 1854
1860 -> 1854
1860 -> 1861
1862 -> 471
1862 -> 1860
1863 -> 1854
1864 -> 113
1864 -> 179
1864 -> 1865
1865 -> 81
1865 -> 287
1865 -> 1162
1865 -> 1773
1865 -> 1874
1865 -> 1878
1866 -> 113
1866 -> 179
1866 -> 1867
1867 -> 81
1867 -> 287
1867 -> 1162
1867 -> 1775
1867 -> 1874
1867 -> 1878
1868 -> 56
1868 -> 1869
1870 -> 1867
1871 -> 1869
1871 -> 1872
1872 -> 80
1872 -> 158
1872 -> 159
1872 -> 1874
1872 -> 1877
1873 -> 3
1873 -> 1777
1873 -> 1874
1874 -> 1375
1875 -> 3
1875 -> 1779
1875 -> 1874
1876 -> 191
1876 -> 1869
1878 -> 94
1878 -> 95
1879 -> 3
1879 -> 4
1879 -> 6
1879 -> 7
1879 -> 17
1879 -> 81
1879 -> 94
1879 -> 95
1879 -> 1162
1879 -> 1783
1879 -> 1878
1879 -> 1880
1879 -> 1881
1879 -> 1882
1879 -> 1883
1879 -> 1884
1879 -> 1885
1879 -> 1886
1879 -> 1887
1879 -> 1888
1880 -> 1375
1881 -> 45
1881 -> 60
1881 -> 81
1881 -> 94
1881 -> 287
1882 -> 300
1882 -> 349
1882 -> 351
1882 -> 367
1882 -> 505
1882 -> 554
1882 -> 1162
1882 -> 1163
1882 -> 1882
1882 -> 1921
1882 -> 2074
1882 -> 2076
1882 -> 2083
1882 -> 2084
1882 -> 2085
1885 -> 3
1885 -> 2849
1885 -> 2850
1889 -> 543
1889 -> 673
1889 -> 1328
1889 -> 2094
1890 -> 1891
1890 -> 1892
1891 -> 3
1891 -> 95
1891 -> 287
1891 -> 673
1891 -> 1783
1891 -> 1878
1891 -> 1880
1891 -> 1881
1891 -> 1882
1891 -> 1884
1891 -> 1885
1891 -> 1886
1891 -> 1889
1891 -> 1895
1892 -> 852
1892 -> 3143
1892 -> 3145
1893 -> 1891
1893 -> 1894
1894 -> 2756
1894 -> 3143
1894 -> 3145
1895 -> 81
1895 -> 94
1895 -> 282
1895 -> 287
1895 -> 2620
1896 -> 95
1896 -> 1340
1896 -> 2712
1897 -> 3
1897 -> 95
1897 -> 100
1897 -> 673
1897 -> 1783
1897 -> 1878
1897 -> 1880
1897 -> 1881
1897 -> 1882
1897 -> 1884
1897 -> 1885
1897 -> 1886
1897 -> 1889
1897 -> 1898
1898 -> 81
1898 -> 95
1898 -> 848
1898 -> 1340
1898 -> 3510
1899 -> 60
1900 -> 79
1901 -> 1902
1903 -> 79
1904 -> 1902
1905 -> 673
1905 -> 1327
1905 -> 1906
1905 -> 1907
1908 -> 60
1909 -> 673
1910 -> 74
1911 -> 1912
1913 -> 74
1914 -> 1912
1915 -> 673
1916 -> 673
1916 -> 1917
1918 -> 60
1919 -> 673
1919 -> 1327
1919 -> 1328
1919 -> 1330
1919 -> 1920
1919 -> 1921
1921 -> 5
1921 -> 2072
1921 -> 2079
1922 -> 1918
1923 -> 5
1923 -> 7
1923 -> 79
1923 -> 1924
1924 -> 74
1924 -> 79
1924 -> 1348
1925 -> 5
1925 -> 7
1925 -> 1902
1925 -> 1926
1926 -> 1348
1926 -> 1902
1926 -> 1912
1927 -> 79
1927 -> 604
1927 -> 605
1927 -> 1924
1928 -> 604
1928 -> 605
1928 -> 1902
1928 -> 1926
1929 -> 1918
1930 -> 5
1930 -> 7
1930 -> 1931
1930 -> 1932
1931 -> 74
1931 -> 79
1931 -> 1348
1931 -> 2088
1932 -> 79
1933 -> 5
1933 -> 7
1933 -> 1934
1933 -> 1935
1934 -> 1348
1934 -> 1902
1934 -> 1912
1934 -> 2088
1935 -> 1902
1936 -> 604
1936 -> 605
1936 -> 1931
1936 -> 1932
1937 -> 604
1937 -> 605
1937 -> 1934
1937 -> 1935
1938 -> 1929
1939 -> 1327
1939 -> 1919
1940 -> 60
1941 -> 673
1941 -> 948
1941 -> 1327
1941 -> 1328
1941 -> 1330
1941 -> 1920
1941 -> 1921
1941 -> 1942
1943 -> 79
1943 -> 1931
1943 -> 1944
1944 -> 5
1944 -> 7
1945 -> 1902
1945 -> 1934
1945 -> 1944
1946 -> 79
1946 -> 1931
1946 -> 1947
1947 -> 604
1947 -> 605
1948 -> 1902
1948 -> 1934
1948 -> 1947
1949 -> 727
1950 -> 60
1951 -> 74
1951 -> 79
1951 -> 1952
1952 -> 5
1952 -> 774
1952 -> 778
1953 -> 1902
1953 -> 1912
1953 -> 1952
1954 -> 74
1954 -> 79
1954 -> 1955
1955 -> 5
1955 -> 162
1955 -> 604
1955 -> 1489
1955 -> 1496
1956 -> 1902
1956 -> 1912
1956 -> 1955
1957 -> 1958
1959 -> 98
1959 -> 471
1959 -> 511
1959 -> 669
1959 -> 673
1959 -> 727
1959 -> 731
1959 -> 736
1959 -> 946
1959 -> 948
1959 -> 1328
1959 -> 1380
1959 -> 1382
1959 -> 1390
1959 -> 1392
1959 -> 1394
1959 -> 1781
1959 -> 1920
1959 -> 1960
1959 -> 1961
1959 -> 1962
1959 -> 1963
1959 -> 1964
1959 -> 1965
1959 -> 1966
1959 -> 1967
1961 -> 3
1961 -> 5
1961 -> 84
1961 -> 1340
1961 -> 3470
1962 -> 467
1962 -> 1071
1962 -> 3476
1962 -> 3477
1967 -> 5
1967 -> 2073
1967 -> 2079
1968 -> 60
1969 -> 1970
1970 -> 5
1970 -> 74
1970 -> 79
1970 -> 673
1970 -> 874
1970 -> 1327
1970 -> 1348
1970 -> 1902
1970 -> 1912
1970 -> 1932
1970 -> 1935
1970 -> 1974
1970 -> 1975
1971 -> 1970
1972 -> 162
1972 -> 180
1972 -> 1970
1973 -> 162
1973 -> 180
1973 -> 1970
1974 -> 373
1974 -> 554
1976 -> 5
1976 -> 373
1976 -> 484
1976 -> 513
1976 -> 554
1976 -> 673
1976 -> 1327
1976 -> 1920
1976 -> 1977
1976 -> 1978
1978 -> 2072
1978 -> 2079
1979 -> 60
1979 -> 878
1980 -> 673
1981 -> 74
1981 -> 79
1981 -> 1931
1982 -> 1902
1982 -> 1912
1982 -> 1934
1983 -> 1980
1984 -> 471
1984 -> 673
1984 -> 1327
1984 -> 1917
1984 -> 1985
1984 -> 1986
1984 -> 1987
1986 -> 673
1986 -> 1327
1986 -> 1920
1987 -> 1327
1988 -> 60
1989 -> 74
1989 -> 1990
1990 -> 1992
1990 -> 1993
1991 -> 1912
1991 -> 1990
1992 -> 45
1992 -> 1162
1992 -> 2321
1992 -> 2849
1992 -> 2869
1993 -> 45
1993 -> 1162
1993 -> 2321
1993 -> 2849
1993 -> 2867
1994 -> 543
1994 -> 673
1994 -> 731
1994 -> 1995
1994 -> 1996
1994 -> 1997
1994 -> 1998
1999 -> 673
1999 -> 818
1999 -> 2000
1999 -> 2001
2001 -> 2002
2003 -> 74
2003 -> 546
2004 -> 546
2004 -> 1912
2005 -> 543
2005 -> 673
2005 -> 1997
2005 -> 1998
2005 -> 2006
2006 -> 3
2006 -> 669
2006 -> 730
2006 -> 1997
2006 -> 2847
2006 -> 2848
2006 -> 2849
2006 -> 2850
2007 -> 60
2007 -> 1877
2007 -> 2008
2007 -> 2009
2007 -> 2010
2007 -> 2011
2007 -> 2012
2007 -> 2013
2007 -> 2014
2009 -> 2012
2009 -> 2013
2009 -> 2021
2009 -> 2022
2015 -> 45
2015 -> 1773
2015 -> 2016
2017 -> 45
2017 -> 1775
2017 -> 2016
2018 -> 45
2018 -> 1777
2018 -> 2016
2019 -> 45
2019 -> 1779
2019 -> 2016
2020 -> 1783
2020 -> 2016
2021 -> 2022
2023 -> 60
2023 -> 2014
2024 -> 673
2024 -> 1783
2024 -> 2025
2024 -> 2026
2025 -> 2071
2026 -> 2080
2027 -> 855
2027 -> 856
2027 -> 2007
2028 -> 2069
2029 -> 2070
2030 -> 1375
2030 -> 2027
2030 -> 2028
2031 -> 1375
2031 -> 2027
2031 -> 2029
2032 -> 2027
2032 -> 2033
2033 -> 2028
2033 -> 2029
2034 -> 2027
2034 -> 2028
2035 -> 2027
2035 -> 2029
2036 -> 2037
2038 -> 3
2038 -> 1772
2038 -> 1782
2038 -> 2039
2039 -> 863
2040 -> 2039
2040 -> 2041
2041 -> 3
2042 -> 2039
2042 -> 2043
2043 -> 3
2044 -> 2039
2044 -> 2041
2044 -> 2043
2045 -> 3
2045 -> 2023
2045 -> 2039
2045 -> 2041
2046 -> 2023
2046 -> 2039
2046 -> 2043
2047 -> 863
2048 -> 3
2048 -> 878
2048 -> 1922
2048 -> 1929
2048 -> 2047
2049 -> 3
2049 -> 1938
2049 -> 2047
2050 -> 3
2050 -> 878
2050 -> 1922
2050 -> 1929
2050 -> 2047
2051 -> 3
2051 -> 1938
2051 -> 2047
2052 -> 3
2052 -> 1950
2052 -> 2047
2053 -> 3
2053 -> 1950
2053 -> 2047
2054 -> 3
2054 -> 878
2054 -> 1968
2054 -> 2047
2055 -> 490
2055 -> 2054
2056 -> 491
2056 -> 2054
2057 -> 499
2057 -> 2054
2058 -> 484
2058 -> 2048
2059 -> 486
2059 -> 2048
2060 -> 488
2060 -> 2048
2061 -> 490
2061 -> 2048
2062 -> 1821
2063 -> 1820
2064 -> 507
2064 -> 2048
2065 -> 1988
2065 -> 2039
2066 -> 1988
2066 -> 2039
2067 -> 1979
2067 -> 2047
2068 -> 1812
2071 -> 60
2072 -> 60
2073 -> 60
2074 -> 467
2074 -> 706
2074 -> 794
2075 -> 554
2075 -> 771
2075 -> 2076
2076 -> 415
2076 -> 1558
2077 -> 1881
2078 -> 1881
2079 -> 303
2081 -> 1882
2082 -> 1882
2083 -> 2075
2083 -> 2086
2085 -> 3
2087 -> 2088
2089 -> 60
2090 -> 74
2090 -> 79
2090 -> 1931
2090 -> 1975
2090 -> 2088
2091 -> 1902
2091 -> 1912
2091 -> 1934
2091 -> 1975
2091 -> 2088
2092 -> 1912
2092 -> 1926
2092 -> 1975
2093 -> 2088
2093 -> 2093
2095 -> 2096
2095 -> 2097
2095 -> 2098
2095 -> 2099
2095 -> 2100
2095 -> 2101
2095 -> 2102
2095 -> 2103
2095 -> 2104
2095 -> 2105
2095 -> 2106
2095 -> 2107
2095 -> 2108
2095 -> 2109
2095 -> 2110
2095 -> 2111
2095 -> 2112
2095 -> 2113
2095 -> 2114
2095 -> 2115
2095 -> 2116
2095 -> 2117
2095 -> 2118
2095 -> 2119
2095 -> 2120
2095 -> 2121
2095 -> 2122
2095 -> 2123
2095 -> 2124
2095 -> 2125
2095 -> 2126
2095 -> 2127
2095 -> 2128
2095 -> 2129
2095 -> 2130
2095 -> 2131
2095 -> 2132
2095 -> 2133
2095 -> 2134
2095 -> 2135
2095 -> 2136
2095 -> 2137
2095 -> 2138
2095 -> 2139
2095 -> 2140
2095 -> 2141
2095 -> 2142
2095 -> 2143
2095 -> 2144
2095 -> 2145
2095 -> 2146
2095 -> 2147
2095 -> 2148
2095 -> 2149
2095 -> 2150
2095 -> 2151
2095 -> 2152
2095 -> 2153
2095 -> 2154
2096 -> 1823
2096 -> 1849
2096 -> 1850
2097 -> 1827
2097 -> 1846
2097 -> 1849
2097 -> 1850
2098 -> 1828
2098 -> 1846
2098 -> 1849
2098 -> 1850
2099 -> 1822
2099 -> 1849
2099 -> 1850
2100 -> 1841
2100 -> 1848
2100 -> 1849
2100 -> 1850
2101 -> 1837
2101 -> 1846
2101 -> 1849
2101 -> 1850
2102 -> 1840
2102 -> 1846
2102 -> 1849
2102 -> 1850
2103 -> 1831
2103 -> 1849
2103 -> 1850
2104 -> 1834
2104 -> 1846
2104 -> 1849
2104 -> 1850
2105 -> 1835
2105 -> 1846
2105 -> 1849
2105 -> 1850
2106 -> 1836
2106 -> 1846
2106 -> 1849
2106 -> 1850
2107 -> 1849
2107 -> 1850
2107 -> 2067
2108 -> 1846
2108 -> 1849
2108 -> 1850
2109 -> 1849
2109 -> 1850
2109 -> 2038
2109 -> 2096
2109 -> 2097
2110 -> 1849
2110 -> 1850
2110 -> 2038
2110 -> 2096
2110 -> 2097
2110 -> 2098
2111 -> 1849
2111 -> 1850
2111 -> 2038
2111 -> 2099
2111 -> 2100
2112 -> 1849
2112 -> 1850
2112 -> 2038
2112 -> 2099
2112 -> 2100
2112 -> 2101
2113 -> 1849
2113 -> 1850
2113 -> 2038
2113 -> 2103
2113 -> 2104
2114 -> 1849
2114 -> 1850
2114 -> 2038
2114 -> 2103
2114 -> 2104
2114 -> 2105
2115 -> 1836
2115 -> 1846
2115 -> 1849
2115 -> 1850
2115 -> 2038
2115 -> 2103
2115 -> 2104
2115 -> 2105
2116 -> 1849
2116 -> 1850
2116 -> 2038
2116 -> 2103
2116 -> 2104
2116 -> 2105
2116 -> 2106
2117 -> 875
2117 -> 1849
2117 -> 1850
2117 -> 2038
2117 -> 2108
2117 -> 2157
2118 -> 875
2118 -> 1849
2118 -> 1850
2118 -> 2038
2118 -> 2108
2118 -> 2113
2119 -> 875
2119 -> 1849
2119 -> 1850
2119 -> 2038
2119 -> 2108
2119 -> 2114
2120 -> 875
2120 -> 1849
2120 -> 1850
2120 -> 2038
2120 -> 2108
2120 -> 2115
2121 -> 875
2121 -> 1849
2121 -> 1850
2121 -> 2038
2121 -> 2108
2121 -> 2116
2122 -> 1849
2122 -> 1850
2122 -> 2038
2122 -> 2107
2122 -> 2116
2123 -> 1849
2123 -> 1850
2123 -> 2038
2123 -> 2107
2123 -> 2114
2124 -> 1849
2124 -> 1850
2124 -> 2038
2124 -> 2108
2124 -> 2122
2125 -> 1849
2125 -> 1850
2125 -> 2038
2125 -> 2108
2125 -> 2123
2126 -> 875
2126 -> 1849
2126 -> 1850
2126 -> 2038
2126 -> 2124
2127 -> 875
2127 -> 1849
2127 -> 1850
2127 -> 2038
2127 -> 2125
2128 -> 1849
2128 -> 1850
2128 -> 2038
2128 -> 2124
2128 -> 2156
2129 -> 1849
2129 -> 1850
2129 -> 2038
2129 -> 2125
2129 -> 2156
2130 -> 1849
2130 -> 1850
2130 -> 2038
2130 -> 2096
2130 -> 2102
2131 -> 1849
2131 -> 1850
2131 -> 2038
2131 -> 2124
2131 -> 2130
2132 -> 1849
2132 -> 1850
2132 -> 2038
2132 -> 2125
2132 -> 2130
2133 -> 498
2133 -> 504
2133 -> 1823
2133 -> 1849
2133 -> 1850
2133 -> 2049
2134 -> 487
2134 -> 489
2134 -> 491
2134 -> 1836
2134 -> 1846
2134 -> 1849
2134 -> 1850
2134 -> 2049
2134 -> 2067
2135 -> 487
2135 -> 489
2135 -> 491
2135 -> 1849
2135 -> 1850
2135 -> 2049
2135 -> 2067
2136 -> 1849
2136 -> 1850
2136 -> 2038
2136 -> 2108
2136 -> 2134
2137 -> 1849
2137 -> 1850
2137 -> 2038
2137 -> 2108
2137 -> 2135
2138 -> 1849
2138 -> 1850
2138 -> 2038
2138 -> 2133
2138 -> 2136
2139 -> 1849
2139 -> 1850
2139 -> 2038
2139 -> 2133
2139 -> 2137
2140 -> 499
2140 -> 1823
2140 -> 1849
2140 -> 1850
2140 -> 2049
2141 -> 1849
2141 -> 1850
2141 -> 2038
2141 -> 2136
2141 -> 2140
2142 -> 1849
2142 -> 1850
2142 -> 2038
2142 -> 2137
2142 -> 2140
2143 -> 497
2143 -> 500
2143 -> 1822
2143 -> 1846
2143 -> 1849
2143 -> 1850
2143 -> 2049
2144 -> 1849
2144 -> 1850
2144 -> 2038
2144 -> 2136
2144 -> 2143
2145 -> 1849
2145 -> 1850
2145 -> 2038
2145 -> 2137
2145 -> 2143
2146 -> 1782
2146 -> 1849
2146 -> 1850
2146 -> 2031
2146 -> 2038
2146 -> 2045
2146 -> 2046
2146 -> 2096
2146 -> 2097
2146 -> 2098
2146 -> 2099
2146 -> 2100
2146 -> 2101
2146 -> 2102
2147 -> 1836
2147 -> 1846
2147 -> 1849
2147 -> 1850
2147 -> 2031
2147 -> 2038
2147 -> 2042
2147 -> 2045
2147 -> 2046
2147 -> 2055
2147 -> 2056
2147 -> 2103
2147 -> 2104
2147 -> 2105
2148 -> 1846
2148 -> 1849
2148 -> 1850
2148 -> 2031
2148 -> 2038
2148 -> 2046
2148 -> 2107
2148 -> 2146
2149 -> 1858
2149 -> 2146
2150 -> 1782
2150 -> 1849
2150 -> 1850
2150 -> 2038
2150 -> 2046
2150 -> 2107
2150 -> 2108
2150 -> 2147
2151 -> 1782
2151 -> 1849
2151 -> 1850
2151 -> 1858
2151 -> 2038
2151 -> 2046
2151 -> 2108
2151 -> 2147
2152 -> 1782
2152 -> 1846
2152 -> 1849
2152 -> 1850
2152 -> 2031
2152 -> 2038
2152 -> 2045
2152 -> 2046
2152 -> 2107
2152 -> 2147
2152 -> 2153
2153 -> 1782
2153 -> 1846
2153 -> 1849
2153 -> 1850
2153 -> 2031
2153 -> 2038
2153 -> 2046
2153 -> 2107
2153 -> 2146
2153 -> 2147
2154 -> 1846
2154 -> 1849
2154 -> 1850
2154 -> 1858
2154 -> 2031
2154 -> 2038
2154 -> 2046
2154 -> 2146
2154 -> 2147
2155 -> 60
2158 -> 60
2159 -> 3
2159 -> 497
2159 -> 498
2159 -> 499
2159 -> 500
2159 -> 502
2159 -> 504
2159 -> 505
2159 -> 1849
2159 -> 1850
2159 -> 1966
2159 -> 2032
2159 -> 2038
2159 -> 2160
2159 -> 2161
2159 -> 2162
2159 -> 2163
2159 -> 2164
2159 -> 2165
2159 -> 2166
2159 -> 2167
2159 -> 2168
2163 -> 498
2163 -> 504
2163 -> 505
2163 -> 1827
2163 -> 1828
2163 -> 1846
2163 -> 2038
2163 -> 2169
2163 -> 2170
2163 -> 2171
2164 -> 499
2164 -> 505
2164 -> 1840
2164 -> 1846
2164 -> 2038
2164 -> 2169
2164 -> 2170
2165 -> 497
2165 -> 500
2165 -> 502
2165 -> 1837
2165 -> 1841
2165 -> 1846
2165 -> 2038
2165 -> 2169
2165 -> 2170
2165 -> 2171
2167 -> 3
2167 -> 484
2167 -> 487
2167 -> 489
2167 -> 491
2167 -> 1831
2167 -> 1834
2167 -> 1835
2167 -> 1846
2167 -> 2058
2167 -> 2169
2170 -> 1846
2171 -> 3
2173 -> 60
2174 -> 60
2174 -> 2295
2175 -> 3
2175 -> 2269
2175 -> 2301
2175 -> 2302
2176 -> 2306
2177 -> 878
2177 -> 2223
2177 -> 2310
2178 -> 2306
2179 -> 2306
2180 -> 2306
2181 -> 2313
2182 -> 2306
2183 -> 2306
2184 -> 2306
2185 -> 300
2185 -> 2296
2186 -> 2174
2186 -> 2175
2186 -> 2176
2186 -> 2178
2186 -> 2180
2186 -> 2181
2186 -> 2182
2186 -> 2183
2186 -> 2184
2186 -> 2185
2186 -> 2187
2186 -> 2188
2189 -> 2174
2189 -> 2175
2189 -> 2176
2189 -> 2178
2189 -> 2180
2189 -> 2181
2189 -> 2182
2189 -> 2183
2189 -> 2184
2189 -> 2185
2189 -> 2187
2189 -> 2188
2189 -> 2190
2190 -> 2313
2191 -> 2174
2191 -> 2175
2191 -> 2176
2191 -> 2179
2191 -> 2180
2191 -> 2181
2191 -> 2182
2191 -> 2183
2191 -> 2184
2191 -> 2185
2191 -> 2187
2191 -> 2188
2191 -> 2192
2192 -> 878
2192 -> 2223
2192 -> 2304
2193 -> 2174
2193 -> 2175
2193 -> 2176
2193 -> 2179
2193 -> 2180
2193 -> 2181
2193 -> 2182
2193 -> 2183
2193 -> 2184
2193 -> 2185
2193 -> 2187
2193 -> 2188
2193 -> 2190
2193 -> 2192
2194 -> 2195
2196 -> 60
2197 -> 2198
2198 -> 731
2198 -> 2174
2198 -> 2176
2198 -> 2178
2198 -> 2179
2198 -> 2180
2198 -> 2182
2198 -> 2183
2198 -> 2185
2198 -> 2200
2198 -> 2201
2198 -> 2202
2198 -> 2203
2198 -> 2204
2198 -> 2205
2198 -> 2206
2199 -> 45
2199 -> 2198
2202 -> 878
2202 -> 2229
2202 -> 2310
2203 -> 2313
2204 -> 2306
2205 -> 2306
2207 -> 60
2208 -> 60
2209 -> 1856
2209 -> 2208
2209 -> 2210
2211 -> 2212
2211 -> 2213
2211 -> 2214
2211 -> 2215
2212 -> 1375
2213 -> 3
2216 -> 2212
2216 -> 2213
2216 -> 2214
2216 -> 2217
2219 -> 1375
2222 -> 330
2223 -> 60
2224 -> 673
2225 -> 74
2226 -> 1912
2227 -> 673
2227 -> 1917
2228 -> 673
2228 -> 1327
2228 -> 1917
2229 -> 60
2230 -> 673
2231 -> 74
2232 -> 1912
2233 -> 673
2233 -> 1917
2234 -> 673
2234 -> 1917
2235 -> 60
2236 -> 2237
2238 -> 2239
2240 -> 2241
2242 -> 2243
2244 -> 2245
2246 -> 60
2247 -> 60
2247 -> 2235
2248 -> 2249
2249 -> 194
2249 -> 348
2249 -> 349
2249 -> 350
2249 -> 351
2249 -> 352
2249 -> 353
2249 -> 354
2249 -> 355
2249 -> 1920
2249 -> 2255
2249 -> 2258
2249 -> 2259
2250 -> 645
2250 -> 818
2250 -> 2093
2250 -> 2237
2250 -> 2249
2251 -> 76
2251 -> 79
2251 -> 645
2251 -> 1924
2251 -> 1931
2251 -> 2239
2251 -> 2249
2251 -> 2252
2253 -> 645
2253 -> 1902
2253 -> 1926
2253 -> 1934
2253 -> 2241
2253 -> 2249
2254 -> 194
2254 -> 673
2254 -> 1327
2254 -> 1920
2254 -> 2243
2254 -> 2245
2254 -> 2255
2254 -> 2256
2254 -> 2257
2255 -> 204
2255 -> 348
2255 -> 349
2255 -> 350
2255 -> 351
2255 -> 352
2255 -> 353
2255 -> 354
2255 -> 355
2256 -> 1327
2256 -> 1328
2256 -> 1330
2257 -> 2260
2257 -> 2261
2257 -> 2262
2257 -> 2263
2257 -> 2264
2257 -> 2265
2257 -> 2266
2257 -> 2267
2259 -> 200
2259 -> 211
2268 -> 2269
2269 -> 60
2270 -> 673
2271 -> 74
2272 -> 1912
2273 -> 673
2273 -> 1917
2274 -> 60
2274 -> 669
2274 -> 855
2274 -> 2275
2274 -> 2276
2274 -> 2277
2274 -> 2278
2274 -> 2279
2280 -> 2281
2282 -> 673
2282 -> 2218
2282 -> 2281
2283 -> 74
2283 -> 2215
2283 -> 2281
2284 -> 1912
2284 -> 2217
2284 -> 2281
2285 -> 673
2285 -> 1917
2285 -> 2221
2286 -> 60
2286 -> 2008
2286 -> 2012
2286 -> 2287
2286 -> 2288
2287 -> 2012
2287 -> 2013
2287 -> 2022
2287 -> 2294
2289 -> 2281
2290 -> 2218
2291 -> 2215
2292 -> 2217
2293 -> 2016
2293 -> 2221
2294 -> 2022
2295 -> 2008
2295 -> 2299
2296 -> 1276
2296 -> 2012
2296 -> 2013
2296 -> 2207
2296 -> 2214
2296 -> 2220
2296 -> 2296
2296 -> 2316
2296 -> 2317
2296 -> 2318
2297 -> 2185
2297 -> 2214
2298 -> 2185
2298 -> 2220
2300 -> 3
2300 -> 2214
2300 -> 2220
2300 -> 2301
2300 -> 2302
2301 -> 1276
2302 -> 2022
2303 -> 3
2303 -> 2301
2303 -> 2302
2304 -> 878
2304 -> 2235
2305 -> 878
2305 -> 2229
2305 -> 2304
2306 -> 2309
2307 -> 2306
2308 -> 2309
2309 -> 2246
2309 -> 2302
2310 -> 1276
2310 -> 2012
2310 -> 2013
2310 -> 2247
2310 -> 2301
2310 -> 2311
2310 -> 2312
2313 -> 878
2313 -> 1276
2313 -> 2012
2313 -> 2013
2313 -> 2022
2313 -> 2274
2313 -> 2299
2313 -> 2301
2313 -> 2302
2313 -> 2316
2313 -> 2317
2314 -> 2313
2315 -> 2313
2317 -> 2012
2317 -> 2013
2317 -> 2286
2319 -> 60
2320 -> 2320
2320 -> 2321
2322 -> 1162
2322 -> 2322
2323 -> 2323
2323 -> 2324
2325 -> 948
2325 -> 2326
2327 -> 2328
2328 -> 546
2328 -> 2329
2329 -> 3
2329 -> 60
2330 -> 2320
2330 -> 2331
2331 -> 2341
2332 -> 2322
2332 -> 2331
2333 -> 2323
2333 -> 2331
2334 -> 1149
2335 -> 2336
2337 -> 2338
2339 -> 539
2340 -> 535
2341 -> 2319
2341 -> 2336
2342 -> 2343
2342 -> 2344
2342 -> 2345
2342 -> 2346
2342 -> 2347
2346 -> 2343
2346 -> 2444
2347 -> 3
2347 -> 60
2348 -> 17
2348 -> 21
2348 -> 41
2348 -> 328
2348 -> 467
2348 -> 2349
2348 -> 2350
2349 -> 21
2349 -> 27
2349 -> 467
2349 -> 782
2350 -> 7
2350 -> 29
2350 -> 782
2351 -> 17
2351 -> 21
2351 -> 41
2351 -> 328
2351 -> 467
2351 -> 782
2351 -> 2350
2351 -> 2352
2352 -> 17
2352 -> 782
2352 -> 796
2352 -> 2349
2353 -> 17
2353 -> 21
2353 -> 41
2353 -> 328
2353 -> 467
2353 -> 782
2353 -> 2350
2353 -> 2354
2354 -> 17
2354 -> 782
2354 -> 796
2354 -> 2349
2355 -> 2356
2355 -> 2357
2355 -> 2358
2358 -> 2356
2358 -> 2438
2358 -> 2443
2359 -> 2342
2359 -> 2346
2359 -> 2360
2359 -> 2361
2361 -> 60
2362 -> 2351
2363 -> 2353
2364 -> 669
2364 -> 2365
2366 -> 2355
2366 -> 2358
2366 -> 2367
2368 -> 2361
2369 -> 933
2369 -> 2368
2370 -> 60
2371 -> 2372
2373 -> 2374
2375 -> 2376
2377 -> 7
2377 -> 17
2377 -> 328
2377 -> 467
2377 -> 2362
2378 -> 60
2379 -> 60
2379 -> 2373
2379 -> 2375
2380 -> 60
2381 -> 669
2382 -> 7
2382 -> 111
2382 -> 328
2382 -> 725
2383 -> 60
2383 -> 854
2384 -> 60
2384 -> 2277
2385 -> 863
2385 -> 2386
2387 -> 2277
2387 -> 2375
2387 -> 2378
2387 -> 2379
2387 -> 2380
2387 -> 2388
2387 -> 2389
2387 -> 2390
2387 -> 2391
2388 -> 7
2388 -> 17
2388 -> 328
2388 -> 2348
2388 -> 2377
2388 -> 2379
2388 -> 2392
2388 -> 2393
2388 -> 2394
2388 -> 2395
2396 -> 2348
2397 -> 855
2397 -> 856
2397 -> 2398
2397 -> 2399
2399 -> 2329
2400 -> 2346
2400 -> 2359
2400 -> 2399
2401 -> 2374
2401 -> 2402
2402 -> 2362
2402 -> 2376
2403 -> 2376
2403 -> 2402
2404 -> 2362
2404 -> 2376
2405 -> 2363
2405 -> 2376
2406 -> 546
2406 -> 669
2406 -> 2364
2407 -> 2358
2407 -> 2366
2408 -> 2343
2408 -> 2345
2408 -> 2346
2408 -> 2360
2408 -> 2400
2408 -> 2409
2408 -> 2410
2408 -> 2411
2408 -> 2412
2412 -> 2329
2413 -> 3
2413 -> 92
2413 -> 153
2413 -> 328
2413 -> 546
2413 -> 669
2413 -> 855
2413 -> 856
2413 -> 878
2413 -> 933
2413 -> 2369
2413 -> 2374
2413 -> 2376
2413 -> 2381
2413 -> 2389
2413 -> 2390
2413 -> 2399
2413 -> 2412
2413 -> 2414
2413 -> 2415
2413 -> 2416
2413 -> 2417
2413 -> 2418
2413 -> 2419
2413 -> 2420
2413 -> 2421
2413 -> 2422
2418 -> 348
2418 -> 349
2418 -> 351
2418 -> 3777
2419 -> 3635
2419 -> 3641
2420 -> 3635
2420 -> 3641
2421 -> 2512
2423 -> 2401
2423 -> 2424
2425 -> 2403
2425 -> 2424
2426 -> 2424
2426 -> 2427
2428 -> 2404
2428 -> 2424
2429 -> 2405
2429 -> 2424
2430 -> 546
2430 -> 669
2430 -> 2406
2430 -> 2431
2430 -> 2432
2430 -> 2433
2434 -> 669
2434 -> 1375
2434 -> 1963
2434 -> 2162
2434 -> 2356
2434 -> 2357
2434 -> 2358
2434 -> 2367
2434 -> 2393
2434 -> 2394
2434 -> 2407
2434 -> 2435
2434 -> 2436
2434 -> 2437
2434 -> 2438
2439 -> 2440
2439 -> 2441
2440 -> 535
2440 -> 2327
2440 -> 2343
2440 -> 2346
2440 -> 2360
2440 -> 2408
2440 -> 2411
2440 -> 2442
2442 -> 2329
2445 -> 669
2445 -> 2442
2446 -> 60
2446 -> 854
2447 -> 855
2447 -> 856
2447 -> 863
2447 -> 2347
2447 -> 2383
2447 -> 2448
2449 -> 2450
2449 -> 2451
2450 -> 855
2450 -> 856
2450 -> 2447
2452 -> 2450
2452 -> 2453
2454 -> 2347
2454 -> 2361
2454 -> 2370
2454 -> 2385
2454 -> 2450
2455 -> 855
2455 -> 856
2455 -> 878
2455 -> 2008
2455 -> 2327
2455 -> 2384
2455 -> 2387
2455 -> 2388
2455 -> 2389
2455 -> 2390
2455 -> 2391
2455 -> 2396
2455 -> 2397
2455 -> 2413
2455 -> 2414
2455 -> 2415
2455 -> 2445
2455 -> 2456
2455 -> 2457
2456 -> 855
2456 -> 856
2456 -> 863
2456 -> 2381
2456 -> 2389
2456 -> 2414
2456 -> 2456
2456 -> 2458
2459 -> 2460
2459 -> 2461
2460 -> 1162
2460 -> 2321
2460 -> 2324
2460 -> 2356
2460 -> 2358
2460 -> 2367
2460 -> 2434
2460 -> 2455
2460 -> 2462
2463 -> 2464
2464 -> 1680
2465 -> 60
2466 -> 2467
2467 -> 669
2467 -> 731
2467 -> 736
2467 -> 936
2467 -> 1130
2467 -> 1131
2467 -> 2417
2467 -> 2464
2468 -> 2467
2469 -> 546
2469 -> 673
2469 -> 1997
2469 -> 2470
2469 -> 2471
2472 -> 546
2472 -> 669
2473 -> 538
2473 -> 546
2474 -> 60
2475 -> 950
2476 -> 2477
2478 -> 60
2479 -> 3
2479 -> 60
2479 -> 543
2479 -> 669
2479 -> 673
2479 -> 1327
2479 -> 1328
2479 -> 1330
2479 -> 1997
2479 -> 2480
2479 -> 2481
2479 -> 2482
2479 -> 2483
2479 -> 2484
2479 -> 2485
2479 -> 2486
2479 -> 2487
2479 -> 2488
2479 -> 2489
2479 -> 2490
2479 -> 2491
2482 -> 7
2482 -> 328
2482 -> 664
2482 -> 794
2483 -> 7
2483 -> 328
2483 -> 698
2483 -> 794
2486 -> 328
2486 -> 3067
2487 -> 405
2487 -> 479
2487 -> 2883
2487 -> 3028
2487 -> 3032
2488 -> 402
2488 -> 479
2488 -> 2883
2488 -> 3028
2488 -> 3032
2489 -> 7
2489 -> 21
2489 -> 2883
2489 -> 3028
2490 -> 7
2490 -> 27
2490 -> 2883
2490 -> 3028
2491 -> 3
2491 -> 100
2491 -> 1071
2491 -> 1879
2491 -> 1997
2491 -> 2520
2491 -> 2536
2492 -> 2454
2493 -> 2447
2494 -> 60
2494 -> 878
2494 -> 933
2494 -> 2479
2494 -> 2481
2494 -> 2491
2494 -> 2495
2494 -> 2496
2495 -> 669
2495 -> 1330
2495 -> 2535
2496 -> 669
2497 -> 2492
2497 -> 2498
2498 -> 543
2498 -> 933
2498 -> 1328
2498 -> 1337
2498 -> 2094
2498 -> 2484
2499 -> 60
2499 -> 2008
2499 -> 2022
2500 -> 3
2500 -> 669
2500 -> 2013
2500 -> 2022
2501 -> 2012
2501 -> 2013
2501 -> 2497
2502 -> 2481
2502 -> 2503
2503 -> 60
2503 -> 933
2503 -> 1330
2503 -> 2479
2503 -> 2480
2503 -> 2481
2503 -> 2491
2503 -> 2496
2503 -> 2504
2504 -> 2478
2505 -> 2503
2505 -> 2505
2506 -> 2507
2507 -> 3
2507 -> 731
2507 -> 2449
2507 -> 2452
2507 -> 2491
2507 -> 2493
2507 -> 2501
2508 -> 2508
2509 -> 2510
2511 -> 2509
2513 -> 669
2513 -> 2514
2513 -> 2515
2513 -> 2516
2513 -> 2517
2513 -> 2518
2513 -> 2519
2514 -> 2422
2518 -> 60
2518 -> 727
2518 -> 2008
2519 -> 535
2519 -> 546
2519 -> 731
2519 -> 736
2519 -> 945
2519 -> 2012
2519 -> 2013
2519 -> 2411
2519 -> 2421
2519 -> 2422
2519 -> 2439
2519 -> 2446
2519 -> 2455
2519 -> 2459
2519 -> 2461
2519 -> 2506
2519 -> 2516
2519 -> 2521
2519 -> 2523
2519 -> 2537
2519 -> 2539
2519 -> 2540
2519 -> 2541
2519 -> 2542
2519 -> 2543
2519 -> 2544
2519 -> 2545
2519 -> 2546
2519 -> 2547
2519 -> 2548
2519 -> 2549
2519 -> 2550
2519 -> 2551
2519 -> 2552
2520 -> 328
2520 -> 1056
2521 -> 546
2521 -> 731
2521 -> 736
2521 -> 931
2521 -> 1680
2521 -> 2522
2521 -> 2523
2521 -> 2524
2521 -> 2525
2521 -> 2526
2521 -> 2527
2521 -> 2528
2521 -> 2529
2521 -> 2530
2521 -> 2531
2521 -> 2532
2521 -> 2533
2521 -> 2534
2537 -> 92
2537 -> 328
2537 -> 467
2537 -> 546
2537 -> 669
2537 -> 673
2537 -> 725
2537 -> 1162
2537 -> 1283
2537 -> 2008
2537 -> 2012
2537 -> 2013
2537 -> 2022
2537 -> 2321
2537 -> 2336
2537 -> 2338
2537 -> 2422
2537 -> 2538
2541 -> 673
2541 -> 731
2541 -> 736
2541 -> 950
2541 -> 1327
2541 -> 1328
2541 -> 1337
2541 -> 2022
2541 -> 2422
2541 -> 2480
2541 -> 2481
2541 -> 2494
2541 -> 2499
2541 -> 2500
2541 -> 2502
2541 -> 2505
2541 -> 2553
2541 -> 2554
2541 -> 2555
2541 -> 2556
2557 -> 3
2557 -> 60
2557 -> 2411
2557 -> 2543
2557 -> 2545
2557 -> 2558
2557 -> 2559
2558 -> 190
2558 -> 541
2558 -> 544
2558 -> 548
2558 -> 2094
2558 -> 2411
2558 -> 2516
2558 -> 2549
2558 -> 2571
2558 -> 2572
2559 -> 736
2559 -> 2195
2559 -> 2441
2559 -> 2573
2559 -> 2575
2559 -> 2576
2560 -> 2561
2561 -> 3
2561 -> 60
2561 -> 320
2561 -> 1234
2561 -> 2558
2561 -> 2559
2561 -> 2563
2562 -> 2561
2564 -> 669
2564 -> 731
2564 -> 2564
2564 -> 2565
2564 -> 2566
2565 -> 736
2565 -> 2439
2565 -> 2550
2565 -> 2558
2565 -> 2569
2565 -> 2573
2565 -> 2574
2567 -> 1996
2567 -> 2568
2569 -> 2570
2575 -> 736
2575 -> 933
2575 -> 2411
2575 -> 2577
2575 -> 2578
2579 -> 1370
2580 -> 164
2580 -> 991
2581 -> 5
2581 -> 993
2581 -> 1340
2582 -> 1071
2583 -> 1340
2584 -> 782
2584 -> 1071
2584 -> 2585
2585 -> 1071
2585 -> 1340
2585 -> 2610
2585 -> 2617
2586 -> 784
2586 -> 1071
2586 -> 2585
2587 -> 968
2587 -> 1071
2587 -> 2585
2588 -> 467
2588 -> 1071
2588 -> 2585
2589 -> 794
2589 -> 1071
2589 -> 2585
2590 -> 2589
2591 -> 1393
2591 -> 2588
2592 -> 1391
2592 -> 2588
2593 -> 706
2593 -> 1071
2593 -> 2585
2594 -> 815
2594 -> 1071
2594 -> 2585
2595 -> 1071
2595 -> 1107
2595 -> 2585
2596 -> 1071
2596 -> 1109
2596 -> 2585
2597 -> 1071
2597 -> 1111
2597 -> 2585
2598 -> 2599
2599 -> 218
2600 -> 2601
2600 -> 2602
2602 -> 221
2603 -> 2601
2603 -> 2604
2604 -> 222
2605 -> 1322
2605 -> 1857
2605 -> 2606
2606 -> 1339
2606 -> 2607
2607 -> 1071
2607 -> 1340
2607 -> 2610
2608 -> 223
2609 -> 224
2610 -> 220
2611 -> 232
2612 -> 227
2613 -> 94
2613 -> 232
2614 -> 234
2615 -> 236
2616 -> 235
2617 -> 27
2617 -> 706
2618 -> 1071
2618 -> 1340
2618 -> 2610
2619 -> 46
2619 -> 95
2619 -> 848
2619 -> 1071
2619 -> 1340
2619 -> 2610
2619 -> 2620
2620 -> 730
2620 -> 1164
2620 -> 1177
2621 -> 180
2621 -> 1071
2621 -> 1340
2621 -> 2585
2622 -> 3
2622 -> 5
2622 -> 467
2622 -> 1071
2622 -> 1340
2622 -> 2585
2623 -> 3
2623 -> 367
2623 -> 479
2623 -> 1071
2623 -> 1340
2623 -> 2585
2624 -> 1071
2624 -> 1340
2624 -> 2585
2624 -> 2625
2626 -> 62
2626 -> 2624
2627 -> 271
2627 -> 1071
2627 -> 1340
2627 -> 2585
2628 -> 2624
2629 -> 2626
2630 -> 2627
2631 -> 406
2631 -> 479
2631 -> 1071
2631 -> 1340
2631 -> 2585
2632 -> 405
2632 -> 479
2632 -> 1071
2632 -> 1340
2632 -> 2585
2633 -> 403
2633 -> 479
2633 -> 1071
2633 -> 1340
2633 -> 2585
2634 -> 402
2634 -> 479
2634 -> 1071
2634 -> 1340
2634 -> 2585
2635 -> 2624
2636 -> 2626
2637 -> 2627
2638 -> 406
2638 -> 1071
2638 -> 1340
2638 -> 2585
2638 -> 2639
2639 -> 479
2639 -> 2940
2640 -> 405
2640 -> 1071
2640 -> 1340
2640 -> 2585
2640 -> 2639
2641 -> 403
2641 -> 1071
2641 -> 1340
2641 -> 2585
2641 -> 2639
2642 -> 402
2642 -> 1071
2642 -> 1340
2642 -> 2585
2642 -> 2639
2643 -> 3
2643 -> 5
2643 -> 84
2643 -> 1340
2643 -> 2579
2644 -> 1071
2644 -> 1340
2644 -> 2645
2645 -> 284
2646 -> 852
2646 -> 1071
2646 -> 1340
2647 -> 144
2647 -> 351
2647 -> 367
2647 -> 479
2647 -> 1071
2647 -> 1340
2648 -> 9
2648 -> 467
2648 -> 1071
2648 -> 1340
2648 -> 2585
2649 -> 11
2649 -> 467
2649 -> 1071
2649 -> 1340
2649 -> 2585
2650 -> 13
2650 -> 467
2650 -> 1071
2650 -> 1340
2650 -> 2585
2651 -> 15
2651 -> 467
2651 -> 1071
2651 -> 1340
2651 -> 2585
2652 -> 17
2652 -> 467
2652 -> 1071
2652 -> 1340
2652 -> 2585
2653 -> 19
2653 -> 467
2653 -> 1071
2653 -> 1340
2653 -> 2585
2654 -> 21
2654 -> 467
2654 -> 1071
2654 -> 1340
2654 -> 2585
2655 -> 23
2655 -> 467
2655 -> 1071
2655 -> 1340
2655 -> 2585
2656 -> 25
2656 -> 467
2656 -> 1071
2656 -> 1340
2656 -> 2585
2657 -> 27
2657 -> 467
2657 -> 1071
2657 -> 1340
2657 -> 2585
2658 -> 29
2658 -> 467
2658 -> 1071
2658 -> 1340
2658 -> 2585
2659 -> 9
2659 -> 1340
2659 -> 2579
2660 -> 11
2660 -> 1340
2660 -> 2579
2661 -> 15
2661 -> 1340
2661 -> 2579
2662 -> 13
2662 -> 1340
2662 -> 2579
2663 -> 17
2663 -> 1340
2663 -> 2579
2664 -> 19
2664 -> 1340
2664 -> 2579
2665 -> 21
2665 -> 1340
2665 -> 2579
2666 -> 23
2666 -> 1340
2666 -> 2579
2667 -> 25
2667 -> 1340
2667 -> 2579
2668 -> 27
2668 -> 1340
2668 -> 2579
2669 -> 29
2669 -> 1340
2669 -> 2579
2670 -> 1370
2671 -> 164
2671 -> 991
2672 -> 5
2672 -> 993
2672 -> 1340
2673 -> 1071
2674 -> 1340
2675 -> 782
2675 -> 1071
2675 -> 2676
2676 -> 92
2676 -> 1071
2676 -> 1340
2677 -> 784
2677 -> 1071
2677 -> 2676
2678 -> 968
2678 -> 1071
2678 -> 2676
2679 -> 467
2679 -> 1071
2679 -> 2676
2680 -> 794
2680 -> 1071
2680 -> 2676
2681 -> 2680
2682 -> 81
2682 -> 92
2682 -> 1393
2682 -> 2338
2682 -> 2673
2682 -> 2674
2682 -> 2679
2682 -> 2683
2683 -> 2683
2683 -> 2985
2684 -> 81
2684 -> 92
2684 -> 1391
2684 -> 2336
2684 -> 2673
2684 -> 2674
2684 -> 2679
2684 -> 2683
2685 -> 706
2685 -> 1071
2685 -> 2676
2686 -> 815
2686 -> 1071
2686 -> 2676
2687 -> 1071
2687 -> 1107
2687 -> 2676
2688 -> 1071
2688 -> 1109
2688 -> 2676
2689 -> 1071
2689 -> 1111
2689 -> 2676
2690 -> 1819
2691 -> 2601
2691 -> 2692
2692 -> 221
2693 -> 2601
2693 -> 2694
2694 -> 222
2695 -> 1322
2695 -> 1857
2695 -> 2696
2696 -> 1339
2697 -> 223
2698 -> 232
2699 -> 227
2700 -> 94
2700 -> 232
2701 -> 234
2702 -> 236
2703 -> 235
2704 -> 234
2705 -> 236
2706 -> 235
2707 -> 234
2708 -> 236
2709 -> 90
2709 -> 219
2709 -> 1340
2710 -> 46
2710 -> 93
2710 -> 848
2711 -> 94
2711 -> 96
2711 -> 1340
2712 -> 92
2712 -> 94
2712 -> 1071
2712 -> 1340
2713 -> 46
2713 -> 92
2713 -> 95
2713 -> 848
2713 -> 1071
2713 -> 1340
2713 -> 2620
2714 -> 46
2714 -> 1071
2714 -> 2676
2714 -> 2715
2715 -> 1162
2715 -> 2336
2716 -> 46
2716 -> 1071
2716 -> 2676
2716 -> 2715
2717 -> 17
2717 -> 21
2717 -> 27
2717 -> 467
2717 -> 1071
2717 -> 1340
2717 -> 2676
2718 -> 31
2718 -> 35
2718 -> 39
2718 -> 43
2718 -> 467
2718 -> 1071
2718 -> 1340
2718 -> 2676
2719 -> 46
2719 -> 2720
2719 -> 2721
2720 -> 852
2720 -> 1071
2720 -> 1340
2721 -> 27
2721 -> 92
2721 -> 95
2721 -> 706
2721 -> 848
2721 -> 2872
2721 -> 2883
2721 -> 3028
2722 -> 180
2722 -> 1071
2722 -> 1340
2722 -> 2676
2723 -> 3
2723 -> 5
2723 -> 467
2723 -> 1071
2723 -> 1340
2723 -> 2676
2724 -> 3
2724 -> 367
2724 -> 479
2724 -> 1071
2724 -> 1340
2724 -> 2676
2725 -> 1071
2725 -> 1340
2725 -> 2625
2725 -> 2676
2726 -> 62
2726 -> 2725
2727 -> 271
2727 -> 1071
2727 -> 1340
2727 -> 2676
2728 -> 2725
2729 -> 2726
2730 -> 2727
2731 -> 406
2731 -> 479
2731 -> 1071
2731 -> 1340
2731 -> 2676
2732 -> 405
2732 -> 479
2732 -> 1071
2732 -> 1340
2732 -> 2676
2733 -> 403
2733 -> 479
2733 -> 1071
2733 -> 1340
2733 -> 2676
2734 -> 402
2734 -> 479
2734 -> 1071
2734 -> 1340
2734 -> 2676
2735 -> 400
2735 -> 479
2735 -> 1071
2735 -> 1340
2735 -> 2676
2736 -> 399
2736 -> 479
2736 -> 1071
2736 -> 1340
2736 -> 2676
2737 -> 398
2737 -> 479
2737 -> 1071
2737 -> 1340
2737 -> 2676
2738 -> 396
2738 -> 479
2738 -> 1071
2738 -> 1340
2738 -> 2676
2739 -> 2725
2740 -> 2726
2741 -> 2727
2742 -> 406
2742 -> 1071
2742 -> 1340
2742 -> 2639
2742 -> 2676
2743 -> 405
2743 -> 1071
2743 -> 1340
2743 -> 2639
2743 -> 2676
2744 -> 403
2744 -> 1071
2744 -> 1340
2744 -> 2639
2744 -> 2676
2745 -> 402
2745 -> 1071
2745 -> 1340
2745 -> 2639
2745 -> 2676
2746 -> 400
2746 -> 1071
2746 -> 1340
2746 -> 2639
2746 -> 2676
2747 -> 399
2747 -> 1071
2747 -> 1340
2747 -> 2639
2747 -> 2676
2748 -> 398
2748 -> 1071
2748 -> 1340
2748 -> 2639
2748 -> 2676
2749 -> 396
2749 -> 1071
2749 -> 1340
2749 -> 2639
2749 -> 2676
2750 -> 3
2750 -> 5
2750 -> 84
2750 -> 1340
2750 -> 2670
2751 -> 1071
2751 -> 1340
2751 -> 2645
2752 -> 1071
2752 -> 1340
2752 -> 2753
2753 -> 284
2754 -> 1071
2754 -> 1340
2754 -> 1895
2755 -> 1071
2755 -> 1340
2755 -> 2756
2756 -> 7
2756 -> 41
2756 -> 81
2756 -> 94
2756 -> 282
2756 -> 287
2756 -> 2620
2757 -> 9
2757 -> 467
2757 -> 1071
2757 -> 1340
2757 -> 2676
2758 -> 11
2758 -> 467
2758 -> 1071
2758 -> 1340
2758 -> 2676
2759 -> 13
2759 -> 467
2759 -> 1071
2759 -> 1340
2759 -> 2676
2760 -> 15
2760 -> 467
2760 -> 1071
2760 -> 1340
2760 -> 2676
2761 -> 17
2761 -> 467
2761 -> 1071
2761 -> 1340
2761 -> 2676
2762 -> 19
2762 -> 467
2762 -> 1071
2762 -> 1340
2762 -> 2676
2763 -> 21
2763 -> 467
2763 -> 1071
2763 -> 1340
2763 -> 2676
2764 -> 23
2764 -> 467
2764 -> 1071
2764 -> 1340
2764 -> 2676
2765 -> 25
2765 -> 467
2765 -> 1071
2765 -> 1340
2765 -> 2676
2766 -> 27
2766 -> 467
2766 -> 1071
2766 -> 1340
2766 -> 2676
2767 -> 29
2767 -> 467
2767 -> 1071
2767 -> 1340
2767 -> 2676
2768 -> 31
2768 -> 467
2768 -> 1071
2768 -> 1340
2768 -> 2676
2769 -> 35
2769 -> 467
2769 -> 1071
2769 -> 1340
2769 -> 2676
2770 -> 39
2770 -> 467
2770 -> 1071
2770 -> 1340
2770 -> 2676
2771 -> 43
2771 -> 467
2771 -> 1071
2771 -> 1340
2771 -> 2676
2772 -> 41
2772 -> 467
2772 -> 1071
2772 -> 1340
2772 -> 2676
2773 -> 9
2773 -> 1340
2773 -> 2670
2774 -> 11
2774 -> 1340
2774 -> 2670
2775 -> 15
2775 -> 1340
2775 -> 2670
2776 -> 13
2776 -> 1340
2776 -> 2670
2777 -> 17
2777 -> 1340
2777 -> 2670
2778 -> 19
2778 -> 1340
2778 -> 2670
2779 -> 21
2779 -> 1340
2779 -> 2670
2780 -> 23
2780 -> 1340
2780 -> 2670
2781 -> 25
2781 -> 1340
2781 -> 2670
2782 -> 27
2782 -> 1340
2782 -> 2670
2783 -> 29
2783 -> 1340
2783 -> 2670
2784 -> 31
2784 -> 1340
2784 -> 2670
2785 -> 33
2785 -> 1340
2785 -> 2670
2786 -> 35
2786 -> 1340
2786 -> 2670
2787 -> 37
2787 -> 1340
2787 -> 2670
2788 -> 39
2788 -> 1340
2788 -> 2670
2789 -> 41
2789 -> 1340
2789 -> 2670
2790 -> 43
2790 -> 1340
2790 -> 2670
2791 -> 499
2791 -> 2792
2792 -> 60
2793 -> 2794
2794 -> 499
2794 -> 2792
2795 -> 5
2795 -> 228
2795 -> 229
2795 -> 231
2795 -> 233
2795 -> 706
2795 -> 874
2796 -> 2794
2797 -> 647
2797 -> 2798
2797 -> 2799
2800 -> 107
2801 -> 1406
2802 -> 60
2803 -> 2804
2804 -> 60
2805 -> 9
2805 -> 11
2805 -> 13
2805 -> 15
2805 -> 17
2805 -> 19
2805 -> 21
2805 -> 23
2805 -> 25
2805 -> 27
2805 -> 29
2805 -> 31
2805 -> 33
2805 -> 35
2805 -> 37
2805 -> 39
2805 -> 41
2805 -> 43
2805 -> 94
2805 -> 410
2805 -> 411
2805 -> 412
2805 -> 413
2805 -> 414
2805 -> 2806
2807 -> 348
2807 -> 349
2807 -> 350
2807 -> 351
2807 -> 352
2807 -> 353
2807 -> 354
2807 -> 355
2807 -> 493
2807 -> 501
2807 -> 508
2807 -> 510
2807 -> 2803
2808 -> 5
2808 -> 84
2809 -> 1406
2810 -> 60
2811 -> 2812
2813 -> 60
2814 -> 60
2815 -> 2812
2816 -> 736
2816 -> 2810
2816 -> 2817
2816 -> 2818
2816 -> 2819
2818 -> 736
2818 -> 2006
2820 -> 60
2822 -> 2823
2823 -> 1250
2823 -> 1251
2823 -> 1252
2824 -> 2813
2824 -> 2823
2825 -> 2814
2825 -> 2823
2826 -> 3
2826 -> 2823
2827 -> 111
2827 -> 1398
2830 -> 2819
2830 -> 2831
2832 -> 2833
2832 -> 2834
2835 -> 60
2836 -> 2837
2838 -> 2839
2840 -> 2006
2841 -> 2442
2841 -> 2842
2841 -> 2843
2842 -> 3
2842 -> 535
2842 -> 1966
2842 -> 2162
2842 -> 2847
2842 -> 2856
2842 -> 2857
2843 -> 2862
2846 -> 3
2846 -> 1250
2846 -> 1251
2846 -> 1252
2848 -> 157
2848 -> 1323
2848 -> 2863
2848 -> 2865
2849 -> 73
2849 -> 79
2849 -> 80
2849 -> 1931
2850 -> 727
2850 -> 731
2850 -> 736
2850 -> 926
2850 -> 2442
2850 -> 2573
2851 -> 2852
2852 -> 3
2852 -> 643
2852 -> 1579
2852 -> 1885
2854 -> 727
2854 -> 731
2854 -> 736
2855 -> 1250
2855 -> 1251
2855 -> 1252
2855 -> 2842
2856 -> 2474
2856 -> 2560
2856 -> 2570
2856 -> 2844
2856 -> 2858
2856 -> 2859
2856 -> 2860
2861 -> 1250
2861 -> 1251
2861 -> 1252
2861 -> 2843
2862 -> 2465
2862 -> 2844
2862 -> 2858
2862 -> 2859
2862 -> 2860
2863 -> 417
2864 -> 320
2864 -> 537
2865 -> 1849
2865 -> 1850
2865 -> 2067
2866 -> 1993
2868 -> 1992
2870 -> 6
2870 -> 111
2870 -> 1162
2871 -> 1162
2871 -> 2324
2872 -> 546
2872 -> 1043
2872 -> 1162
2872 -> 1181
2872 -> 2336
2873 -> 1149
2873 -> 2874
2874 -> 95
2874 -> 734
2874 -> 848
2874 -> 3193
2874 -> 3194
2874 -> 3195
2874 -> 3196
2874 -> 3197
2874 -> 3198
2874 -> 3199
2875 -> 546
2876 -> 2835
2877 -> 215
2877 -> 1334
2877 -> 2878
2877 -> 2879
2878 -> 376
2879 -> 351
2879 -> 3777
2880 -> 2878
2881 -> 351
2881 -> 366
2881 -> 2880
2882 -> 94
2882 -> 162
2882 -> 368
2882 -> 369
2882 -> 402
2882 -> 2880
2882 -> 2883
2884 -> 351
2884 -> 366
2884 -> 2880
2884 -> 2885
2884 -> 2886
2887 -> 370
2887 -> 2880
2888 -> 1338
2888 -> 2880
2888 -> 2889
2889 -> 3635
2889 -> 3641
2890 -> 382
2890 -> 2880
2891 -> 351
2892 -> 2879
2893 -> 382
2893 -> 2894
2894 -> 3894
2895 -> 382
2895 -> 1579
2895 -> 2896
2896 -> 2948
2897 -> 382
2897 -> 1579
2897 -> 2898
2898 -> 3369
2899 -> 382
2899 -> 1579
2899 -> 2900
2900 -> 3803
2901 -> 63
2901 -> 382
2902 -> 382
2903 -> 360
2903 -> 382
2903 -> 2880
2904 -> 382
2904 -> 2903
2905 -> 1578
2905 -> 2903
2906 -> 382
2906 -> 2905
2907 -> 382
2907 -> 1579
2907 -> 2880
2908 -> 382
2908 -> 2880
2909 -> 382
2909 -> 1578
2909 -> 2880
2910 -> 382
2911 -> 382
2912 -> 378
2912 -> 382
2913 -> 63
2914 -> 2915
2915 -> 243
2916 -> 63
2916 -> 374
2917 -> 63
2917 -> 374
2918 -> 63
2918 -> 374
2919 -> 63
2919 -> 374
2920 -> 63
2921 -> 242
2922 -> 247
2923 -> 247
2924 -> 247
2925 -> 247
2926 -> 375
2926 -> 2880
2926 -> 2922
2927 -> 375
2927 -> 2896
2927 -> 2923
2928 -> 375
2928 -> 2898
2928 -> 2924
2929 -> 375
2929 -> 2900
2929 -> 2925
2930 -> 63
2930 -> 247
2931 -> 63
2931 -> 148
2931 -> 247
2931 -> 374
2932 -> 62
2932 -> 2931
2933 -> 2931
2934 -> 62
2934 -> 2931
2935 -> 2931
2936 -> 62
2936 -> 2931
2937 -> 63
2937 -> 247
2937 -> 1459
2938 -> 63
2938 -> 247
2938 -> 1580
2939 -> 63
2939 -> 247
2939 -> 1043
2940 -> 481
2940 -> 1043
2941 -> 2942
2942 -> 60
2943 -> 94
2943 -> 396
2943 -> 398
2943 -> 399
2943 -> 400
2943 -> 401
2943 -> 402
2943 -> 403
2943 -> 404
2943 -> 405
2943 -> 406
2943 -> 407
2943 -> 408
2943 -> 2806
2944 -> 2941
2945 -> 367
2945 -> 415
2946 -> 343
2947 -> 215
2947 -> 1334
2947 -> 2948
2947 -> 2949
2948 -> 376
2949 -> 352
2949 -> 3777
2950 -> 352
2950 -> 366
2950 -> 2896
2951 -> 94
2951 -> 162
2951 -> 368
2951 -> 369
2951 -> 400
2951 -> 2896
2951 -> 2952
2953 -> 352
2953 -> 366
2953 -> 2885
2953 -> 2886
2953 -> 2896
2954 -> 370
2954 -> 2896
2955 -> 1338
2955 -> 2896
2955 -> 2956
2956 -> 3635
2956 -> 3641
2957 -> 382
2957 -> 2896
2958 -> 352
2959 -> 2949
2960 -> 382
2960 -> 2894
2961 -> 382
2961 -> 2880
2962 -> 382
2962 -> 1579
2962 -> 2898
2963 -> 382
2963 -> 1579
2963 -> 2900
2964 -> 63
2964 -> 382
2965 -> 382
2966 -> 360
2966 -> 382
2966 -> 2896
2967 -> 382
2967 -> 2966
2968 -> 1578
2968 -> 2966
2969 -> 382
2969 -> 2968
2970 -> 382
2970 -> 1579
2970 -> 2896
2971 -> 382
2971 -> 2896
2972 -> 382
2972 -> 1578
2972 -> 2896
2973 -> 382
2974 -> 382
2975 -> 378
2975 -> 382
2976 -> 544
2976 -> 545
2976 -> 548
2976 -> 1275
2976 -> 2977
2978 -> 73
2978 -> 74
2978 -> 79
2978 -> 80
2979 -> 3
2979 -> 343
2979 -> 1069
2979 -> 2976
2980 -> 3
2980 -> 343
2980 -> 1069
2980 -> 2978
2981 -> 3
2981 -> 1069
2981 -> 2978
2982 -> 2983
2984 -> 55
2984 -> 56
2984 -> 87
2986 -> 2987
2987 -> 1
2987 -> 111
2988 -> 1322
2988 -> 2989
2989 -> 86
2989 -> 1339
2990 -> 1
2990 -> 228
2990 -> 229
2990 -> 231
2990 -> 328
2991 -> 87
2992 -> 850
2992 -> 2625
2992 -> 2991
2992 -> 2993
2993 -> 328
2994 -> 62
2994 -> 2992
2995 -> 2992
2996 -> 2994
2997 -> 2992
2998 -> 2994
2999 -> 92
2999 -> 219
2999 -> 850
3000 -> 2999
3001 -> 100
3001 -> 219
3001 -> 850
3002 -> 3001
3003 -> 3004
3004 -> 273
3005 -> 91
3005 -> 265
3006 -> 266
3007 -> 270
3008 -> 272
3009 -> 273
3010 -> 125
3010 -> 128
3010 -> 133
3010 -> 144
3010 -> 278
3010 -> 279
3010 -> 280
3010 -> 2827
3010 -> 3011
3010 -> 3012
3013 -> 125
3013 -> 128
3013 -> 144
3013 -> 278
3013 -> 279
3013 -> 280
3013 -> 2827
3014 -> 111
3014 -> 125
3014 -> 128
3014 -> 279
3014 -> 280
3015 -> 144
3015 -> 278
3015 -> 279
3015 -> 280
3016 -> 144
3016 -> 278
3016 -> 279
3016 -> 280
3017 -> 113
3017 -> 3016
3018 -> 144
3018 -> 278
3018 -> 279
3018 -> 280
3019 -> 113
3019 -> 3018
3020 -> 144
3020 -> 147
3020 -> 268
3020 -> 278
3020 -> 279
3020 -> 2625
3021 -> 144
3021 -> 147
3021 -> 268
3021 -> 278
3021 -> 280
3021 -> 2625
3022 -> 144
3022 -> 271
3022 -> 278
3022 -> 279
3022 -> 3020
3023 -> 144
3023 -> 271
3023 -> 278
3023 -> 280
3023 -> 3021
3025 -> 1370
3026 -> 164
3026 -> 991
3027 -> 5
3027 -> 993
3027 -> 3028
3029 -> 2883
3030 -> 3028
3031 -> 782
3031 -> 2883
3031 -> 3032
3032 -> 27
3032 -> 706
3032 -> 852
3032 -> 2883
3032 -> 3028
3033 -> 968
3033 -> 2883
3033 -> 3032
3034 -> 467
3034 -> 2883
3034 -> 3032
3035 -> 794
3035 -> 2883
3035 -> 3032
3036 -> 3035
3037 -> 1393
3037 -> 3034
3038 -> 1391
3038 -> 3034
3039 -> 706
3039 -> 2883
3039 -> 3032
3040 -> 815
3040 -> 2883
3040 -> 3032
3041 -> 1107
3041 -> 2883
3041 -> 3032
3042 -> 1109
3042 -> 2883
3042 -> 3032
3043 -> 1111
3043 -> 2883
3043 -> 3032
3044 -> 348
3044 -> 349
3044 -> 350
3044 -> 351
3044 -> 501
3044 -> 508
3044 -> 510
3044 -> 1963
3044 -> 2435
3045 -> 3046
3046 -> 111
3046 -> 219
3046 -> 852
3047 -> 2601
3047 -> 3048
3048 -> 91
3048 -> 111
3048 -> 852
3049 -> 2601
3049 -> 3050
3050 -> 111
3050 -> 852
3051 -> 3052
3051 -> 3053
3053 -> 1890
3054 -> 3
3054 -> 2486
3054 -> 3055
3056 -> 3
3056 -> 50
3056 -> 1236
3056 -> 2486
3056 -> 3054
3056 -> 3057
3056 -> 3058
3056 -> 3059
3056 -> 3060
3061 -> 219
3061 -> 852
3062 -> 91
3062 -> 852
3063 -> 3064
3064 -> 94
3064 -> 228
3064 -> 282
3064 -> 287
3064 -> 290
3064 -> 291
3064 -> 294
3064 -> 421
3064 -> 3052
3065 -> 94
3065 -> 228
3065 -> 282
3065 -> 287
3065 -> 290
3065 -> 294
3065 -> 421
3065 -> 3052
3065 -> 3066
3067 -> 94
3067 -> 282
3067 -> 287
3067 -> 421
3068 -> 81
3068 -> 287
3068 -> 328
3068 -> 535
3068 -> 852
3069 -> 17
3069 -> 21
3069 -> 27
3069 -> 379
3070 -> 7
3070 -> 17
3070 -> 21
3070 -> 27
3070 -> 379
3070 -> 2883
3070 -> 3028
3071 -> 3
3071 -> 5
3071 -> 7
3071 -> 2883
3071 -> 3028
3071 -> 3072
3072 -> 5
3072 -> 84
3072 -> 176
3072 -> 367
3072 -> 373
3072 -> 402
3072 -> 1966
3072 -> 3028
3073 -> 367
3073 -> 373
3073 -> 402
3073 -> 415
3073 -> 1966
3073 -> 3028
3074 -> 181
3074 -> 647
3075 -> 183
3076 -> 184
3076 -> 647
3077 -> 2721
3078 -> 3079
3079 -> 95
3079 -> 734
3079 -> 848
3079 -> 853
3079 -> 2489
3079 -> 2490
3079 -> 3028
3080 -> 3081
3081 -> 92
3081 -> 95
3081 -> 111
3081 -> 180
3081 -> 848
3081 -> 3028
3082 -> 3083
3083 -> 95
3083 -> 848
3083 -> 853
3083 -> 2489
3083 -> 2490
3083 -> 2616
3083 -> 3028
3084 -> 3
3084 -> 1895
3084 -> 2883
3084 -> 2952
3084 -> 3028
3084 -> 3085
3086 -> 3087
3087 -> 3
3087 -> 92
3087 -> 95
3087 -> 111
3087 -> 180
3087 -> 3028
3087 -> 3085
3088 -> 3089
3089 -> 848
3089 -> 2488
3089 -> 2721
3089 -> 3006
3090 -> 103
3090 -> 187
3090 -> 853
3090 -> 1236
3090 -> 2489
3090 -> 2490
3090 -> 2845
3090 -> 3056
3090 -> 3060
3090 -> 3074
3090 -> 3091
3090 -> 3092
3090 -> 3093
3094 -> 180
3094 -> 2883
3094 -> 3028
3094 -> 3032
3095 -> 3
3095 -> 5
3095 -> 467
3095 -> 2883
3095 -> 3028
3095 -> 3032
3095 -> 3072
3096 -> 3
3096 -> 367
3096 -> 479
3096 -> 2883
3096 -> 3028
3096 -> 3032
3096 -> 3073
3097 -> 200
3097 -> 211
3097 -> 212
3097 -> 367
3097 -> 481
3097 -> 1579
3097 -> 2883
3097 -> 3028
3097 -> 3032
3097 -> 3073
3098 -> 3097
3099 -> 406
3099 -> 479
3099 -> 2883
3099 -> 3028
3099 -> 3032
3100 -> 403
3100 -> 479
3100 -> 2883
3100 -> 3028
3100 -> 3032
3101 -> 3097
3102 -> 406
3102 -> 2639
3102 -> 2883
3102 -> 3028
3102 -> 3032
3103 -> 405
3103 -> 2639
3103 -> 2883
3103 -> 3028
3103 -> 3032
3104 -> 403
3104 -> 2639
3104 -> 2883
3104 -> 3028
3104 -> 3032
3105 -> 402
3105 -> 2639
3105 -> 2883
3105 -> 3028
3105 -> 3032
3106 -> 3
3106 -> 5
3106 -> 3025
3106 -> 3028
3106 -> 3072
3107 -> 7
3107 -> 9
3107 -> 2883
3107 -> 3028
3108 -> 7
3108 -> 11
3108 -> 2883
3108 -> 3028
3109 -> 7
3109 -> 13
3109 -> 2883
3109 -> 3028
3110 -> 7
3110 -> 15
3110 -> 2883
3110 -> 3028
3111 -> 7
3111 -> 19
3111 -> 2883
3111 -> 3028
3112 -> 7
3112 -> 23
3112 -> 2883
3112 -> 3028
3113 -> 7
3113 -> 25
3113 -> 2883
3113 -> 3028
3114 -> 7
3114 -> 29
3114 -> 2883
3114 -> 3028
3115 -> 9
3115 -> 467
3115 -> 2883
3115 -> 3028
3115 -> 3032
3116 -> 11
3116 -> 467
3116 -> 2883
3116 -> 3028
3116 -> 3032
3117 -> 13
3117 -> 467
3117 -> 2883
3117 -> 3028
3117 -> 3032
3118 -> 15
3118 -> 467
3118 -> 2883
3118 -> 3028
3118 -> 3032
3119 -> 17
3119 -> 467
3119 -> 2883
3119 -> 3028
3119 -> 3032
3120 -> 19
3120 -> 467
3120 -> 2883
3120 -> 3028
3120 -> 3032
3121 -> 21
3121 -> 467
3121 -> 2883
3121 -> 3028
3121 -> 3032
3122 -> 23
3122 -> 467
3122 -> 2883
3122 -> 3028
3122 -> 3032
3123 -> 25
3123 -> 467
3123 -> 2883
3123 -> 3028
3123 -> 3032
3124 -> 27
3124 -> 467
3124 -> 2883
3124 -> 3028
3124 -> 3032
3125 -> 29
3125 -> 467
3125 -> 2883
3125 -> 3028
3125 -> 3032
3126 -> 9
3126 -> 3025
3126 -> 3028
3127 -> 11
3127 -> 3025
3127 -> 3028
3128 -> 15
3128 -> 3025
3128 -> 3028
3129 -> 13
3129 -> 3025
3129 -> 3028
3130 -> 17
3130 -> 3025
3130 -> 3028
3131 -> 19
3131 -> 3025
3131 -> 3028
3132 -> 21
3132 -> 3025
3132 -> 3028
3133 -> 23
3133 -> 3025
3133 -> 3028
3134 -> 25
3134 -> 3025
3134 -> 3028
3135 -> 27
3135 -> 3025
3135 -> 3028
3136 -> 29
3136 -> 3025
3136 -> 3028
3137 -> 191
3137 -> 875
3138 -> 55
3138 -> 191
3138 -> 3137
3139 -> 55
3139 -> 58
3139 -> 191
3139 -> 3137
3140 -> 1370
3141 -> 164
3141 -> 991
3142 -> 5
3142 -> 993
3142 -> 3143
3144 -> 3145
3146 -> 3143
3147 -> 782
3147 -> 3145
3147 -> 3148
3148 -> 1895
3148 -> 3143
3148 -> 3145
3149 -> 784
3149 -> 3145
3149 -> 3148
3150 -> 968
3150 -> 3145
3150 -> 3148
3151 -> 467
3151 -> 3145
3151 -> 3148
3152 -> 794
3152 -> 3145
3152 -> 3148
3153 -> 3152
3154 -> 1393
3154 -> 3151
3155 -> 1391
3155 -> 3151
3156 -> 706
3156 -> 3145
3156 -> 3148
3157 -> 815
3157 -> 3145
3157 -> 3148
3158 -> 1107
3158 -> 3145
3158 -> 3148
3159 -> 1109
3159 -> 3145
3159 -> 3148
3160 -> 1111
3160 -> 3145
3160 -> 3148
3161 -> 3162
3162 -> 111
3162 -> 219
3162 -> 1895
3163 -> 2601
3163 -> 3164
3164 -> 91
3164 -> 111
3164 -> 1895
3165 -> 2601
3165 -> 3166
3166 -> 111
3166 -> 1895
3167 -> 3168
3167 -> 3169
3169 -> 1891
3170 -> 3
3170 -> 3055
3170 -> 3171
3171 -> 328
3171 -> 3182
3172 -> 3
3172 -> 50
3172 -> 1236
3172 -> 3057
3172 -> 3058
3172 -> 3059
3172 -> 3060
3172 -> 3170
3172 -> 3171
3172 -> 3173
3172 -> 3174
3172 -> 3175
3176 -> 219
3176 -> 1895
3177 -> 91
3177 -> 1895
3178 -> 3179
3179 -> 94
3179 -> 228
3179 -> 282
3179 -> 287
3179 -> 290
3179 -> 291
3179 -> 294
3179 -> 421
3179 -> 3168
3180 -> 94
3180 -> 228
3180 -> 282
3180 -> 287
3180 -> 290
3180 -> 294
3180 -> 421
3180 -> 3066
3180 -> 3168
3181 -> 328
3181 -> 3182
3182 -> 94
3182 -> 237
3182 -> 282
3182 -> 287
3183 -> 328
3183 -> 3182
3184 -> 81
3184 -> 287
3184 -> 328
3184 -> 535
3184 -> 1895
3185 -> 17
3185 -> 21
3185 -> 27
3185 -> 41
3185 -> 379
3186 -> 7
3186 -> 17
3186 -> 21
3186 -> 27
3186 -> 41
3186 -> 379
3186 -> 3143
3186 -> 3145
3187 -> 3
3187 -> 5
3187 -> 7
3187 -> 3143
3187 -> 3145
3188 -> 5
3188 -> 84
3188 -> 3143
3189 -> 367
3189 -> 415
3189 -> 3143
3190 -> 181
3190 -> 647
3191 -> 184
3191 -> 647
3192 -> 2874
3193 -> 7
3193 -> 17
3193 -> 3143
3193 -> 3145
3194 -> 7
3194 -> 21
3194 -> 3143
3194 -> 3145
3195 -> 7
3195 -> 27
3195 -> 3143
3195 -> 3145
3196 -> 7
3196 -> 31
3196 -> 3143
3196 -> 3145
3197 -> 7
3197 -> 35
3197 -> 3143
3197 -> 3145
3198 -> 7
3198 -> 39
3198 -> 3143
3198 -> 3145
3199 -> 7
3199 -> 43
3199 -> 3143
3199 -> 3145
3200 -> 1236
3200 -> 2845
3200 -> 3092
3200 -> 3193
3200 -> 3194
3200 -> 3195
3200 -> 3196
3200 -> 3197
3200 -> 3198
3200 -> 3199
3200 -> 3201
3200 -> 3202
3202 -> 50
3202 -> 187
3202 -> 1238
3202 -> 3093
3202 -> 3170
3202 -> 3190
3202 -> 3204
3202 -> 3207
3202 -> 3208
3203 -> 1236
3203 -> 1238
3203 -> 3092
3203 -> 3193
3203 -> 3194
3203 -> 3195
3203 -> 3196
3203 -> 3197
3203 -> 3198
3203 -> 3199
3203 -> 3202
3203 -> 3204
3203 -> 3205
3203 -> 3206
3209 -> 17
3209 -> 21
3209 -> 27
3209 -> 467
3209 -> 3143
3209 -> 3145
3209 -> 3148
3210 -> 31
3210 -> 35
3210 -> 39
3210 -> 43
3210 -> 467
3210 -> 3143
3210 -> 3145
3210 -> 3148
3211 -> 180
3211 -> 3143
3211 -> 3145
3211 -> 3148
3212 -> 3
3212 -> 5
3212 -> 467
3212 -> 3143
3212 -> 3145
3212 -> 3148
3213 -> 3
3213 -> 367
3213 -> 479
3213 -> 3143
3213 -> 3145
3213 -> 3148
3214 -> 62
3214 -> 2625
3214 -> 3143
3214 -> 3145
3214 -> 3148
3215 -> 271
3215 -> 3143
3215 -> 3145
3215 -> 3148
3216 -> 3214
3217 -> 3215
3218 -> 406
3218 -> 479
3218 -> 3143
3218 -> 3145
3218 -> 3148
3219 -> 405
3219 -> 479
3219 -> 3143
3219 -> 3145
3219 -> 3148
3220 -> 403
3220 -> 479
3220 -> 3143
3220 -> 3145
3220 -> 3148
3221 -> 402
3221 -> 479
3221 -> 3143
3221 -> 3145
3221 -> 3148
3222 -> 400
3222 -> 479
3222 -> 3143
3222 -> 3145
3222 -> 3148
3223 -> 399
3223 -> 479
3223 -> 3143
3223 -> 3145
3223 -> 3148
3224 -> 398
3224 -> 479
3224 -> 3143
3224 -> 3145
3224 -> 3148
3225 -> 396
3225 -> 479
3225 -> 3143
3225 -> 3145
3225 -> 3148
3226 -> 3214
3227 -> 3215
3228 -> 406
3228 -> 2639
3228 -> 3143
3228 -> 3145
3228 -> 3148
3229 -> 405
3229 -> 2639
3229 -> 3143
3229 -> 3145
3229 -> 3148
3230 -> 403
3230 -> 2639
3230 -> 3143
3230 -> 3145
3230 -> 3148
3231 -> 402
3231 -> 2639
3231 -> 3143
3231 -> 3145
3231 -> 3148
3232 -> 400
3232 -> 2639
3232 -> 3143
3232 -> 3145
3232 -> 3148
3233 -> 399
3233 -> 2639
3233 -> 3143
3233 -> 3145
3233 -> 3148
3234 -> 398
3234 -> 2639
3234 -> 3143
3234 -> 3145
3234 -> 3148
3235 -> 396
3235 -> 2639
3235 -> 3143
3235 -> 3145
3235 -> 3148
3236 -> 3
3236 -> 5
3236 -> 3140
3236 -> 3143
3236 -> 3188
3237 -> 7
3237 -> 9
3237 -> 3143
3237 -> 3145
3238 -> 7
3238 -> 11
3238 -> 3143
3238 -> 3145
3239 -> 7
3239 -> 13
3239 -> 3143
3239 -> 3145
3240 -> 7
3240 -> 15
3240 -> 3143
3240 -> 3145
3241 -> 7
3241 -> 19
3241 -> 3143
3241 -> 3145
3242 -> 7
3242 -> 23
3242 -> 3143
3242 -> 3145
3243 -> 7
3243 -> 25
3243 -> 3143
3243 -> 3145
3244 -> 7
3244 -> 29
3244 -> 3143
3244 -> 3145
3245 -> 7
3245 -> 41
3245 -> 3143
3245 -> 3145
3246 -> 9
3246 -> 467
3246 -> 3143
3246 -> 3145
3246 -> 3148
3247 -> 11
3247 -> 467
3247 -> 3143
3247 -> 3145
3247 -> 3148
3248 -> 13
3248 -> 467
3248 -> 3143
3248 -> 3145
3248 -> 3148
3249 -> 15
3249 -> 467
3249 -> 3143
3249 -> 3145
3249 -> 3148
3250 -> 17
3250 -> 467
3250 -> 3143
3250 -> 3145
3250 -> 3148
3251 -> 19
3251 -> 467
3251 -> 3143
3251 -> 3145
3251 -> 3148
3252 -> 21
3252 -> 467
3252 -> 3143
3252 -> 3145
3252 -> 3148
3253 -> 23
3253 -> 467
3253 -> 3143
3253 -> 3145
3253 -> 3148
3254 -> 25
3254 -> 467
3254 -> 3143
3254 -> 3145
3254 -> 3148
3255 -> 27
3255 -> 467
3255 -> 3143
3255 -> 3145
3255 -> 3148
3256 -> 29
3256 -> 467
3256 -> 3143
3256 -> 3145
3256 -> 3148
3257 -> 31
3257 -> 467
3257 -> 3143
3257 -> 3145
3257 -> 3148
3258 -> 35
3258 -> 467
3258 -> 3143
3258 -> 3145
3258 -> 3148
3259 -> 39
3259 -> 467
3259 -> 3143
3259 -> 3145
3259 -> 3148
3260 -> 43
3260 -> 467
3260 -> 3143
3260 -> 3145
3260 -> 3148
3261 -> 41
3261 -> 467
3261 -> 3143
3261 -> 3145
3261 -> 3148
3262 -> 9
3262 -> 3140
3262 -> 3143
3263 -> 11
3263 -> 3140
3263 -> 3143
3264 -> 15
3264 -> 3140
3264 -> 3143
3265 -> 13
3265 -> 3140
3265 -> 3143
3266 -> 17
3266 -> 3140
3266 -> 3143
3267 -> 19
3267 -> 3140
3267 -> 3143
3268 -> 21
3268 -> 3140
3268 -> 3143
3269 -> 23
3269 -> 3140
3269 -> 3143
3270 -> 25
3270 -> 3140
3270 -> 3143
3271 -> 27
3271 -> 3140
3271 -> 3143
3272 -> 29
3272 -> 3140
3272 -> 3143
3273 -> 31
3273 -> 3140
3273 -> 3143
3274 -> 35
3274 -> 3140
3274 -> 3143
3275 -> 39
3275 -> 3140
3275 -> 3143
3276 -> 43
3276 -> 3140
3276 -> 3143
3277 -> 41
3277 -> 3140
3277 -> 3143
3278 -> 120
3278 -> 191
3279 -> 55
3279 -> 191
3279 -> 3278
3280 -> 55
3280 -> 58
3280 -> 191
3280 -> 3278
3281 -> 1370
3282 -> 164
3282 -> 991
3283 -> 5
3283 -> 993
3283 -> 3085
3284 -> 2952
3285 -> 3085
3286 -> 782
3286 -> 2952
3286 -> 3287
3287 -> 2756
3287 -> 2952
3287 -> 3085
3288 -> 784
3288 -> 2952
3288 -> 3287
3289 -> 3
3289 -> 7
3289 -> 41
3289 -> 782
3289 -> 2952
3289 -> 3085
3289 -> 3287
3290 -> 968
3290 -> 2952
3290 -> 3287
3291 -> 467
3291 -> 2952
3291 -> 3287
3292 -> 794
3292 -> 2952
3292 -> 3287
3293 -> 3292
3294 -> 1393
3294 -> 3291
3295 -> 1391
3295 -> 3291
3296 -> 706
3296 -> 2952
3296 -> 3287
3297 -> 815
3297 -> 2952
3297 -> 3287
3298 -> 1107
3298 -> 2952
3298 -> 3287
3299 -> 1109
3299 -> 2952
3299 -> 3287
3300 -> 1111
3300 -> 2952
3300 -> 3287
3301 -> 352
3301 -> 353
3301 -> 354
3301 -> 355
3301 -> 1963
3301 -> 2435
3301 -> 3302
3302 -> 328
3302 -> 3322
3303 -> 3304
3304 -> 111
3304 -> 219
3304 -> 2756
3305 -> 2601
3305 -> 3306
3306 -> 91
3306 -> 111
3306 -> 2756
3307 -> 2601
3307 -> 3308
3308 -> 111
3308 -> 2756
3309 -> 3310
3309 -> 3311
3311 -> 1893
3312 -> 3313
3313 -> 94
3313 -> 287
3313 -> 2756
3314 -> 3
3314 -> 3055
3314 -> 3302
3315 -> 3
3315 -> 1236
3315 -> 3173
3315 -> 3174
3315 -> 3175
3315 -> 3302
3316 -> 219
3316 -> 2756
3317 -> 91
3317 -> 2756
3318 -> 3319
3319 -> 94
3319 -> 228
3319 -> 282
3319 -> 287
3319 -> 290
3319 -> 291
3319 -> 294
3319 -> 426
3319 -> 3310
3320 -> 94
3320 -> 228
3320 -> 282
3320 -> 287
3320 -> 290
3320 -> 294
3320 -> 426
3320 -> 3066
3320 -> 3310
3321 -> 328
3321 -> 3322
3322 -> 94
3322 -> 282
3322 -> 287
3322 -> 426
3323 -> 328
3323 -> 3322
3324 -> 81
3324 -> 287
3324 -> 328
3324 -> 535
3324 -> 2756
3325 -> 31
3325 -> 35
3325 -> 39
3325 -> 43
3325 -> 379
3326 -> 7
3326 -> 31
3326 -> 35
3326 -> 39
3326 -> 43
3326 -> 379
3326 -> 2952
3326 -> 3085
3327 -> 3
3327 -> 5
3327 -> 7
3327 -> 2952
3327 -> 3085
3327 -> 3328
3328 -> 176
3328 -> 351
3328 -> 1644
3328 -> 3329
3329 -> 367
3329 -> 373
3329 -> 402
3329 -> 415
3329 -> 1966
3329 -> 3085
3330 -> 181
3330 -> 647
3331 -> 184
3331 -> 647
3332 -> 180
3332 -> 2952
3332 -> 3085
3332 -> 3287
3333 -> 3
3333 -> 5
3333 -> 467
3333 -> 2952
3333 -> 3085
3333 -> 3287
3333 -> 3328
3334 -> 3
3334 -> 367
3334 -> 479
3334 -> 2952
3334 -> 3085
3334 -> 3287
3334 -> 3329
3335 -> 271
3335 -> 2952
3335 -> 3085
3335 -> 3287
3336 -> 3335
3337 -> 400
3337 -> 479
3337 -> 2952
3337 -> 3085
3337 -> 3287
3338 -> 399
3338 -> 479
3338 -> 2952
3338 -> 3085
3338 -> 3287
3339 -> 398
3339 -> 479
3339 -> 2952
3339 -> 3085
3339 -> 3287
3340 -> 396
3340 -> 479
3340 -> 2952
3340 -> 3085
3340 -> 3287
3341 -> 3335
3342 -> 400
3342 -> 2639
3342 -> 2952
3342 -> 3085
3342 -> 3287
3343 -> 399
3343 -> 2639
3343 -> 2952
3343 -> 3085
3343 -> 3287
3344 -> 398
3344 -> 2639
3344 -> 2952
3344 -> 3085
3344 -> 3287
3345 -> 396
3345 -> 2639
3345 -> 2952
3345 -> 3085
3345 -> 3287
3346 -> 3
3346 -> 5
3346 -> 3085
3346 -> 3281
3346 -> 3328
3347 -> 7
3347 -> 31
3347 -> 2952
3347 -> 3085
3348 -> 7
3348 -> 35
3348 -> 2952
3348 -> 3085
3349 -> 7
3349 -> 39
3349 -> 2952
3349 -> 3085
3350 -> 7
3350 -> 43
3350 -> 2952
3350 -> 3085
3351 -> 7
3351 -> 41
3351 -> 2952
3351 -> 3085
3352 -> 31
3352 -> 467
3352 -> 2952
3352 -> 3085
3352 -> 3287
3353 -> 35
3353 -> 467
3353 -> 2952
3353 -> 3085
3353 -> 3287
3354 -> 39
3354 -> 467
3354 -> 2952
3354 -> 3085
3354 -> 3287
3355 -> 43
3355 -> 467
3355 -> 2952
3355 -> 3085
3355 -> 3287
3356 -> 41
3356 -> 467
3356 -> 2952
3356 -> 3085
3356 -> 3287
3357 -> 31
3357 -> 3085
3357 -> 3281
3358 -> 35
3358 -> 3085
3358 -> 3281
3359 -> 39
3359 -> 3085
3359 -> 3281
3360 -> 43
3360 -> 3085
3360 -> 3281
3361 -> 41
3361 -> 3085
3361 -> 3281
3362 -> 3363
3363 -> 92
3363 -> 95
3363 -> 111
3363 -> 180
3363 -> 3085
3364 -> 191
3364 -> 3365
3366 -> 55
3366 -> 191
3366 -> 3364
3367 -> 55
3367 -> 58
3367 -> 191
3367 -> 3364
3368 -> 215
3368 -> 1334
3368 -> 3369
3368 -> 3370
3369 -> 376
3370 -> 353
3370 -> 3777
3371 -> 353
3371 -> 366
3371 -> 2898
3372 -> 94
3372 -> 162
3372 -> 368
3372 -> 369
3372 -> 399
3372 -> 2898
3372 -> 2952
3373 -> 353
3373 -> 366
3373 -> 2885
3373 -> 2886
3373 -> 2898
3374 -> 370
3374 -> 2898
3375 -> 1338
3375 -> 2898
3375 -> 3376
3376 -> 3635
3376 -> 3641
3377 -> 382
3377 -> 2898
3378 -> 353
3379 -> 3370
3380 -> 382
3380 -> 2894
3381 -> 382
3381 -> 2880
3382 -> 382
3382 -> 2896
3383 -> 382
3383 -> 1579
3383 -> 2900
3384 -> 63
3384 -> 382
3385 -> 382
3386 -> 360
3386 -> 382
3386 -> 2898
3387 -> 382
3387 -> 3386
3388 -> 1578
3388 -> 3386
3389 -> 382
3389 -> 3388
3390 -> 382
3390 -> 1579
3390 -> 2898
3391 -> 382
3391 -> 2898
3392 -> 382
3392 -> 1578
3392 -> 2898
3393 -> 382
3394 -> 382
3395 -> 378
3395 -> 382
3396 -> 1341
3397 -> 167
3398 -> 3399
3400 -> 299
3400 -> 1424
3400 -> 3397
3400 -> 3401
3401 -> 297
3402 -> 299
3402 -> 970
3402 -> 3397
3402 -> 3401
3403 -> 299
3403 -> 302
3403 -> 3397
3403 -> 3401
3404 -> 299
3404 -> 1512
3404 -> 3397
3404 -> 3401
3405 -> 3404
3406 -> 55
3406 -> 498
3406 -> 504
3406 -> 1782
3406 -> 1849
3406 -> 1850
3406 -> 2046
3406 -> 3052
3407 -> 3408
3408 -> 283
3409 -> 2601
3409 -> 3410
3410 -> 91
3410 -> 285
3411 -> 2601
3411 -> 3412
3412 -> 285
3413 -> 3414
3414 -> 1890
3414 -> 2489
3414 -> 2490
3414 -> 3415
3415 -> 3422
3416 -> 3
3416 -> 3055
3416 -> 3415
3417 -> 3
3417 -> 3059
3417 -> 3060
3417 -> 3415
3418 -> 286
3419 -> 284
3420 -> 293
3420 -> 3052
3421 -> 94
3421 -> 293
3421 -> 3052
3422 -> 295
3423 -> 298
3424 -> 81
3424 -> 287
3424 -> 305
3424 -> 535
3424 -> 3423
3425 -> 21
3425 -> 27
3425 -> 379
3426 -> 300
3427 -> 94
3427 -> 287
3427 -> 296
3427 -> 299
3427 -> 305
3427 -> 3423
3428 -> 167
3428 -> 172
3428 -> 299
3428 -> 302
3428 -> 3399
3428 -> 3401
3429 -> 167
3429 -> 177
3429 -> 299
3429 -> 1424
3429 -> 3401
3430 -> 167
3430 -> 175
3430 -> 200
3430 -> 211
3430 -> 212
3430 -> 299
3430 -> 1424
3430 -> 1579
3430 -> 3401
3431 -> 3430
3432 -> 349
3432 -> 3429
3433 -> 351
3433 -> 3429
3434 -> 3430
3435 -> 349
3435 -> 1578
3435 -> 3429
3436 -> 351
3436 -> 1578
3436 -> 3429
3437 -> 305
3437 -> 3067
3437 -> 3438
3437 -> 3439
3438 -> 3399
3439 -> 3399
3440 -> 21
3440 -> 299
3440 -> 302
3440 -> 305
3440 -> 3401
3441 -> 27
3441 -> 299
3441 -> 302
3441 -> 305
3441 -> 3401
3442 -> 172
3442 -> 3396
3443 -> 3396
3444 -> 3396
3445 -> 191
3445 -> 498
3445 -> 504
3445 -> 2008
3445 -> 2022
3445 -> 2159
3446 -> 55
3446 -> 191
3446 -> 3445
3447 -> 55
3447 -> 58
3447 -> 191
3447 -> 3445
3448 -> 215
3448 -> 1334
3448 -> 3449
3448 -> 3450
3449 -> 376
3450 -> 349
3450 -> 3777
3451 -> 3449
3452 -> 349
3452 -> 366
3452 -> 3451
3453 -> 94
3453 -> 162
3453 -> 368
3453 -> 369
3453 -> 405
3453 -> 2883
3453 -> 3451
3454 -> 349
3454 -> 366
3454 -> 2885
3454 -> 2886
3454 -> 3451
3455 -> 1338
3455 -> 2420
3455 -> 3451
3456 -> 382
3456 -> 3451
3457 -> 349
3458 -> 3450
3459 -> 382
3460 -> 360
3460 -> 382
3460 -> 3451
3461 -> 382
3461 -> 3460
3462 -> 1578
3462 -> 3460
3463 -> 382
3463 -> 3462
3464 -> 382
3464 -> 1579
3464 -> 3451
3465 -> 382
3465 -> 3451
3466 -> 382
3466 -> 1578
3466 -> 3451
3467 -> 382
3468 -> 382
3469 -> 378
3469 -> 382
3470 -> 1370
3471 -> 164
3471 -> 991
3472 -> 5
3472 -> 993
3472 -> 1340
3473 -> 1071
3474 -> 1340
3475 -> 782
3475 -> 1071
3475 -> 3476
3475 -> 3477
3477 -> 238
3477 -> 706
3477 -> 815
3477 -> 1107
3477 -> 1109
3477 -> 1111
3478 -> 784
3478 -> 1071
3478 -> 3476
3478 -> 3477
3479 -> 968
3479 -> 1071
3479 -> 3476
3479 -> 3477
3480 -> 794
3480 -> 1071
3480 -> 3476
3480 -> 3477
3481 -> 3480
3482 -> 706
3482 -> 1071
3482 -> 3476
3482 -> 3477
3483 -> 815
3483 -> 1071
3483 -> 3476
3483 -> 3477
3484 -> 1071
3484 -> 1107
3484 -> 3476
3484 -> 3477
3485 -> 1071
3485 -> 1109
3485 -> 3476
3485 -> 3477
3486 -> 1071
3486 -> 1111
3486 -> 3476
3486 -> 3477
3487 -> 3488
3488 -> 218
3489 -> 2601
3489 -> 3490
3490 -> 221
3491 -> 2601
3491 -> 3492
3492 -> 222
3493 -> 1322
3493 -> 1857
3493 -> 3494
3494 -> 97
3494 -> 1339
3495 -> 223
3496 -> 232
3497 -> 227
3498 -> 94
3498 -> 232
3499 -> 234
3500 -> 236
3501 -> 235
3502 -> 3503
3503 -> 3
3503 -> 1071
3503 -> 3477
3504 -> 113
3504 -> 3477
3505 -> 148
3505 -> 1071
3505 -> 3477
3506 -> 3507
3507 -> 62
3507 -> 374
3507 -> 3505
3508 -> 3509
3509 -> 271
3509 -> 1071
3509 -> 1340
3509 -> 3477
3510 -> 239
3511 -> 3
3511 -> 5
3511 -> 467
3511 -> 1071
3511 -> 1340
3511 -> 3477
3512 -> 3
3512 -> 367
3512 -> 479
3512 -> 1071
3512 -> 1340
3512 -> 3477
3513 -> 17
3513 -> 467
3513 -> 1071
3513 -> 1340
3513 -> 3477
3514 -> 406
3514 -> 479
3514 -> 1071
3514 -> 1340
3514 -> 3477
3515 -> 19
3515 -> 467
3515 -> 1071
3515 -> 1340
3515 -> 3477
3516 -> 404
3516 -> 479
3516 -> 1071
3516 -> 1340
3516 -> 3477
3517 -> 21
3517 -> 467
3517 -> 1071
3517 -> 1340
3517 -> 3477
3518 -> 405
3518 -> 479
3518 -> 1071
3518 -> 1340
3518 -> 3477
3519 -> 23
3519 -> 467
3519 -> 1071
3519 -> 1340
3519 -> 3477
3520 -> 403
3520 -> 479
3520 -> 1071
3520 -> 1340
3520 -> 3477
3521 -> 25
3521 -> 467
3521 -> 1071
3521 -> 1340
3521 -> 3477
3522 -> 27
3522 -> 467
3522 -> 1071
3522 -> 1340
3522 -> 3477
3523 -> 29
3523 -> 467
3523 -> 1071
3523 -> 1340
3523 -> 3477
3524 -> 402
3524 -> 479
3524 -> 1071
3524 -> 1340
3524 -> 3477
3525 -> 31
3525 -> 467
3525 -> 1071
3525 -> 1340
3525 -> 3477
3526 -> 400
3526 -> 479
3526 -> 1071
3526 -> 1340
3526 -> 3477
3527 -> 33
3527 -> 467
3527 -> 1071
3527 -> 1340
3527 -> 3477
3528 -> 35
3528 -> 467
3528 -> 1071
3528 -> 1340
3528 -> 3477
3529 -> 399
3529 -> 479
3529 -> 1071
3529 -> 1340
3529 -> 3477
3530 -> 37
3530 -> 467
3530 -> 1071
3530 -> 1340
3530 -> 3477
3531 -> 39
3531 -> 467
3531 -> 1071
3531 -> 1340
3531 -> 3477
3532 -> 398
3532 -> 479
3532 -> 1071
3532 -> 1340
3532 -> 3477
3533 -> 41
3533 -> 467
3533 -> 1071
3533 -> 1340
3533 -> 3477
3534 -> 43
3534 -> 467
3534 -> 1071
3534 -> 1340
3534 -> 3477
3535 -> 396
3535 -> 479
3535 -> 1071
3535 -> 1340
3535 -> 3477
3536 -> 40
3536 -> 41
3536 -> 467
3536 -> 1340
3536 -> 3477
3537 -> 4
3537 -> 46
3537 -> 81
3537 -> 94
3537 -> 113
3537 -> 2620
3537 -> 3536
3538 -> 421
3538 -> 1340
3538 -> 3536
3539 -> 7
3539 -> 41
3539 -> 328
3539 -> 467
3539 -> 879
3539 -> 1071
3539 -> 1340
3539 -> 3477
3540 -> 81
3540 -> 113
3540 -> 179
3540 -> 2620
3540 -> 3539
3541 -> 426
3541 -> 1071
3541 -> 1340
3541 -> 3477
3542 -> 237
3542 -> 1340
3542 -> 3477
3543 -> 9
3543 -> 1340
3543 -> 3470
3544 -> 11
3544 -> 1340
3544 -> 3470
3545 -> 15
3545 -> 1340
3545 -> 3470
3546 -> 13
3546 -> 1340
3546 -> 3470
3547 -> 17
3547 -> 1340
3547 -> 3470
3548 -> 19
3548 -> 1340
3548 -> 3470
3549 -> 21
3549 -> 1340
3549 -> 3470
3550 -> 23
3550 -> 1340
3550 -> 3470
3551 -> 25
3551 -> 1340
3551 -> 3470
3552 -> 27
3552 -> 1340
3552 -> 3470
3553 -> 29
3553 -> 1340
3553 -> 3470
3554 -> 31
3554 -> 1340
3554 -> 3470
3555 -> 33
3555 -> 1340
3555 -> 3470
3556 -> 35
3556 -> 1340
3556 -> 3470
3557 -> 37
3557 -> 1340
3557 -> 3470
3558 -> 39
3558 -> 1340
3558 -> 3470
3559 -> 41
3559 -> 1340
3559 -> 3470
3560 -> 43
3560 -> 1340
3560 -> 3470
3561 -> 3562
3562 -> 300
3562 -> 2528
3563 -> 56
3563 -> 120
3564 -> 3565
3565 -> 273
3566 -> 265
3567 -> 266
3568 -> 267
3569 -> 269
3570 -> 270
3571 -> 272
3572 -> 273
3573 -> 278
3573 -> 281
3574 -> 3
3574 -> 125
3574 -> 126
3574 -> 128
3574 -> 281
3575 -> 111
3575 -> 113
3575 -> 179
3575 -> 281
3575 -> 3573
3576 -> 279
3576 -> 280
3576 -> 281
3577 -> 278
3577 -> 280
3577 -> 281
3578 -> 113
3578 -> 278
3578 -> 280
3578 -> 281
3579 -> 278
3579 -> 279
3579 -> 281
3580 -> 113
3580 -> 278
3580 -> 279
3580 -> 281
3581 -> 148
3581 -> 279
3581 -> 3579
3582 -> 148
3582 -> 280
3582 -> 3577
3583 -> 148
3583 -> 268
3583 -> 279
3583 -> 3579
3584 -> 148
3584 -> 268
3584 -> 280
3584 -> 3577
3585 -> 271
3585 -> 278
3585 -> 279
3585 -> 3579
3586 -> 271
3586 -> 278
3586 -> 280
3586 -> 3577
3587 -> 3588
3588 -> 300
3588 -> 2528
3589 -> 215
3589 -> 3590
3590 -> 208
3590 -> 1338
3591 -> 330
3592 -> 312
3592 -> 327
3593 -> 312
3593 -> 327
3594 -> 312
3595 -> 326
3596 -> 330
3597 -> 330
3598 -> 315
3599 -> 315
3600 -> 315
3601 -> 315
3602 -> 317
3603 -> 317
3604 -> 323
3605 -> 323
3606 -> 324
3607 -> 324
3608 -> 332
3609 -> 332
3610 -> 193
3610 -> 345
3611 -> 3612
3613 -> 356
3614 -> 344
3615 -> 347
3616 -> 94
3616 -> 125
3616 -> 126
3616 -> 128
3616 -> 3617
3616 -> 3618
3617 -> 3623
3618 -> 94
3618 -> 316
3618 -> 345
3619 -> 113
3619 -> 318
3619 -> 3617
3619 -> 3618
3620 -> 3618
3621 -> 3622
3622 -> 268
3622 -> 3623
3623 -> 94
3623 -> 331
3623 -> 345
3624 -> 358
3625 -> 360
3625 -> 3615
3625 -> 3626
3625 -> 3627
3625 -> 3628
3625 -> 3629
3625 -> 3630
3625 -> 3631
3625 -> 3632
3625 -> 3633
3626 -> 3635
3626 -> 3641
3627 -> 3635
3627 -> 3641
3628 -> 3635
3628 -> 3641
3629 -> 3635
3629 -> 3641
3630 -> 3635
3630 -> 3641
3631 -> 3635
3631 -> 3641
3632 -> 3635
3632 -> 3641
3633 -> 3635
3633 -> 3641
3634 -> 389
3634 -> 3635
3634 -> 3636
3637 -> 62
3637 -> 248
3637 -> 389
3637 -> 3635
3638 -> 248
3638 -> 389
3638 -> 3635
3639 -> 252
3639 -> 389
3639 -> 3635
3640 -> 361
3641 -> 200
3642 -> 348
3642 -> 356
3643 -> 348
3643 -> 358
3644 -> 349
3644 -> 356
3645 -> 349
3645 -> 358
3646 -> 350
3646 -> 356
3647 -> 350
3647 -> 358
3648 -> 351
3648 -> 356
3649 -> 351
3649 -> 358
3650 -> 352
3650 -> 356
3651 -> 352
3651 -> 358
3652 -> 353
3652 -> 356
3653 -> 353
3653 -> 358
3654 -> 354
3654 -> 356
3655 -> 354
3655 -> 358
3656 -> 355
3656 -> 356
3657 -> 355
3657 -> 358
3658 -> 3659
3659 -> 300
3659 -> 2528
3660 -> 1341
3661 -> 167
3662 -> 3663
3664 -> 1424
3664 -> 3661
3664 -> 3665
3664 -> 3666
3665 -> 300
3666 -> 160
3667 -> 970
3667 -> 3661
3667 -> 3665
3667 -> 3666
3668 -> 302
3668 -> 3661
3668 -> 3665
3668 -> 3666
3669 -> 1512
3669 -> 3661
3669 -> 3665
3669 -> 3666
3670 -> 3669
3671 -> 1361
3671 -> 3668
3672 -> 1359
3672 -> 3668
3673 -> 3674
3674 -> 94
3674 -> 160
3674 -> 287
3675 -> 3676
3676 -> 3
3676 -> 94
3676 -> 160
3676 -> 287
3676 -> 296
3677 -> 3678
3678 -> 3
3678 -> 94
3678 -> 160
3678 -> 176
3678 -> 287
3678 -> 296
3678 -> 300
3678 -> 367
3678 -> 415
3678 -> 647
3678 -> 1406
3678 -> 1558
3678 -> 1644
3679 -> 3
3679 -> 94
3679 -> 160
3679 -> 162
3679 -> 166
3679 -> 170
3679 -> 182
3679 -> 287
3680 -> 160
3681 -> 5
3682 -> 300
3683 -> 94
3683 -> 287
3683 -> 296
3683 -> 3680
3683 -> 3684
3685 -> 3
3685 -> 167
3685 -> 174
3685 -> 176
3685 -> 296
3685 -> 302
3685 -> 303
3685 -> 367
3685 -> 415
3685 -> 1558
3685 -> 1644
3685 -> 3663
3685 -> 3665
3685 -> 3666
3685 -> 3678
3686 -> 174
3686 -> 296
3686 -> 303
3686 -> 3680
3686 -> 3687
3688 -> 167
3688 -> 172
3688 -> 302
3688 -> 3663
3688 -> 3665
3688 -> 3666
3689 -> 167
3689 -> 177
3689 -> 1424
3689 -> 3665
3689 -> 3666
3690 -> 167
3690 -> 177
3690 -> 1427
3690 -> 3665
3690 -> 3666
3691 -> 167
3691 -> 175
3691 -> 200
3691 -> 211
3691 -> 212
3691 -> 1424
3691 -> 1579
3691 -> 3665
3691 -> 3666
3692 -> 3691
3693 -> 3691
3694 -> 172
3694 -> 3660
3695 -> 5
3695 -> 7
3695 -> 113
3695 -> 179
3696 -> 3
3696 -> 605
3697 -> 2012
3697 -> 2159
3697 -> 2277
3697 -> 3687
3697 -> 3698
3699 -> 191
3699 -> 3697
3699 -> 3700
3700 -> 541
3700 -> 544
3700 -> 545
3700 -> 547
3700 -> 548
3700 -> 1406
3700 -> 3687
3701 -> 55
3701 -> 191
3701 -> 3699
3702 -> 55
3702 -> 58
3702 -> 191
3702 -> 3699
3703 -> 3704
3704 -> 330
3705 -> 215
3705 -> 3706
3706 -> 1338
3707 -> 327
3707 -> 3708
3708 -> 337
3709 -> 327
3709 -> 3708
3710 -> 327
3710 -> 3708
3711 -> 327
3711 -> 3708
3712 -> 327
3712 -> 3708
3713 -> 327
3713 -> 3708
3714 -> 327
3714 -> 3708
3715 -> 327
3715 -> 3708
3716 -> 3
3716 -> 166
3716 -> 170
3716 -> 176
3716 -> 182
3716 -> 3708
3716 -> 3717
3717 -> 3
3717 -> 310
3717 -> 327
3717 -> 348
3717 -> 349
3717 -> 350
3717 -> 351
3717 -> 352
3717 -> 353
3717 -> 354
3717 -> 355
3717 -> 731
3717 -> 736
3717 -> 2012
3717 -> 2277
3717 -> 2418
3717 -> 2879
3717 -> 2949
3717 -> 3370
3717 -> 3450
3717 -> 3698
3717 -> 3777
3717 -> 3778
3717 -> 3779
3717 -> 3780
3717 -> 3781
3717 -> 3782
3717 -> 3783
3717 -> 3784
3717 -> 3785
3717 -> 3786
3717 -> 3787
3717 -> 3788
3717 -> 3789
3717 -> 3790
3717 -> 3791
3717 -> 3792
3717 -> 3793
3717 -> 3794
3717 -> 3795
3717 -> 3796
3717 -> 3797
3718 -> 312
3718 -> 327
3719 -> 312
3719 -> 327
3720 -> 312
3721 -> 315
3722 -> 315
3723 -> 317
3724 -> 317
3725 -> 319
3726 -> 319
3727 -> 332
3728 -> 332
3729 -> 332
3730 -> 3635
3730 -> 3641
3731 -> 3635
3731 -> 3641
3732 -> 3635
3732 -> 3641
3733 -> 338
3733 -> 3635
3733 -> 3727
3733 -> 3734
3734 -> 2432
3735 -> 3
3735 -> 199
3735 -> 357
3735 -> 3635
3735 -> 3708
3736 -> 3
3736 -> 199
3736 -> 359
3736 -> 3635
3736 -> 3708
3737 -> 199
3737 -> 3635
3737 -> 3708
3737 -> 3738
3738 -> 1375
3739 -> 199
3739 -> 3635
3739 -> 3708
3739 -> 3738
3740 -> 199
3740 -> 3635
3740 -> 3708
3740 -> 3738
3741 -> 199
3741 -> 3635
3741 -> 3708
3741 -> 3738
3742 -> 199
3742 -> 3635
3742 -> 3708
3742 -> 3738
3743 -> 199
3743 -> 3635
3743 -> 3708
3743 -> 3738
3744 -> 199
3744 -> 3635
3744 -> 3708
3744 -> 3738
3745 -> 199
3745 -> 3635
3745 -> 3708
3745 -> 3738
3746 -> 199
3746 -> 2258
3746 -> 3635
3746 -> 3708
3746 -> 3747
3747 -> 360
3747 -> 1375
3748 -> 199
3748 -> 3635
3748 -> 3708
3748 -> 3747
3749 -> 199
3749 -> 3635
3749 -> 3708
3749 -> 3747
3750 -> 199
3750 -> 3635
3750 -> 3708
3750 -> 3747
3751 -> 199
3751 -> 3635
3751 -> 3708
3751 -> 3747
3752 -> 199
3752 -> 3635
3752 -> 3708
3752 -> 3747
3753 -> 199
3753 -> 3635
3753 -> 3708
3753 -> 3747
3754 -> 199
3754 -> 3635
3754 -> 3708
3754 -> 3747
3755 -> 199
3755 -> 3635
3755 -> 3708
3755 -> 3747
3756 -> 199
3756 -> 2258
3756 -> 3635
3756 -> 3708
3756 -> 3747
3757 -> 3748
3758 -> 3749
3759 -> 3750
3760 -> 3751
3761 -> 3752
3762 -> 3753
3763 -> 3754
3764 -> 3755
3765 -> 199
3765 -> 1579
3765 -> 3635
3765 -> 3708
3766 -> 3765
3767 -> 375
3767 -> 2889
3767 -> 2894
3767 -> 2956
3767 -> 3376
3767 -> 3730
3767 -> 3731
3767 -> 3732
3767 -> 3768
3768 -> 1375
3768 -> 2419
3768 -> 2420
3769 -> 148
3769 -> 375
3769 -> 2880
3769 -> 2889
3769 -> 2956
3769 -> 3376
3769 -> 3730
3769 -> 3731
3769 -> 3732
3769 -> 3768
3770 -> 148
3770 -> 375
3770 -> 2889
3770 -> 2896
3770 -> 2956
3770 -> 3376
3770 -> 3730
3770 -> 3731
3770 -> 3732
3770 -> 3768
3771 -> 148
3771 -> 375
3771 -> 2889
3771 -> 2898
3771 -> 2956
3771 -> 3376
3771 -> 3730
3771 -> 3731
3771 -> 3732
3771 -> 3768
3772 -> 148
3772 -> 375
3772 -> 2889
3772 -> 2900
3772 -> 2956
3772 -> 3376
3772 -> 3730
3772 -> 3731
3772 -> 3732
3772 -> 3768
3773 -> 63
3773 -> 2889
3773 -> 2956
3773 -> 3376
3773 -> 3730
3773 -> 3731
3773 -> 3732
3773 -> 3768
3774 -> 327
3774 -> 3775
3775 -> 204
3775 -> 214
3775 -> 252
3775 -> 328
3775 -> 338
3775 -> 375
3775 -> 1375
3775 -> 2419
3775 -> 2420
3775 -> 2889
3775 -> 2956
3775 -> 3376
3775 -> 3730
3775 -> 3731
3775 -> 3732
3775 -> 3737
3775 -> 3739
3776 -> 1680
3777 -> 60
3778 -> 348
3778 -> 349
3778 -> 351
3778 -> 352
3778 -> 353
3778 -> 354
3778 -> 355
3778 -> 3777
3779 -> 348
3779 -> 350
3779 -> 351
3779 -> 352
3779 -> 353
3779 -> 354
3779 -> 355
3779 -> 3777
3780 -> 348
3780 -> 350
3780 -> 351
3780 -> 3777
3781 -> 348
3781 -> 351
3781 -> 352
3781 -> 353
3781 -> 354
3781 -> 355
3781 -> 3777
3782 -> 348
3782 -> 351
3782 -> 3777
3783 -> 351
3783 -> 352
3783 -> 353
3783 -> 354
3783 -> 355
3783 -> 3777
3784 -> 348
3784 -> 3777
3785 -> 350
3785 -> 3777
3786 -> 354
3786 -> 3777
3787 -> 355
3787 -> 3777
3790 -> 3800
3791 -> 3800
3792 -> 3800
3793 -> 3800
3794 -> 3800
3795 -> 3800
3796 -> 3800
3797 -> 3800
3798 -> 3799
3800 -> 195
3800 -> 3777
3800 -> 3799
3801 -> 107
3802 -> 215
3802 -> 1334
3802 -> 3786
3802 -> 3803
3803 -> 376
3804 -> 354
3804 -> 366
3804 -> 2900
3805 -> 94
3805 -> 162
3805 -> 368
3805 -> 369
3805 -> 398
3805 -> 2900
3805 -> 2952
3806 -> 354
3806 -> 366
3806 -> 2885
3806 -> 2886
3806 -> 2900
3807 -> 370
3807 -> 2900
3808 -> 1338
3808 -> 2900
3808 -> 3731
3809 -> 382
3809 -> 2900
3810 -> 354
3811 -> 3786
3812 -> 382
3812 -> 2894
3813 -> 382
3813 -> 2880
3814 -> 382
3814 -> 2896
3815 -> 382
3815 -> 2898
3816 -> 63
3816 -> 382
3817 -> 382
3818 -> 360
3818 -> 382
3818 -> 2900
3819 -> 382
3819 -> 3818
3820 -> 1578
3820 -> 3818
3821 -> 382
3821 -> 3820
3822 -> 382
3822 -> 1579
3822 -> 2900
3823 -> 382
3823 -> 2900
3824 -> 382
3824 -> 1578
3824 -> 2900
3825 -> 382
3826 -> 382
3827 -> 378
3827 -> 382
3828 -> 1341
3829 -> 167
3830 -> 3399
3831 -> 299
3831 -> 1427
3831 -> 3829
3831 -> 3832
3832 -> 297
3833 -> 299
3833 -> 1424
3833 -> 3829
3833 -> 3832
3834 -> 299
3834 -> 970
3834 -> 3829
3834 -> 3832
3835 -> 299
3835 -> 302
3835 -> 3829
3835 -> 3832
3836 -> 299
3836 -> 1512
3836 -> 3829
3836 -> 3832
3837 -> 3836
3838 -> 1361
3838 -> 3835
3839 -> 1359
3839 -> 3835
3840 -> 484
3840 -> 487
3840 -> 489
3840 -> 491
3840 -> 3841
3841 -> 3854
3842 -> 3
3842 -> 3055
3842 -> 3841
3843 -> 3
3843 -> 1236
3843 -> 3173
3843 -> 3174
3843 -> 3175
3843 -> 3841
3844 -> 3845
3845 -> 94
3845 -> 287
3845 -> 2753
3846 -> 283
3847 -> 91
3847 -> 285
3848 -> 285
3849 -> 286
3850 -> 293
3850 -> 3851
3852 -> 94
3852 -> 293
3852 -> 3851
3853 -> 3854
3854 -> 295
3855 -> 3854
3856 -> 3854
3857 -> 3854
3858 -> 298
3859 -> 31
3859 -> 35
3859 -> 39
3859 -> 43
3859 -> 379
3860 -> 300
3861 -> 94
3861 -> 287
3861 -> 296
3861 -> 299
3861 -> 305
3861 -> 3858
3862 -> 167
3862 -> 172
3862 -> 299
3862 -> 302
3862 -> 3399
3862 -> 3832
3863 -> 167
3863 -> 177
3863 -> 299
3863 -> 1427
3863 -> 3832
3864 -> 167
3864 -> 175
3864 -> 200
3864 -> 211
3864 -> 212
3864 -> 299
3864 -> 1427
3864 -> 1579
3864 -> 3832
3865 -> 3864
3866 -> 352
3866 -> 3863
3867 -> 353
3867 -> 3863
3868 -> 354
3868 -> 3863
3869 -> 355
3869 -> 3863
3870 -> 3864
3871 -> 352
3871 -> 1578
3871 -> 3863
3872 -> 353
3872 -> 1578
3872 -> 3863
3873 -> 354
3873 -> 1578
3873 -> 3863
3874 -> 355
3874 -> 1578
3874 -> 3863
3875 -> 172
3875 -> 3828
3876 -> 305
3876 -> 3322
3876 -> 3877
3876 -> 3878
3876 -> 3879
3876 -> 3880
3877 -> 3399
3878 -> 3399
3879 -> 3399
3880 -> 3399
3881 -> 3882
3882 -> 92
3882 -> 95
3882 -> 111
3882 -> 180
3882 -> 305
3883 -> 31
3883 -> 299
3883 -> 302
3883 -> 305
3883 -> 3832
3884 -> 35
3884 -> 299
3884 -> 302
3884 -> 305
3884 -> 3832
3885 -> 39
3885 -> 299
3885 -> 302
3885 -> 305
3885 -> 3832
3886 -> 43
3886 -> 299
3886 -> 302
3886 -> 305
3886 -> 3832
3887 -> 3828
3888 -> 3828
3889 -> 3828
3890 -> 3828
3891 -> 191
3891 -> 3892
3893 -> 215
3893 -> 1334
3893 -> 3785
3893 -> 3894
3894 -> 376
3895 -> 350
3895 -> 366
3895 -> 2894
3896 -> 94
3896 -> 162
3896 -> 368
3896 -> 369
3896 -> 403
3896 -> 2883
3896 -> 2894
3897 -> 350
3897 -> 366
3897 -> 2885
3897 -> 2886
3897 -> 2894
3898 -> 370
3898 -> 2894
3899 -> 1338
3899 -> 2894
3899 -> 3730
3900 -> 382
3900 -> 2894
3901 -> 350
3902 -> 3785
3903 -> 382
3903 -> 1579
3903 -> 2880
3904 -> 382
3904 -> 1579
3904 -> 2896
3905 -> 382
3905 -> 1579
3905 -> 2898
3906 -> 382
3906 -> 1579
3906 -> 2900
3907 -> 63
3907 -> 382
3908 -> 382
3909 -> 360
3909 -> 382
3909 -> 2894
3910 -> 382
3910 -> 3909
3911 -> 1578
3911 -> 3909
3912 -> 382
3912 -> 3911
3913 -> 382
3913 -> 1579
3913 -> 2894
3914 -> 382
3914 -> 2894
3915 -> 382
3915 -> 1578
3915 -> 2894
3916 -> 382
3917 -> 382
3918 -> 378
3918 -> 382
3919 -> 1341
3920 -> 167
3921 -> 3399
3922 -> 299
3922 -> 1424
3922 -> 3920
3922 -> 3923
3923 -> 297
3924 -> 299
3924 -> 970
3924 -> 3920
3924 -> 3923
3925 -> 299
3925 -> 302
3925 -> 3920
3925 -> 3923
3926 -> 299
3926 -> 1512
3926 -> 3920
3926 -> 3923
3927 -> 3926
3928 -> 504
3928 -> 505
3929 -> 3930
3930 -> 283
3931 -> 2601
3931 -> 3932
3932 -> 91
3932 -> 285
3933 -> 2601
3933 -> 3934
3934 -> 285
3935 -> 3052
3935 -> 3936
3936 -> 853
3936 -> 1890
3936 -> 2489
3936 -> 3937
3937 -> 3944
3938 -> 3
3938 -> 3055
3938 -> 3937
3939 -> 3
3939 -> 3058
3939 -> 3059
3939 -> 3937
3940 -> 286
3941 -> 284
3942 -> 293
3942 -> 3052
3943 -> 94
3943 -> 293
3943 -> 3052
3944 -> 295
3945 -> 298
3946 -> 81
3946 -> 287
3946 -> 305
3946 -> 535
3946 -> 3945
3947 -> 17
3947 -> 21
3947 -> 379
3948 -> 300
3949 -> 94
3949 -> 287
3949 -> 296
3949 -> 299
3949 -> 305
3949 -> 3945
3950 -> 167
3950 -> 172
3950 -> 299
3950 -> 302
3950 -> 3399
3950 -> 3923
3951 -> 167
3951 -> 177
3951 -> 299
3951 -> 1424
3951 -> 3923
3952 -> 167
3952 -> 175
3952 -> 200
3952 -> 211
3952 -> 212
3952 -> 299
3952 -> 1424
3952 -> 1579
3952 -> 3923
3953 -> 3952
3954 -> 348
3954 -> 3951
3955 -> 349
3955 -> 3951
3956 -> 3952
3957 -> 348
3957 -> 1578
3957 -> 3951
3958 -> 349
3958 -> 1578
3958 -> 3951
3959 -> 305
3959 -> 3067
3959 -> 3960
3959 -> 3961
3960 -> 3399
3961 -> 3399
3962 -> 3963
3963 -> 848
3963 -> 2721
3963 -> 3006
3963 -> 3955
3963 -> 3959
3964 -> 17
3964 -> 299
3964 -> 302
3964 -> 305
3964 -> 3923
3965 -> 21
3965 -> 299
3965 -> 302
3965 -> 305
3965 -> 3923
3966 -> 172
3966 -> 3919
3967 -> 3919
3968 -> 3919
3969 -> 191
3969 -> 3970
3971 -> 55
3971 -> 191
3971 -> 3969
3972 -> 55
3972 -> 58
3972 -> 191
3972 -> 3969
3973 -> 1341
3974 -> 167
3975 -> 3399
3976 -> 299
3976 -> 1424
3976 -> 3974
3976 -> 3977
3977 -> 297
3978 -> 299
3978 -> 970
3978 -> 3974
3978 -> 3977
3979 -> 299
3979 -> 302
3979 -> 3974
3979 -> 3977
3980 -> 299
3980 -> 1512
3980 -> 3974
3980 -> 3977
3981 -> 3980
3982 -> 1361
3982 -> 3979
3983 -> 1359
3983 -> 3979
3984 -> 498
3984 -> 504
3984 -> 505
3985 -> 3
3985 -> 3055
3985 -> 3986
3986 -> 3995
3987 -> 3
3987 -> 3058
3987 -> 3059
3987 -> 3060
3987 -> 3986
3988 -> 283
3989 -> 91
3989 -> 285
3990 -> 285
3991 -> 286
3992 -> 293
3992 -> 3993
3994 -> 94
3994 -> 293
3994 -> 3993
3995 -> 295
3996 -> 298
3997 -> 17
3997 -> 21
3997 -> 27
3997 -> 379
3998 -> 300
3999 -> 94
3999 -> 287
3999 -> 296
3999 -> 299
3999 -> 305
3999 -> 3996
4000 -> 167
4000 -> 172
4000 -> 299
4000 -> 302
4000 -> 3399
4000 -> 3977
4001 -> 167
4001 -> 177
4001 -> 299
4001 -> 1424
4001 -> 3977
4002 -> 167
4002 -> 175
4002 -> 200
4002 -> 211
4002 -> 212
4002 -> 299
4002 -> 1424
4002 -> 1579
4002 -> 3977
4003 -> 4002
4004 -> 348
4004 -> 4001
4005 -> 349
4005 -> 4001
4006 -> 351
4006 -> 4001
4007 -> 4002
4008 -> 348
4008 -> 1578
4008 -> 4001
4009 -> 349
4009 -> 1578
4009 -> 4001
4010 -> 351
4010 -> 1578
4010 -> 4001
4011 -> 172
4011 -> 3973
4012 -> 305
4012 -> 3067
4012 -> 4013
4012 -> 4014
4012 -> 4015
4013 -> 3399
4014 -> 3399
4015 -> 3399
4016 -> 4017
4017 -> 95
4017 -> 305
4017 -> 734
4017 -> 4013
4017 -> 4014
4017 -> 4015
4018 -> 4019
4019 -> 92
4019 -> 95
4019 -> 111
4019 -> 180
4019 -> 305
4020 -> 4021
4021 -> 95
4021 -> 305
4021 -> 2616
4021 -> 4013
4021 -> 4014
4021 -> 4015
4022 -> 4023
4023 -> 92
4023 -> 95
4023 -> 111
4023 -> 180
4023 -> 305
4024 -> 4025
4025 -> 848
4025 -> 2647
4025 -> 4021
4026 -> 17
4026 -> 299
4026 -> 302
4026 -> 305
4026 -> 3977
4027 -> 21
4027 -> 299
4027 -> 302
4027 -> 305
4027 -> 3977
4028 -> 27
4028 -> 299
4028 -> 302
4028 -> 305
4028 -> 3977
4029 -> 3973
4030 -> 3973
4031 -> 3973
4032 -> 191
4032 -> 2172
4033 -> 215
4033 -> 1334
4033 -> 3784
4033 -> 4034
4034 -> 376
4035 -> 4034
4036 -> 348
4036 -> 366
4036 -> 4035
4037 -> 94
4037 -> 162
4037 -> 368
4037 -> 369
4037 -> 406
4037 -> 2883
4037 -> 4035
4038 -> 348
4038 -> 366
4038 -> 2885
4038 -> 2886
4038 -> 4035
4039 -> 1338
4039 -> 2419
4039 -> 4035
4040 -> 382
4040 -> 4035
4041 -> 348
4042 -> 3784
4043 -> 382
4044 -> 360
4044 -> 382
4044 -> 4035
4045 -> 382
4045 -> 4044
4046 -> 1578
4046 -> 4044
4047 -> 382
4047 -> 4046
4048 -> 382
4048 -> 1579
4048 -> 4035
4049 -> 382
4049 -> 4035
4050 -> 382
4050 -> 1578
4050 -> 4035
4051 -> 382
4052 -> 382
4053 -> 378
4053 -> 382
}
