M:Motivation:<init>() (O)java.lang.Object:<init>()
M:Motivation:main(java.lang.String[]) (O)java.awt.Frame:<init>(java.lang.String)
M:Motivation:main(java.lang.String[]) (O)java.awt.Button:<init>(java.lang.String)
M:Motivation:main(java.lang.String[]) (M)java.awt.Button:setBounds(int,int,int,int)
M:Motivation:main(java.lang.String[]) (O)Motivation$1:<init>()
M:Motivation:main(java.lang.String[]) (M)java.awt.Button:addActionListener(java.awt.event.ActionListener)
M:Motivation:main(java.lang.String[]) (M)java.awt.Frame:add(java.awt.Component)
M:Motivation:main(java.lang.String[]) (M)java.awt.Frame:setSize(int,int)
M:Motivation:main(java.lang.String[]) (M)java.awt.Frame:setLayout(java.awt.LayoutManager)
M:Motivation:main(java.lang.String[]) (M)java.awt.Frame:setVisible(boolean)
M:LambdaWithParams:<init>() (O)java.lang.Object:<init>()
M:LambdaWithParams:main(java.lang.String[]) (D)StringConcat:sconcat()
M:LambdaWithParams:main(java.lang.String[]) (O)java.lang.StringBuilder:<init>()
M:LambdaWithParams:main(java.lang.String[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:LambdaWithParams:main(java.lang.String[]) (I)StringConcat:sconcat(java.lang.String,java.lang.String)
M:LambdaWithParams:main(java.lang.String[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:LambdaWithParams:main(java.lang.String[]) (M)java.lang.StringBuilder:toString()
M:LambdaWithParams:main(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
M:LambdaWithParams:lambda$main$0(java.lang.String,java.lang.String) (O)java.lang.StringBuilder:<init>()
M:LambdaWithParams:lambda$main$0(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:LambdaWithParams:lambda$main$0(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:LambdaWithParams:lambda$main$0(java.lang.String,java.lang.String) (M)java.lang.StringBuilder:toString()
M:Motivation$1:<init>() (O)java.lang.Object:<init>()
M:Motivation$1:actionPerformed(java.awt.event.ActionEvent) (M)java.io.PrintStream:println(java.lang.String)
M:Lambda:<init>() (O)java.lang.Object:<init>()
M:Lambda:main(java.lang.String[]) (O)java.awt.Frame:<init>(java.lang.String)
M:Lambda:main(java.lang.String[]) (O)java.awt.Button:<init>(java.lang.String)
M:Lambda:main(java.lang.String[]) (M)java.awt.Button:setBounds(int,int,int,int)
M:Lambda:main(java.lang.String[]) (D)java.awt.event.ActionListener:actionPerformed()
M:Lambda:main(java.lang.String[]) (M)java.awt.Button:addActionListener(java.awt.event.ActionListener)
M:Lambda:main(java.lang.String[]) (M)java.awt.Frame:add(java.awt.Component)
M:Lambda:main(java.lang.String[]) (M)java.awt.Frame:setSize(int,int)
M:Lambda:main(java.lang.String[]) (M)java.awt.Frame:setLayout(java.awt.LayoutManager)
M:Lambda:main(java.lang.String[]) (M)java.awt.Frame:setVisible(boolean)
M:Lambda:lambda$main$0(java.awt.event.ActionEvent) (M)java.io.PrintStream:println(java.lang.String)
M:IterateMapUsingLambda:<init>() (O)java.lang.Object:<init>()
M:IterateMapUsingLambda:main(java.lang.String[]) (O)java.util.HashMap:<init>()
M:IterateMapUsingLambda:main(java.lang.String[]) (S)java.lang.Integer:valueOf(int)
M:IterateMapUsingLambda:main(java.lang.String[]) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:IterateMapUsingLambda:main(java.lang.String[]) (S)java.lang.Integer:valueOf(int)
M:IterateMapUsingLambda:main(java.lang.String[]) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:IterateMapUsingLambda:main(java.lang.String[]) (S)java.lang.Integer:valueOf(int)
M:IterateMapUsingLambda:main(java.lang.String[]) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:IterateMapUsingLambda:main(java.lang.String[]) (S)java.lang.Integer:valueOf(int)
M:IterateMapUsingLambda:main(java.lang.String[]) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:IterateMapUsingLambda:main(java.lang.String[]) (S)java.lang.Integer:valueOf(int)
M:IterateMapUsingLambda:main(java.lang.String[]) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:IterateMapUsingLambda:main(java.lang.String[]) (D)java.util.function.BiConsumer:accept()
M:IterateMapUsingLambda:main(java.lang.String[]) (I)java.util.Map:forEach(java.util.function.BiConsumer)
M:IterateMapUsingLambda:lambda$main$0(java.lang.String,java.lang.Integer) (O)java.lang.StringBuilder:<init>()
M:IterateMapUsingLambda:lambda$main$0(java.lang.String,java.lang.Integer) (M)java.lang.StringBuilder:append(java.lang.String)
M:IterateMapUsingLambda:lambda$main$0(java.lang.String,java.lang.Integer) (M)java.lang.StringBuilder:append(java.lang.String)
M:IterateMapUsingLambda:lambda$main$0(java.lang.String,java.lang.Integer) (M)java.lang.StringBuilder:append(java.lang.String)
M:IterateMapUsingLambda:lambda$main$0(java.lang.String,java.lang.Integer) (M)java.lang.StringBuilder:append(java.lang.Object)
M:IterateMapUsingLambda:lambda$main$0(java.lang.String,java.lang.Integer) (M)java.lang.StringBuilder:toString()
M:IterateMapUsingLambda:lambda$main$0(java.lang.String,java.lang.Integer) (M)java.io.PrintStream:println(java.lang.String)
M:LambdaOwnInterface:<init>() (O)java.lang.Object:<init>()
M:LambdaOwnInterface:main(java.lang.String[]) (D)MyFunctionalInterface:sayHello()
M:LambdaOwnInterface:main(java.lang.String[]) (I)MyFunctionalInterface:sayHello()
M:LambdaOwnInterface:main(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
