digraph graphname {
rankdir="LR";
9 [label="Anonym4RefForwardAsParameter$1.<init>()V"]
13 [label="Anonym4RefForwardAsParameter$1.hoo()V"]
1 [label="Anonym4RefForwardAsParameter$2.<init>()V"]
10 [label="Anonym4RefForwardAsParameter$2.foo(LAnonymTest3;)V"]
3 [label="Anonym4RefForwardAsParameter$3.<init>()V"]
11 [label="Anonym4RefForwardAsParameter$3.foo(LAnonymTest3;)V"]
4 [label="Anonym4RefForwardAsParameter$4.<init>()V"]
16 [label="Anonym4RefForwardAsParameter$4.foo()V"]
18 [label="Anonym4RefForwardAsParameter$4.goo()V"]
6 [label="Anonym4RefForwardAsParameter$5.<init>()V"]
17 [label="Anonym4RefForwardAsParameter$5.foo()V"]
19 [label="Anonym4RefForwardAsParameter$5.goo()V"]
0 [label="Anonym4RefForwardAsParameter.main([Ljava/lang/String;)V"]
2 [label="Anonym4RefForwardAsParameter.test1(LAnonymTest1;)V"]
5 [label="Anonym4RefForwardAsParameter.test2(LAnonymTest2;)V"]
7 [label="AnonymTest1.<init>()V"]
15 [label="AnonymTest2.<init>()V"]
12 [label="AnonymTest3.<init>()V"]
14 [label="java.io.PrintStream.println(Ljava/lang/String;)V"]
8 [label="java.lang.Object.<init>()V"]
0 -> 1
0 -> 2
0 -> 3
0 -> 4
0 -> 5
0 -> 6
1 -> 7
2 -> 9
2 -> 10
2 -> 11
3 -> 7
4 -> 15
5 -> 16
5 -> 17
5 -> 18
5 -> 19
6 -> 15
7 -> 8
9 -> 12
10 -> 13
10 -> 14
11 -> 13
11 -> 14
12 -> 8
13 -> 14
15 -> 8
16 -> 14
17 -> 14
18 -> 14
19 -> 14
}
