M:SetPolimorfA:<init>(int) (O)SetPolimorfBase:<init>(int)
M:SetPolimorfA:goo() (M)java.io.PrintStream:println(java.lang.String)
M:SetPolimorfA:hoo() (M)java.io.PrintStream:println(java.lang.String)
M:SetPolimorfBase:<init>(int) (O)java.lang.Object:<init>()
M:SetPolimorfBase:foo() (O)SetPolimorfBase:goo()
M:SetPolimorfBase:foo() (M)SetPolimorfBase:hoo()
M:SetPolimorfBase:goo() (M)java.io.PrintStream:println(java.lang.String)
M:SetPolimorfBase:hoo() (M)java.io.PrintStream:println(java.lang.String)
M:SetPolimorfBase:compareTo(java.lang.Object) (M)SetPolimorfBase:compareTo(SetPolimorfBase)
M:SetPolimorfMain:<init>() (O)java.lang.Object:<init>()
M:SetPolimorfMain:main(java.lang.String[]) (O)java.util.TreeSet:<init>()
M:SetPolimorfMain:main(java.lang.String[]) (O)SetPolimorfA:<init>(int)
M:SetPolimorfMain:main(java.lang.String[]) (I)java.util.Set:add(java.lang.Object)
M:SetPolimorfMain:main(java.lang.String[]) (O)SetPolimorfB:<init>(int)
M:SetPolimorfMain:main(java.lang.String[]) (I)java.util.Set:add(java.lang.Object)
M:SetPolimorfMain:main(java.lang.String[]) (O)SetPolimorfBase:<init>(int)
M:SetPolimorfMain:main(java.lang.String[]) (I)java.util.Set:add(java.lang.Object)
M:SetPolimorfMain:main(java.lang.String[]) (I)java.util.Set:iterator()
M:SetPolimorfMain:main(java.lang.String[]) (I)java.util.Iterator:hasNext()
M:SetPolimorfMain:main(java.lang.String[]) (I)java.util.Iterator:next()
M:SetPolimorfMain:main(java.lang.String[]) (M)SetPolimorfBase:foo()
M:SetPolimorfB:<init>(int) (O)SetPolimorfBase:<init>(int)
M:SetPolimorfB:foo() (M)java.io.PrintStream:println(java.lang.String)
